
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BIN_INTEGER BOOLEAN BREAK CALL CARET CASE CASE_EQUAL CHOMP CLASS CLASS_VAR COLON COMMA COMPARE CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END END_LOWER EQUAL EXPONENT EXPONENT_ASSIGN FALSE FLOAT FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET HEX_INTEGER IF IN INSTANCE_VAR INTEGER LBRACE LEFTPAR LEFT_COR LESS LESS_EQUAL LOCAL_VAR MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NMAP NOT NOT_EQUAL OCT_INTEGER OR OR_RESERVED PERCENTW PIPE PLUS PLUS_ASSIGN PROC PUT QUOTATION RANGEEX RANGEIN RBRACE REDO RETURN RIGHTPAR RIGHT_COR SELF SET SPACE STRING SYMBOL TAB THEN TO_A TO_F TO_I TO_S TRUE UNLESS UNTIL WHEN WHILEcodigo : sentencia\n              | codigo sentenciasentencia : puts \n                 | gets\n                 | estructurasDatos\n                 | estructurasControl\n                 | method_call\n                 | block_assignment\n                 | proc_call\n                 | declaraciones\n                 | expression\n                 | to_string\n                 | comparador\n                 | range_expression\n                 | range_to_a estructurasDatos : array\n                         | acceder_arreglo\n                         | hash_operations\n                         | hash_var\n                         | set_expression\n                         | set_operations\n     estructurasControl : ifStatement\n                           | while_statement\n                           | unless_expression\n     value : num\n             | var\n             | STRING\n             | NIL\n             | SYMBOL\n           values_space : value SPACE values_space\n                     | value\n     values : value\n               | value COMMA values var : LOCAL_VAR\n           | INSTANCE_VAR\n           | CLASS_VAR\n           | GLOBAL_VAR\n            num : FLOAT\n           | INTEGER\n            gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP DOT TO_I\n             | GETS DOT CHOMP\n     puts : PUT values \n\n     array : array_explicito\n              | array_implicito\n              | array_creation\n              | newArray\n     var_arreglo : LOCAL_VAR ASSIGN array\n     array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR\n     array_implicito : PERCENTW LEFT_COR values_space RIGHT_COR\n                        | PERCENTW LEFT_COR RIGHT_COR\n     array_creation : ARRAY LEFTPAR array_explicito RIGHTPAR\n     newArray : ARRAY DOT NEW \n                 | ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR\n                 | ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR\n     acceder_arreglo : var_arreglo LEFT_COR INTEGER RIGHT_COR\n     ifStatement : IF condiciones codigo END_LOWER\n                     | IF condiciones codigo else_statement END_LOWER\n     condiciones : condicion\n                    | condiciones conectores condiciones\n     conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED\n                   | EQUAL\n     condicion : num operComp num\n                  | var operComp num\n                  | num operComp var\n     operComp : GREATER\n                 | LESS\n                 | GREATER_EQUAL\n                 | LESS_EQUAL\n                 | EQUAL\n                 | NOT_EQUAL\n                 | COMPARE\n     else_statement : ELSE codigo\n     to_string : LOCAL_VAR DOT TO_S\n     concatenar_string : STRING PLUS STRING\n                          | STRING PLUS LOCAL_VAR\n                          | LOCAL_VAR PLUS STRING\n                          | LOCAL_VAR PLUS LOCAL_VAR\n     declaracion_concatenar_string : LOCAL_VAR ASSIGN concatenar_string\n     hash_var : LOCAL_VAR ASSIGN LBRACE hash_values RBRACE\n                 | LOCAL_VAR ASSIGN LBRACE RBRACE\n     hash_values : STRING HASH_ROCKET value\n                    | STRING HASH_ROCKET value COMMA hash_values\n     hash_access : var LBRACE value RBRACE\n     hash_operations : hash_access ASSIGN value\n     variable_declaration : LOCAL_VAR ASSIGN value\n                             | LOCAL_VAR PLUS_ASSIGN value\n                             | LOCAL_VAR MULTIPLY_ASSIGN value\n                             | LOCAL_VAR MINUS_ASSIGN value\n                             | LOCAL_VAR DIVIDE_ASSIGN value\n     store_conditional_result : LOCAL_VAR ASSIGN condiciones\n     declare_data_structures : var_arreglo\n                                | hash_var\n     while_statement : WHILE condiciones codigo END_LOWER\n     condition_with_connectors : condiciones conectores condiciones\n     method_call : LOCAL_VAR LEFTPAR values RIGHTPAR\n                    | LOCAL_VAR LEFTPAR RIGHTPAR\n     print_statement : PUT LEFTPAR values RIGHTPAR\n     boolean_expression : expression GREATER expression\n                           | expression LESS expression\n                           | expression GREATER_EQUAL expression\n                           | expression LESS_EQUAL expression\n                           | expression EQUAL expression\n                           | expression NOT_EQUAL expression\n                           | boolean_value  boolean_value : TRUE\n                      | FALSE  expression : INTEGER\n                   | FLOAT\n                   | variable\n                   | STRING  variable : LOCAL_VAR\n                 | INSTANCE_VAR\n                 | CLASS_VAR\n                 | GLOBAL_VAR\n                 | CONSTANT  declaraciones : variable_declaration\n                      | store_conditional_result\n                      | declare_data_structures\n                      | var_arreglo\n                      | hash_var\n                      | LOCAL_VAR ASSIGN arithmetic_production\n                      | declaracion_concatenar_string\n                      | proc_assignment\n                      | range_declare\n     expresion : puts\n                 | gets\n                 | print_statement\n     comparador : value EQUAL value\n                   | value COMPARE value\n    range_declare : LOCAL_VAR ASSIGN range_expressionrange_expression : value RANGEIN value\n                        | value RANGEEX value\n                        | LEFTPAR value RANGEIN value RIGHTPAR\n                        | LEFTPAR value RANGEEX value RIGHTPARrange_to_a : LEFTPAR value RANGEIN value RIGHTPAR DOT TO_A\n                  | LEFTPAR value RANGEEX value RIGHTPAR DOT TO_Aset_expression : SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR\n                      | SET LEFT_COR values RIGHT_CORset_operations : set_expression\n                      | set_operations set_binary_operators set_expressiondeclare_data_structures : LOCAL_VAR ASSIGN set_expressionset_binary_operators : PLUS\n                            | MINUS\n                            | AMPERSAND\n                            | PIPE\n                            | CARETunless_expression : UNLESS boolean_expression THEN expresion END\n                         | UNLESS boolean_expression THEN expresion ELSE expresion ENDarithmetic_production : num\n                             | LOCAL_VAR\n                             | num arithmetic_operators arithmetic_production\n                             | LOCAL_VAR arithmetic_operators arithmetic_productionarithmetic_operators : PLUS\n                            | MINUS\n                            | MULTIPLY\n                            | DIVIDE\n                            | MODULO\n                            | EXPONENTblock_expression : LBRACE expresion RBRACE\n                         | DO expresion END\n                         | DO expresion END_LOWER\n                         | LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE\n                         | DO PIPE LOCAL_VAR PIPE expresion END\n                         | DO PIPE LOCAL_VAR PIPE expresion END_LOWERblock_assignment : method_call block_expressionproc_expression : PROC DOT NEW block_expressionproc_assignment : LOCAL_VAR ASSIGN proc_expressionproc_call : LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR RIGHTPARproc_call : LOCAL_VAR LEFT_COR values RIGHT_COR\n                 | LOCAL_VAR LEFT_COR RIGHT_CORexpresion : condition_with_connectors'
    
_lr_action_items = {'PUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,189,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,256,259,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,284,290,294,299,301,302,303,305,306,307,308,310,313,314,],[16,16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,128,128,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,16,-60,16,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,16,16,128,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,16,-61,-67,-69,-68,-98,-51,-53,128,128,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,16,-152,128,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'GETS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,189,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,256,259,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,284,290,294,299,301,302,303,305,306,307,308,310,313,314,],[17,17,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,17,17,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,17,-60,17,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,17,17,17,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,17,-61,-67,-69,-68,-98,-51,-53,17,17,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,17,-152,17,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'LOCAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,123,128,131,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,216,217,218,219,220,221,222,224,226,227,228,233,235,236,238,239,240,241,242,243,252,253,254,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[27,27,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,71,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,71,71,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,71,71,114,-117,-118,-119,-120,-25,-28,-29,-2,-170,71,71,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,71,71,142,71,71,71,71,-50,71,71,71,71,71,71,27,-60,27,71,71,203,71,208,71,-42,-145,-101,71,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,71,-91,-92,-93,-94,71,71,-49,-133,-134,-136,-137,-89,27,71,-62,-63,-64,-65,-66,71,-70,-71,-72,-73,-74,-75,-76,27,71,114,114,114,114,114,114,-52,-54,-164,71,71,-165,-166,-33,-100,71,-176,-177,265,268,-159,-160,-161,-162,-163,-85,265,-158,274,-57,-143,-58,27,-61,-67,-69,-68,-98,-51,71,-53,71,71,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,71,-156,-79,-80,71,71,-138,-139,71,-59,27,-152,71,-173,-171,-55,71,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,93,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,216,217,218,219,220,221,222,224,226,227,233,235,236,238,239,240,241,242,243,252,253,254,255,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[37,37,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,70,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,70,70,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,70,70,109,-117,-118,-119,-120,-25,-28,-29,-2,-170,70,70,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,70,70,70,70,70,70,70,-50,164,70,70,70,70,70,70,37,-60,37,70,70,70,70,-42,-145,-101,70,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,70,-91,-92,-93,-94,70,70,-49,-133,-134,-136,-137,-89,37,70,-62,-63,-64,-65,-66,70,-70,-71,-72,-73,-74,-75,-76,70,37,70,109,109,109,109,109,109,-52,-54,-164,70,70,-165,-166,-33,-100,70,-176,-177,70,-158,-159,-160,-161,-162,-163,-85,70,-158,-57,-143,-58,37,-61,-67,-69,-68,-98,-51,70,-53,286,70,70,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,70,-156,-79,-80,70,70,-138,-139,70,-59,37,-152,70,-173,-171,-55,70,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,216,217,218,219,220,221,222,224,226,227,233,235,236,238,239,240,241,242,243,252,253,254,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[38,38,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,69,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,69,69,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,69,69,110,-117,-118,-119,-120,-25,-28,-29,-2,-170,69,69,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,69,69,69,69,69,69,69,-50,69,69,69,69,69,69,38,-60,38,69,69,69,69,-42,-145,-101,69,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,69,-91,-92,-93,-94,69,69,-49,-133,-134,-136,-137,-89,38,69,-62,-63,-64,-65,-66,69,-70,-71,-72,-73,-74,-75,-76,69,38,69,110,110,110,110,110,110,-52,-54,-164,69,69,-165,-166,-33,-100,69,-176,-177,69,-158,-159,-160,-161,-162,-163,-85,69,-158,-57,-143,-58,38,-61,-67,-69,-68,-98,-51,69,-53,69,69,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,69,-156,-79,-80,69,69,-138,-139,69,-59,38,-152,69,-173,-171,-55,69,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,50,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,188,190,191,192,193,194,195,198,201,202,204,206,207,209,211,212,214,215,217,224,228,233,235,236,238,239,240,241,242,243,252,253,254,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,290,294,299,300,301,302,303,304,305,306,307,308,310,313,314,],[40,40,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,68,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,68,68,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,111,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,68,68,154,68,68,68,68,-50,68,68,68,68,68,68,40,-60,40,68,68,68,68,-42,-145,-101,68,-78,-178,-34,-126,225,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,68,-91,-92,-93,-94,68,68,-49,-133,-134,-136,-137,-89,40,40,111,111,111,111,111,111,-52,-54,-164,68,-165,-166,-33,-100,68,-176,-177,269,-85,273,-57,-143,-58,40,-61,-67,-69,-68,-98,-51,68,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,68,-156,-79,-80,68,68,-138,-139,68,-59,40,-152,-173,-171,-55,68,-167,-168,-169,225,-138,-139,-140,-141,-153,-142,-56,]),'LEFTPAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,83,85,92,101,102,105,128,133,134,136,137,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,170,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[28,28,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,82,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,120,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,138,155,-50,28,-60,28,204,-42,-145,-101,212,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,234,28,28,-52,255,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,28,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,28,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'SET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,85,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[47,47,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,47,-147,-148,-149,-150,-151,47,-50,47,-60,47,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,47,47,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,47,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,47,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[48,48,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,48,-60,48,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,48,48,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,48,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,48,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[49,49,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,49,-60,49,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,49,49,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,49,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,49,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'UNLESS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[50,50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,50,-60,50,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,50,50,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,50,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,50,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'INSTANCE_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,224,233,235,236,238,239,240,241,242,243,252,253,254,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[51,51,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,72,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,72,72,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,72,72,115,-117,-118,-119,-120,-25,-28,-29,-2,-170,72,72,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,72,72,72,72,72,72,72,-50,72,72,72,72,72,72,51,-60,51,72,72,72,72,-42,-145,-101,72,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,72,-91,-92,-93,-94,72,72,-49,-133,-134,-136,-137,-89,51,72,-62,-63,-64,-65,-66,72,-70,-71,-72,-73,-74,-75,-76,51,72,115,115,115,115,115,115,-52,-54,-164,72,72,-165,-166,-33,-100,72,-176,-177,-85,-57,-143,-58,51,-61,-67,-69,-68,-98,-51,72,-53,72,72,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,72,-156,-79,-80,72,72,-138,-139,72,-59,51,-152,72,-173,-171,-55,72,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'CLASS_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,224,233,235,236,238,239,240,241,242,243,252,253,254,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[52,52,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,73,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,73,73,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,73,73,116,-117,-118,-119,-120,-25,-28,-29,-2,-170,73,73,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,73,73,73,73,73,73,73,-50,73,73,73,73,73,73,52,-60,52,73,73,73,73,-42,-145,-101,73,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,73,-91,-92,-93,-94,73,73,-49,-133,-134,-136,-137,-89,52,73,-62,-63,-64,-65,-66,73,-70,-71,-72,-73,-74,-75,-76,52,73,116,116,116,116,116,116,-52,-54,-164,73,73,-165,-166,-33,-100,73,-176,-177,-85,-57,-143,-58,52,-61,-67,-69,-68,-98,-51,73,-53,73,73,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,73,-156,-79,-80,73,73,-138,-139,73,-59,52,-152,73,-173,-171,-55,73,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'GLOBAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,198,201,202,204,205,206,207,209,211,212,214,215,224,233,235,236,238,239,240,241,242,243,252,253,254,256,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[53,53,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,74,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,74,74,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,74,74,117,-117,-118,-119,-120,-25,-28,-29,-2,-170,74,74,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,74,74,74,74,74,74,74,-50,74,74,74,74,74,74,53,-60,53,74,74,74,74,-42,-145,-101,74,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,74,-91,-92,-93,-94,74,74,-49,-133,-134,-136,-137,-89,53,74,-62,-63,-64,-65,-66,74,-70,-71,-72,-73,-74,-75,-76,53,74,117,117,117,117,117,117,-52,-54,-164,74,74,-165,-166,-33,-100,74,-176,-177,-85,-57,-143,-58,53,-61,-67,-69,-68,-98,-51,74,-53,74,74,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,74,-156,-79,-80,74,74,-138,-139,74,-59,53,-152,74,-173,-171,-55,74,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'CONSTANT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,50,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,190,191,192,193,194,195,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[54,54,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,54,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,54,-60,54,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,54,54,54,54,54,54,54,54,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,54,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,54,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'NIL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,188,198,201,202,204,206,207,209,211,212,214,215,224,233,235,236,238,239,240,241,242,243,252,253,254,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[57,57,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,57,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,57,57,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,57,57,57,57,57,57,57,-50,57,57,57,57,57,57,57,-60,57,57,57,57,57,-42,-145,-101,57,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,57,-91,-92,-93,-94,57,57,-49,-133,-134,-136,-137,-89,57,57,-52,-54,-164,57,-165,-166,-33,-100,57,-176,-177,-85,-57,-143,-58,57,-61,-67,-69,-68,-98,-51,57,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,57,-156,-79,-80,57,57,-138,-139,57,-59,57,-152,-173,-171,-55,57,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,82,84,85,86,87,88,89,92,94,95,96,97,98,100,101,102,105,118,119,128,132,133,134,136,138,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,168,169,172,188,198,201,202,204,206,207,209,211,212,214,215,224,233,235,236,238,239,240,241,242,243,252,253,254,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,290,294,299,300,301,302,303,305,306,307,308,310,313,314,],[58,58,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,58,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,58,58,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,58,58,58,58,58,58,58,-50,58,58,58,58,58,58,58,-60,58,58,58,58,58,-42,-145,-101,58,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,58,-91,-92,-93,-94,58,58,-49,-133,-134,-136,-137,-89,58,58,-52,-54,-164,58,-165,-166,-33,-100,58,-176,-177,-85,-57,-143,-58,58,-61,-67,-69,-68,-98,-51,58,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,58,-156,-79,-80,58,58,-138,-139,58,-59,58,-152,-173,-171,-55,58,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'LEFT_COR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,47,51,52,53,54,55,57,58,59,61,62,65,66,67,68,69,70,71,72,73,74,85,92,101,102,105,120,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,234,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[29,29,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,84,-121,-122,-123,93,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,100,-117,-118,-119,-120,-25,-28,-29,119,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,29,-50,29,-60,29,29,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,29,29,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,280,-143,-58,29,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,29,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'PERCENTW':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,85,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[59,59,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,59,-50,59,-60,59,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,59,59,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,59,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,59,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,85,92,101,102,105,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,238,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[60,60,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,60,-50,60,-60,60,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,60,60,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,60,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,60,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,102,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,198,201,202,206,207,209,211,214,215,224,233,235,236,239,240,241,242,243,252,254,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,283,290,294,299,301,302,303,305,306,307,308,310,313,314,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,-60,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,-61,-67,-69,-68,-98,-51,-53,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,-152,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'END_LOWER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,102,124,125,126,127,130,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,188,198,201,202,206,207,209,211,214,215,224,233,235,236,237,239,240,241,242,243,252,254,258,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,282,283,288,289,290,294,299,301,302,303,305,306,307,308,310,313,314,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,-60,-130,-131,-132,-179,207,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,236,243,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,281,-61,-67,-69,-68,-98,-51,-53,-99,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,-77,-152,-102,303,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,51,52,53,54,55,57,58,61,62,65,66,67,68,69,70,71,72,73,74,92,102,124,125,126,127,133,134,136,139,141,142,143,145,146,147,148,149,150,151,152,153,154,157,158,159,160,163,165,166,167,168,169,172,198,201,202,206,207,209,211,214,215,224,233,235,236,239,240,241,242,243,244,252,254,258,260,261,263,264,265,266,267,268,269,270,272,273,274,278,279,281,283,288,290,294,299,301,302,303,305,306,307,308,310,313,314,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-121,-122,-123,-96,-127,-128,-129,-112,-113,-114,-115,-44,-45,-46,-47,-117,-118,-119,-120,-25,-28,-29,-2,-170,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-50,-60,-130,-131,-132,-179,-42,-145,-101,-78,-178,-34,-126,-90,-95,-146,-48,-83,-172,-135,-25,-26,-27,-91,-92,-93,-94,-49,-133,-134,-136,-137,-89,238,-52,-54,-164,-165,-166,-33,-100,-176,-177,-85,-57,-143,-58,-61,-67,-69,-68,-98,284,-51,-53,-99,-40,-41,-175,-174,-155,-157,-154,-82,-81,-84,-156,-79,-80,-138,-139,-59,-152,-102,-173,-171,-55,-167,-168,-169,-138,-139,-140,-141,-153,-142,-56,]),'LBRACE':([7,27,51,52,53,56,85,136,211,277,],[63,-34,-35,-36,-37,118,144,-101,-100,63,]),'DO':([7,136,211,277,],[64,-101,-100,64,]),'DOT':([17,27,47,60,133,156,278,279,],[75,83,99,121,210,230,295,296,]),'PLUS':([22,23,69,70,134,142,152,154,235,265,267,313,],[-144,77,-38,-39,-145,217,227,228,-143,227,227,-142,]),'MINUS':([22,23,69,70,134,142,152,235,265,267,313,],[-144,78,-38,-39,-145,218,218,-143,218,218,-142,]),'AMPERSAND':([22,23,134,235,313,],[-144,79,-145,-143,-142,]),'PIPE':([22,23,63,64,134,203,208,235,313,],[-144,80,123,131,-145,256,259,-143,-142,]),'CARET':([22,23,134,235,313,],[-144,81,-145,-143,-142,]),'ASSIGN':([27,46,251,],[85,98,-88,]),'PLUS_ASSIGN':([27,],[86,]),'MULTIPLY_ASSIGN':([27,],[87,]),'MINUS_ASSIGN':([27,],[88,]),'DIVIDE_ASSIGN':([27,],[89,]),'EQUAL':([27,37,38,39,40,41,51,52,53,54,55,56,57,58,69,70,71,72,73,74,101,102,103,104,105,107,109,110,111,114,115,116,117,129,142,146,152,153,239,240,241,242,258,],[-34,-39,-38,-114,-27,94,-35,-36,-37,-120,-25,-26,-28,-29,-38,-39,-34,-35,-36,-37,178,-60,184,184,178,194,-112,-113,-115,-116,-117,-118,-119,178,-34,178,184,184,178,-67,-69,-68,178,]),'COMPARE':([27,37,38,40,41,51,52,53,55,56,57,58,69,70,71,72,73,74,103,104,142,152,153,],[-34,-39,-38,-27,95,-35,-36,-37,-25,-26,-28,-29,-38,-39,-34,-35,-36,-37,186,186,-34,186,186,]),'RANGEIN':([27,37,38,40,41,51,52,53,55,56,57,58,67,68,69,70,71,72,73,74,90,142,145,152,153,154,229,],[-34,-39,-38,-27,96,-35,-36,-37,-25,-26,-28,-29,-26,-27,-38,-39,-34,-35,-36,-37,161,-34,96,-25,-26,-27,275,]),'RANGEEX':([27,37,38,40,41,51,52,53,55,56,57,58,67,68,69,70,71,72,73,74,90,142,145,152,153,154,229,],[-34,-39,-38,-27,97,-35,-36,-37,-25,-26,-28,-29,-26,-27,-38,-39,-34,-35,-36,-37,162,-34,97,-25,-26,-27,276,]),'RIGHT_COR':([29,55,57,58,66,67,68,69,70,71,72,73,74,84,91,119,140,164,171,197,199,209,285,297,],[92,-25,-28,-29,-32,-26,-27,-38,-39,-34,-35,-36,-37,141,163,198,215,233,235,252,-31,-33,-30,309,]),'GREATER':([39,54,69,70,71,72,73,74,103,104,107,109,110,111,114,115,116,117,142,152,153,],[-114,-120,-38,-39,-34,-35,-36,-37,180,180,190,-112,-113,-115,-116,-117,-118,-119,-34,180,180,]),'LESS':([39,54,69,70,71,72,73,74,103,104,107,109,110,111,114,115,116,117,142,152,153,],[-114,-120,-38,-39,-34,-35,-36,-37,181,181,191,-112,-113,-115,-116,-117,-118,-119,-34,181,181,]),'GREATER_EQUAL':([39,54,69,70,71,72,73,74,103,104,107,109,110,111,114,115,116,117,142,152,153,],[-114,-120,-38,-39,-34,-35,-36,-37,182,182,192,-112,-113,-115,-116,-117,-118,-119,-34,182,182,]),'LESS_EQUAL':([39,54,69,70,71,72,73,74,103,104,107,109,110,111,114,115,116,117,142,152,153,],[-114,-120,-38,-39,-34,-35,-36,-37,183,183,193,-112,-113,-115,-116,-117,-118,-119,-34,183,183,]),'NOT_EQUAL':([39,54,69,70,71,72,73,74,103,104,107,109,110,111,114,115,116,117,142,152,153,],[-114,-120,-38,-39,-34,-35,-36,-37,185,185,195,-112,-113,-115,-116,-117,-118,-119,-34,185,185,]),'THEN':([39,54,106,108,109,110,111,112,113,114,115,116,117,245,246,247,248,249,250,],[-114,-120,189,-109,-112,-113,-115,-110,-111,-116,-117,-118,-119,-103,-104,-105,-106,-107,-108,]),'TRUE':([50,],[112,]),'FALSE':([50,],[113,]),'COMMA':([55,57,58,66,67,68,69,70,71,72,73,74,286,291,],[-25,-28,-29,132,-26,-27,-38,-39,-34,-35,-36,-37,300,304,]),'RIGHTPAR':([55,57,58,66,67,68,69,70,71,72,73,74,82,92,135,138,163,200,209,212,213,231,232,257,262,286,292,293,309,311,],[-25,-28,-29,-32,-26,-27,-38,-39,-34,-35,-36,-37,136,-50,211,214,-49,254,-33,263,264,278,279,288,290,299,305,306,313,314,]),'RBRACE':([55,57,58,65,66,67,68,69,70,71,72,73,74,102,122,124,125,126,127,133,144,196,209,223,239,240,241,242,258,260,261,287,288,291,312,],[-25,-28,-29,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-60,202,-130,-131,-132,-179,-42,224,251,-33,270,-61,-67,-69,-68,-99,-40,-41,301,-102,-86,-87,]),'SPACE':([55,57,58,67,68,69,70,71,72,73,74,199,],[-25,-28,-29,-26,-27,-38,-39,-34,-35,-36,-37,253,]),'END':([55,57,58,65,66,67,68,69,70,71,72,73,74,102,124,125,126,127,130,133,209,239,240,241,242,244,258,260,261,288,289,298,],[-25,-28,-29,-43,-32,-26,-27,-38,-39,-34,-35,-36,-37,-60,-130,-131,-132,-179,206,-42,-33,-61,-67,-69,-68,283,-99,-40,-41,-102,302,310,]),'MULTIPLY':([69,70,142,152,265,267,],[-38,-39,219,219,219,219,]),'DIVIDE':([69,70,142,152,265,267,],[-38,-39,220,220,220,220,]),'MODULO':([69,70,142,152,265,267,],[-38,-39,221,221,221,221,]),'EXPONENT':([69,70,142,152,265,267,],[-38,-39,222,222,222,222,]),'AND':([69,70,71,72,73,74,101,102,105,129,146,239,240,241,242,258,],[-38,-39,-34,-35,-36,-37,174,-60,174,174,174,174,-67,-69,-68,174,]),'OR':([69,70,71,72,73,74,101,102,105,129,146,239,240,241,242,258,],[-38,-39,-34,-35,-36,-37,175,-60,175,175,175,175,-67,-69,-68,175,]),'AND_RESERVED':([69,70,71,72,73,74,101,102,105,129,146,239,240,241,242,258,],[-38,-39,-34,-35,-36,-37,176,-60,176,176,176,176,-67,-69,-68,176,]),'OR_RESERVED':([69,70,71,72,73,74,101,102,105,129,146,239,240,241,242,258,],[-38,-39,-34,-35,-36,-37,177,-60,177,177,177,177,-67,-69,-68,177,]),'CHOMP':([75,],[133,]),'CALL':([83,],[137,]),'TO_S':([83,],[139,]),'PROC':([85,],[156,]),'NEW':([99,121,230,],[170,201,277,]),'TO_F':([210,],[260,]),'TO_I':([210,],[261,]),'HASH_ROCKET':([225,],[271,]),'TO_A':([295,296,],[307,308,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,101,105,238,],[1,172,188,282,]),'sentencia':([0,1,101,105,172,188,238,282,],[2,61,2,2,61,61,2,61,]),'puts':([0,1,63,64,101,105,172,188,189,238,256,259,282,284,],[3,3,124,124,3,3,3,3,124,3,124,124,3,124,]),'gets':([0,1,63,64,101,105,172,188,189,238,256,259,282,284,],[4,4,125,125,4,4,4,4,125,4,125,125,4,125,]),'estructurasDatos':([0,1,101,105,172,188,238,282,],[5,5,5,5,5,5,5,5,]),'estructurasControl':([0,1,101,105,172,188,238,282,],[6,6,6,6,6,6,6,6,]),'method_call':([0,1,101,105,172,188,238,282,],[7,7,7,7,7,7,7,7,]),'block_assignment':([0,1,101,105,172,188,238,282,],[8,8,8,8,8,8,8,8,]),'proc_call':([0,1,101,105,172,188,238,282,],[9,9,9,9,9,9,9,9,]),'declaraciones':([0,1,101,105,172,188,238,282,],[10,10,10,10,10,10,10,10,]),'expression':([0,1,50,101,105,172,188,190,191,192,193,194,195,238,282,],[11,11,107,11,11,11,11,245,246,247,248,249,250,11,11,]),'to_string':([0,1,101,105,172,188,238,282,],[12,12,12,12,12,12,12,12,]),'comparador':([0,1,101,105,172,188,238,282,],[13,13,13,13,13,13,13,13,]),'range_expression':([0,1,85,101,105,172,188,238,282,],[14,14,151,14,14,14,14,14,14,]),'range_to_a':([0,1,101,105,172,188,238,282,],[15,15,15,15,15,15,15,15,]),'array':([0,1,85,101,105,172,188,238,282,],[18,18,148,18,18,18,18,18,18,]),'acceder_arreglo':([0,1,101,105,172,188,238,282,],[19,19,19,19,19,19,19,19,]),'hash_operations':([0,1,101,105,172,188,238,282,],[20,20,20,20,20,20,20,20,]),'hash_var':([0,1,101,105,172,188,238,282,],[21,21,21,21,21,21,21,21,]),'set_expression':([0,1,76,85,101,105,172,188,238,282,],[22,22,134,147,22,22,22,22,22,22,]),'set_operations':([0,1,101,105,172,188,238,282,],[23,23,23,23,23,23,23,23,]),'ifStatement':([0,1,101,105,172,188,238,282,],[24,24,24,24,24,24,24,24,]),'while_statement':([0,1,101,105,172,188,238,282,],[25,25,25,25,25,25,25,25,]),'unless_expression':([0,1,101,105,172,188,238,282,],[26,26,26,26,26,26,26,26,]),'variable_declaration':([0,1,101,105,172,188,238,282,],[30,30,30,30,30,30,30,30,]),'store_conditional_result':([0,1,101,105,172,188,238,282,],[31,31,31,31,31,31,31,31,]),'declare_data_structures':([0,1,101,105,172,188,238,282,],[32,32,32,32,32,32,32,32,]),'var_arreglo':([0,1,101,105,172,188,238,282,],[33,33,33,33,33,33,33,33,]),'declaracion_concatenar_string':([0,1,101,105,172,188,238,282,],[34,34,34,34,34,34,34,34,]),'proc_assignment':([0,1,101,105,172,188,238,282,],[35,35,35,35,35,35,35,35,]),'range_declare':([0,1,101,105,172,188,238,282,],[36,36,36,36,36,36,36,36,]),'variable':([0,1,50,101,105,172,188,190,191,192,193,194,195,238,282,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'value':([0,1,16,28,29,82,84,85,86,87,88,89,94,95,96,97,98,100,101,105,118,119,128,132,138,155,161,162,172,188,204,212,238,253,271,275,276,280,282,300,],[41,41,66,90,66,66,66,145,157,158,159,160,165,166,167,168,169,66,41,41,196,199,66,66,66,229,231,232,41,41,66,66,41,199,291,292,293,66,41,66,]),'array_explicito':([0,1,85,101,105,120,172,188,238,282,],[42,42,42,42,42,200,42,42,42,42,]),'array_implicito':([0,1,85,101,105,172,188,238,282,],[43,43,43,43,43,43,43,43,43,]),'array_creation':([0,1,85,101,105,172,188,238,282,],[44,44,44,44,44,44,44,44,44,]),'newArray':([0,1,85,101,105,172,188,238,282,],[45,45,45,45,45,45,45,45,45,]),'hash_access':([0,1,101,105,172,188,238,282,],[46,46,46,46,46,46,46,46,]),'num':([0,1,16,28,29,48,49,63,64,82,84,85,86,87,88,89,94,95,96,97,98,100,101,105,118,119,128,132,138,155,161,162,172,173,179,187,188,189,204,205,212,216,226,238,253,256,259,271,275,276,280,282,284,300,],[55,55,55,55,55,103,103,103,103,55,55,152,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,103,240,242,55,103,55,103,55,267,267,55,55,103,103,55,55,55,55,55,103,55,]),'var':([0,1,16,28,29,48,49,63,64,82,84,85,86,87,88,89,94,95,96,97,98,100,101,105,118,119,128,132,138,155,161,162,172,173,179,188,189,204,205,212,238,253,256,259,271,275,276,280,282,284,300,],[56,56,67,67,67,104,104,104,104,67,67,153,67,67,67,67,67,67,67,67,67,67,56,56,67,67,67,67,67,67,67,67,56,104,241,56,104,67,104,67,56,67,104,104,67,67,67,67,56,104,67,]),'block_expression':([7,277,],[62,294,]),'values':([16,29,82,84,100,128,132,138,204,212,280,300,],[65,91,135,140,171,65,209,213,257,262,297,311,]),'set_binary_operators':([23,],[76,]),'condiciones':([48,49,63,64,85,173,189,205,256,259,284,],[101,105,129,129,146,239,129,258,129,129,129,]),'condicion':([48,49,63,64,85,173,189,205,256,259,284,],[102,102,102,102,102,102,102,102,102,102,102,]),'boolean_expression':([50,],[106,]),'boolean_value':([50,],[108,]),'expresion':([63,64,189,256,259,284,],[122,130,244,287,289,298,]),'print_statement':([63,64,189,256,259,284,],[126,126,126,126,126,126,]),'condition_with_connectors':([63,64,189,256,259,284,],[127,127,127,127,127,127,]),'arithmetic_production':([85,216,226,],[143,266,272,]),'concatenar_string':([85,],[149,]),'proc_expression':([85,],[150,]),'conectores':([101,105,129,146,239,258,],[173,173,205,173,173,173,]),'operComp':([103,104,152,153,],[179,187,179,187,]),'values_space':([119,253,],[197,285,]),'arithmetic_operators':([142,152,265,267,],[216,226,216,226,]),'hash_values':([144,304,],[223,312,]),'else_statement':([172,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> sentencia','codigo',1,'p_codigo','syntax_analyzer.py',17),
  ('codigo -> codigo sentencia','codigo',2,'p_codigo','syntax_analyzer.py',18),
  ('sentencia -> puts','sentencia',1,'p_sentencia','syntax_analyzer.py',21),
  ('sentencia -> gets','sentencia',1,'p_sentencia','syntax_analyzer.py',22),
  ('sentencia -> estructurasDatos','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> estructurasControl','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> method_call','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> block_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> proc_call','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> declaraciones','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> expression','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> to_string','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('sentencia -> comparador','sentencia',1,'p_sentencia','syntax_analyzer.py',31),
  ('sentencia -> range_expression','sentencia',1,'p_sentencia','syntax_analyzer.py',32),
  ('sentencia -> range_to_a','sentencia',1,'p_sentencia','syntax_analyzer.py',33),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',36),
  ('estructurasDatos -> acceder_arreglo','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',37),
  ('estructurasDatos -> hash_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',38),
  ('estructurasDatos -> hash_var','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',39),
  ('estructurasDatos -> set_expression','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',40),
  ('estructurasDatos -> set_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',41),
  ('estructurasControl -> ifStatement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',45),
  ('estructurasControl -> while_statement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',46),
  ('estructurasControl -> unless_expression','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',47),
  ('value -> num','value',1,'p_value','syntax_analyzer.py',52),
  ('value -> var','value',1,'p_value','syntax_analyzer.py',53),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',54),
  ('value -> NIL','value',1,'p_value','syntax_analyzer.py',55),
  ('value -> SYMBOL','value',1,'p_value','syntax_analyzer.py',56),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','syntax_analyzer.py',61),
  ('values_space -> value','values_space',1,'p_values_space','syntax_analyzer.py',62),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',66),
  ('values -> value COMMA values','values',3,'p_values','syntax_analyzer.py',67),
  ('var -> LOCAL_VAR','var',1,'p_var','syntax_analyzer.py',71),
  ('var -> INSTANCE_VAR','var',1,'p_var','syntax_analyzer.py',72),
  ('var -> CLASS_VAR','var',1,'p_var','syntax_analyzer.py',73),
  ('var -> GLOBAL_VAR','var',1,'p_var','syntax_analyzer.py',74),
  ('num -> FLOAT','num',1,'p_num','syntax_analyzer.py',79),
  ('num -> INTEGER','num',1,'p_num','syntax_analyzer.py',80),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','syntax_analyzer.py',85),
  ('gets -> GETS DOT CHOMP DOT TO_I','gets',5,'p_gets','syntax_analyzer.py',86),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','syntax_analyzer.py',87),
  ('puts -> PUT values','puts',2,'p_puts','syntax_analyzer.py',91),
  ('array -> array_explicito','array',1,'p_array','syntax_analyzer.py',97),
  ('array -> array_implicito','array',1,'p_array','syntax_analyzer.py',98),
  ('array -> array_creation','array',1,'p_array','syntax_analyzer.py',99),
  ('array -> newArray','array',1,'p_array','syntax_analyzer.py',100),
  ('var_arreglo -> LOCAL_VAR ASSIGN array','var_arreglo',3,'p_var_arreglo','syntax_analyzer.py',105),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','syntax_analyzer.py',110),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','syntax_analyzer.py',111),
  ('array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','syntax_analyzer.py',116),
  ('array_implicito -> PERCENTW LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','syntax_analyzer.py',117),
  ('array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR','array_creation',4,'p_array_creation','syntax_analyzer.py',121),
  ('newArray -> ARRAY DOT NEW','newArray',3,'p_newArray','syntax_analyzer.py',125),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR','newArray',6,'p_newArray','syntax_analyzer.py',126),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR','newArray',8,'p_newArray','syntax_analyzer.py',127),
  ('acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','syntax_analyzer.py',131),
  ('ifStatement -> IF condiciones codigo END_LOWER','ifStatement',4,'p_ifStatement','syntax_analyzer.py',136),
  ('ifStatement -> IF condiciones codigo else_statement END_LOWER','ifStatement',5,'p_ifStatement','syntax_analyzer.py',137),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','syntax_analyzer.py',141),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','syntax_analyzer.py',142),
  ('conectores -> AND','conectores',1,'p_conectores','syntax_analyzer.py',147),
  ('conectores -> OR','conectores',1,'p_conectores','syntax_analyzer.py',148),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',149),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',150),
  ('conectores -> EQUAL','conectores',1,'p_conectores','syntax_analyzer.py',151),
  ('condicion -> num operComp num','condicion',3,'p_condicion','syntax_analyzer.py',156),
  ('condicion -> var operComp num','condicion',3,'p_condicion','syntax_analyzer.py',157),
  ('condicion -> num operComp var','condicion',3,'p_condicion','syntax_analyzer.py',158),
  ('operComp -> GREATER','operComp',1,'p_operComp','syntax_analyzer.py',163),
  ('operComp -> LESS','operComp',1,'p_operComp','syntax_analyzer.py',164),
  ('operComp -> GREATER_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',165),
  ('operComp -> LESS_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',166),
  ('operComp -> EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',167),
  ('operComp -> NOT_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',168),
  ('operComp -> COMPARE','operComp',1,'p_operComp','syntax_analyzer.py',169),
  ('else_statement -> ELSE codigo','else_statement',2,'p_else_statement','syntax_analyzer.py',173),
  ('to_string -> LOCAL_VAR DOT TO_S','to_string',3,'p_to_string','syntax_analyzer.py',177),
  ('concatenar_string -> STRING PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',190),
  ('concatenar_string -> STRING PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',191),
  ('concatenar_string -> LOCAL_VAR PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',192),
  ('concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',193),
  ('declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string','declaracion_concatenar_string',3,'p_declaracion_concatenar_string','syntax_analyzer.py',207),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE','hash_var',5,'p_hash_var','syntax_analyzer.py',227),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE','hash_var',4,'p_hash_var','syntax_analyzer.py',228),
  ('hash_values -> STRING HASH_ROCKET value','hash_values',3,'p_hash_values','syntax_analyzer.py',240),
  ('hash_values -> STRING HASH_ROCKET value COMMA hash_values','hash_values',5,'p_hash_values','syntax_analyzer.py',241),
  ('hash_access -> var LBRACE value RBRACE','hash_access',4,'p_hash_access','syntax_analyzer.py',262),
  ('hash_operations -> hash_access ASSIGN value','hash_operations',3,'p_hash_operations','syntax_analyzer.py',266),
  ('variable_declaration -> LOCAL_VAR ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',271),
  ('variable_declaration -> LOCAL_VAR PLUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',272),
  ('variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',273),
  ('variable_declaration -> LOCAL_VAR MINUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',274),
  ('variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',275),
  ('store_conditional_result -> LOCAL_VAR ASSIGN condiciones','store_conditional_result',3,'p_store_conditional_result','syntax_analyzer.py',283),
  ('declare_data_structures -> var_arreglo','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',288),
  ('declare_data_structures -> hash_var','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',289),
  ('while_statement -> WHILE condiciones codigo END_LOWER','while_statement',4,'p_while_statement','syntax_analyzer.py',294),
  ('condition_with_connectors -> condiciones conectores condiciones','condition_with_connectors',3,'p_condition_with_connectors','syntax_analyzer.py',299),
  ('method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR','method_call',4,'p_method_call','syntax_analyzer.py',304),
  ('method_call -> LOCAL_VAR LEFTPAR RIGHTPAR','method_call',3,'p_method_call','syntax_analyzer.py',305),
  ('print_statement -> PUT LEFTPAR values RIGHTPAR','print_statement',4,'p_print_statement','syntax_analyzer.py',309),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',314),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',315),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',316),
  ('boolean_expression -> expression LESS_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',317),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',318),
  ('boolean_expression -> expression NOT_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',319),
  ('boolean_expression -> boolean_value','boolean_expression',1,'p_boolean_expression','syntax_analyzer.py',320),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',324),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',325),
  ('expression -> INTEGER','expression',1,'p_expression','syntax_analyzer.py',329),
  ('expression -> FLOAT','expression',1,'p_expression','syntax_analyzer.py',330),
  ('expression -> variable','expression',1,'p_expression','syntax_analyzer.py',331),
  ('expression -> STRING','expression',1,'p_expression','syntax_analyzer.py',332),
  ('variable -> LOCAL_VAR','variable',1,'p_variable','syntax_analyzer.py',335),
  ('variable -> INSTANCE_VAR','variable',1,'p_variable','syntax_analyzer.py',336),
  ('variable -> CLASS_VAR','variable',1,'p_variable','syntax_analyzer.py',337),
  ('variable -> GLOBAL_VAR','variable',1,'p_variable','syntax_analyzer.py',338),
  ('variable -> CONSTANT','variable',1,'p_variable','syntax_analyzer.py',339),
  ('declaraciones -> variable_declaration','declaraciones',1,'p_declaraciones','syntax_analyzer.py',343),
  ('declaraciones -> store_conditional_result','declaraciones',1,'p_declaraciones','syntax_analyzer.py',344),
  ('declaraciones -> declare_data_structures','declaraciones',1,'p_declaraciones','syntax_analyzer.py',345),
  ('declaraciones -> var_arreglo','declaraciones',1,'p_declaraciones','syntax_analyzer.py',346),
  ('declaraciones -> hash_var','declaraciones',1,'p_declaraciones','syntax_analyzer.py',347),
  ('declaraciones -> LOCAL_VAR ASSIGN arithmetic_production','declaraciones',3,'p_declaraciones','syntax_analyzer.py',348),
  ('declaraciones -> declaracion_concatenar_string','declaraciones',1,'p_declaraciones','syntax_analyzer.py',349),
  ('declaraciones -> proc_assignment','declaraciones',1,'p_declaraciones','syntax_analyzer.py',350),
  ('declaraciones -> range_declare','declaraciones',1,'p_declaraciones','syntax_analyzer.py',351),
  ('expresion -> puts','expresion',1,'p_expresion','syntax_analyzer.py',356),
  ('expresion -> gets','expresion',1,'p_expresion','syntax_analyzer.py',357),
  ('expresion -> print_statement','expresion',1,'p_expresion','syntax_analyzer.py',358),
  ('comparador -> value EQUAL value','comparador',3,'p_comparador','syntax_analyzer.py',365),
  ('comparador -> value COMPARE value','comparador',3,'p_comparador','syntax_analyzer.py',366),
  ('range_declare -> LOCAL_VAR ASSIGN range_expression','range_declare',3,'p_range_declare','syntax_analyzer.py',407),
  ('range_expression -> value RANGEIN value','range_expression',3,'p_range_expression','syntax_analyzer.py',410),
  ('range_expression -> value RANGEEX value','range_expression',3,'p_range_expression','syntax_analyzer.py',411),
  ('range_expression -> LEFTPAR value RANGEIN value RIGHTPAR','range_expression',5,'p_range_expression','syntax_analyzer.py',412),
  ('range_expression -> LEFTPAR value RANGEEX value RIGHTPAR','range_expression',5,'p_range_expression','syntax_analyzer.py',413),
  ('range_to_a -> LEFTPAR value RANGEIN value RIGHTPAR DOT TO_A','range_to_a',7,'p_range_to_a','syntax_analyzer.py',426),
  ('range_to_a -> LEFTPAR value RANGEEX value RIGHTPAR DOT TO_A','range_to_a',7,'p_range_to_a','syntax_analyzer.py',427),
  ('set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR','set_expression',8,'p_set_expression','syntax_analyzer.py',441),
  ('set_expression -> SET LEFT_COR values RIGHT_COR','set_expression',4,'p_set_expression','syntax_analyzer.py',442),
  ('set_operations -> set_expression','set_operations',1,'p_set_operations','syntax_analyzer.py',445),
  ('set_operations -> set_operations set_binary_operators set_expression','set_operations',3,'p_set_operations','syntax_analyzer.py',446),
  ('declare_data_structures -> LOCAL_VAR ASSIGN set_expression','declare_data_structures',3,'p_set_declaration','syntax_analyzer.py',449),
  ('set_binary_operators -> PLUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',453),
  ('set_binary_operators -> MINUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',454),
  ('set_binary_operators -> AMPERSAND','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',455),
  ('set_binary_operators -> PIPE','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',456),
  ('set_binary_operators -> CARET','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',457),
  ('unless_expression -> UNLESS boolean_expression THEN expresion END','unless_expression',5,'p_unless_expression','syntax_analyzer.py',460),
  ('unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END','unless_expression',7,'p_unless_expression','syntax_analyzer.py',461),
  ('arithmetic_production -> num','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',464),
  ('arithmetic_production -> LOCAL_VAR','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',465),
  ('arithmetic_production -> num arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',466),
  ('arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',467),
  ('arithmetic_operators -> PLUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',493),
  ('arithmetic_operators -> MINUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',494),
  ('arithmetic_operators -> MULTIPLY','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',495),
  ('arithmetic_operators -> DIVIDE','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',496),
  ('arithmetic_operators -> MODULO','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',497),
  ('arithmetic_operators -> EXPONENT','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',498),
  ('block_expression -> LBRACE expresion RBRACE','block_expression',3,'p_block_expression','syntax_analyzer.py',501),
  ('block_expression -> DO expresion END','block_expression',3,'p_block_expression','syntax_analyzer.py',502),
  ('block_expression -> DO expresion END_LOWER','block_expression',3,'p_block_expression','syntax_analyzer.py',503),
  ('block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE','block_expression',6,'p_block_expression','syntax_analyzer.py',504),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END','block_expression',6,'p_block_expression','syntax_analyzer.py',505),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER','block_expression',6,'p_block_expression','syntax_analyzer.py',506),
  ('block_assignment -> method_call block_expression','block_assignment',2,'p_block_assignment','syntax_analyzer.py',509),
  ('proc_expression -> PROC DOT NEW block_expression','proc_expression',4,'p_proc_expression','syntax_analyzer.py',512),
  ('proc_assignment -> LOCAL_VAR ASSIGN proc_expression','proc_assignment',3,'p_proc_assignment','syntax_analyzer.py',516),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR','proc_call',6,'p_proc_call','syntax_analyzer.py',520),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',521),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',522),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR','proc_call',4,'p_proc_call','syntax_analyzer.py',523),
  ('proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR','proc_call',4,'p_proc_call_cor','syntax_analyzer.py',531),
  ('proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR','proc_call',3,'p_proc_call_cor','syntax_analyzer.py',532),
  ('expresion -> condition_with_connectors','expresion',1,'p_condition_expr','syntax_analyzer.py',540),
]
