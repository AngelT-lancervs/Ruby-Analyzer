
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BIN_INTEGER BOOLEAN BREAK CALL CARET CASE CASE_EQUAL CHOMP CLASS CLASS_VAR COLON COMMA COMPARE CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END END_LOWER EQUAL EXPONENT EXPONENT_ASSIGN FALSE FLOAT FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET HEX_INTEGER IF IN INSTANCE_VAR INTEGER LBRACE LEFTPAR LEFT_COR LESS LESS_EQUAL LOCAL_VAR MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NMAP NOT NOT_EQUAL OCT_INTEGER OR OR_RESERVED PERCENTW PIPE PLUS PLUS_ASSIGN PROC PUT QUOTATION RANGEEX RANGEIN RBRACE REDO RETURN RIGHTPAR RIGHT_COR SELF SET SPACE STRING SYMBOL TAB THEN TO_F TO_I TO_S TRUE UNLESS UNTIL WHEN WHILEcodigo : sentencia\n              | codigo sentenciasentencia : puts \n                 | gets\n                 | estructurasDatos\n                 | estructurasControl\n                 | method_call\n                 | block_assignment\n                 | proc_call\n                 | declaraciones\n                 | expression\n                 | to_string\n                 | comparador estructurasDatos : array\n                         | acceder_arreglo\n                         | hash_operations\n                         | hash_var\n                         | set_expression\n                         | set_operations\n     estructurasControl : ifStatement\n                           | while_statement\n                           | unless_expression\n     value : num\n             | var\n             | STRING\n             | NIL\n             | SYMBOL\n           values_space : value SPACE values_space\n                     | value\n     values : value\n               | value COMMA values var : LOCAL_VAR\n           | INSTANCE_VAR\n           | CLASS_VAR\n           | GLOBAL_VAR\n            num : FLOAT\n           | INTEGER\n            gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP DOT TO_I\n             | GETS DOT CHOMP\n     puts : PUT values \n\n     array : array_explicito\n              | array_implicito\n              | array_creation\n              | newArray\n     var_arreglo : LOCAL_VAR ASSIGN array\n     array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR\n     array_implicito : PERCENTW LEFT_COR values_space RIGHT_COR\n                        | PERCENTW LEFT_COR RIGHT_COR\n     array_creation : ARRAY LEFTPAR array_explicito RIGHTPAR\n     newArray : ARRAY DOT NEW \n                 | ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR\n                 | ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR\n     acceder_arreglo : var_arreglo LEFT_COR INTEGER RIGHT_COR\n     ifStatement : IF condiciones codigo END_LOWER\n                     | IF condiciones codigo else_statement END_LOWER\n     condiciones : condicion\n                    | condiciones conectores condiciones\n     conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED\n                   | EQUAL\n     condicion : num operComp num\n                  | var operComp num\n                  | num operComp var\n     operComp : GREATER\n                 | LESS\n                 | GREATER_EQUAL\n                 | LESS_EQUAL\n                 | EQUAL\n                 | NOT_EQUAL\n                 | COMPARE\n     else_statement : ELSE codigo\n     to_string : LOCAL_VAR DOT TO_S\n     concatenar_string : STRING PLUS STRING\n                          | STRING PLUS LOCAL_VAR\n                          | LOCAL_VAR PLUS STRING\n                          | LOCAL_VAR PLUS LOCAL_VAR\n     declaracion_concatenar_string : LOCAL_VAR ASSIGN concatenar_string\n     hash_var : LOCAL_VAR ASSIGN LBRACE hash_values RBRACE\n                 | LOCAL_VAR ASSIGN LBRACE RBRACE\n     hash_values : STRING HASH_ROCKET value\n                    | STRING HASH_ROCKET value COMMA hash_values\n     hash_access : var LBRACE value RBRACE\n     hash_operations : hash_access ASSIGN value\n     variable_declaration : LOCAL_VAR ASSIGN value\n                             | LOCAL_VAR PLUS_ASSIGN value\n                             | LOCAL_VAR MULTIPLY_ASSIGN value\n                             | LOCAL_VAR MINUS_ASSIGN value\n                             | LOCAL_VAR DIVIDE_ASSIGN value\n     store_conditional_result : LOCAL_VAR ASSIGN condiciones\n     declare_data_structures : var_arreglo\n                                | hash_var\n     while_statement : WHILE condiciones codigo END_LOWER\n     condition_with_connectors : condiciones conectores condiciones\n     method_call : LOCAL_VAR LEFTPAR values RIGHTPAR\n                    | LOCAL_VAR LEFTPAR RIGHTPAR\n     print_statement : PUT LEFTPAR values RIGHTPAR\n     boolean_expression : expression GREATER expression\n                           | expression LESS expression\n                           | expression GREATER_EQUAL expression\n                           | expression LESS_EQUAL expression\n                           | expression EQUAL expression\n                           | expression NOT_EQUAL expression\n                           | boolean_value  boolean_value : TRUE\n                      | FALSE  expression : INTEGER\n                   | FLOAT\n                   | variable\n                   | STRING  variable : LOCAL_VAR\n                 | INSTANCE_VAR\n                 | CLASS_VAR\n                 | GLOBAL_VAR\n                 | CONSTANT  declaraciones : variable_declaration\n                      | store_conditional_result\n                      | declare_data_structures\n                      | var_arreglo\n                      | hash_var\n                      | LOCAL_VAR ASSIGN arithmetic_production\n                      | declaracion_concatenar_string\n                      | proc_assignment\n     expresion : puts\n                 | gets\n                 | print_statement\n     comparador : value EQUAL value\n                   | value COMPARE value\n    set_expression : SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR\n                      | SET LEFT_COR values RIGHT_CORset_operations : set_expression\n                      | set_operations set_binary_operators set_expressiondeclare_data_structures : LOCAL_VAR ASSIGN set_expressionset_binary_operators : PLUS\n                            | MINUS\n                            | AMPERSAND\n                            | PIPE\n                            | CARETunless_expression : UNLESS boolean_expression THEN expresion END\n                         | UNLESS boolean_expression THEN expresion ELSE expresion ENDarithmetic_production : num\n                             | LOCAL_VAR\n                             | num arithmetic_operators arithmetic_production\n                             | LOCAL_VAR arithmetic_operators arithmetic_productionarithmetic_operators : PLUS\n                            | MINUS\n                            | MULTIPLY\n                            | DIVIDE\n                            | MODULO\n                            | EXPONENTblock_expression : LBRACE expresion RBRACE\n                         | DO expresion END\n                         | DO expresion END_LOWER\n                         | LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE\n                         | DO PIPE LOCAL_VAR PIPE expresion END\n                         | DO PIPE LOCAL_VAR PIPE expresion END_LOWERblock_assignment : method_call block_expressionproc_expression : PROC DOT NEW block_expressionproc_assignment : LOCAL_VAR ASSIGN proc_expressionproc_call : LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR RIGHTPARproc_call : LOCAL_VAR LEFT_COR values RIGHT_COR\n                 | LOCAL_VAR LEFT_COR RIGHT_CORexpresion : condition_with_connectors'
    
_lr_action_items = {'PUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,176,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,240,243,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,264,270,272,275,277,278,279,282,285,286,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,121,121,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,14,-58,14,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,14,14,121,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,14,-59,-65,-67,-66,-96,-49,-51,121,121,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,14,-142,121,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'GETS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,176,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,240,243,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,264,270,272,275,277,278,279,282,285,286,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,15,15,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,15,-58,15,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,15,15,15,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,15,-59,-65,-67,-66,-96,-49,-51,15,15,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,15,-142,15,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'LOCAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,116,121,124,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,215,217,219,220,222,223,224,225,226,227,236,237,238,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[25,25,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,67,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,67,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,67,67,107,-115,-116,-117,-118,-23,-26,-27,-2,-160,67,67,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,67,67,135,67,67,67,67,-48,67,67,67,67,25,-58,25,67,67,190,67,195,67,-40,-135,-99,67,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,25,67,-60,-61,-62,-63,-64,67,-68,-69,-70,-71,-72,-73,-74,25,67,107,107,107,107,107,107,-50,-52,-154,67,67,-155,-156,-31,-98,67,-166,-167,249,252,-149,-150,-151,-152,-153,-83,249,-148,258,-55,-133,-56,25,-59,-65,-67,-66,-96,-49,67,-51,67,67,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,67,-146,-77,-78,67,-57,25,-142,67,-163,-161,-53,67,-157,-158,-159,-143,-132,-54,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,88,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,217,219,220,222,223,224,225,226,227,236,237,238,239,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[33,33,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,66,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,66,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,66,66,102,-115,-116,-117,-118,-23,-26,-27,-2,-160,66,66,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,66,66,66,66,66,66,66,-48,153,66,66,66,66,33,-58,33,66,66,66,66,-40,-135,-99,66,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,33,66,-60,-61,-62,-63,-64,66,-68,-69,-70,-71,-72,-73,-74,66,33,66,102,102,102,102,102,102,-50,-52,-154,66,66,-155,-156,-31,-98,66,-166,-167,66,-148,-149,-150,-151,-152,-153,-83,66,-148,-55,-133,-56,33,-59,-65,-67,-66,-96,-49,66,-51,266,66,66,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,66,-146,-77,-78,66,-57,33,-142,66,-163,-161,-53,66,-157,-158,-159,-143,-132,-54,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,217,219,220,222,223,224,225,226,227,236,237,238,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[34,34,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,65,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,65,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,65,65,103,-115,-116,-117,-118,-23,-26,-27,-2,-160,65,65,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,65,65,65,65,65,65,65,-48,65,65,65,65,34,-58,34,65,65,65,65,-40,-135,-99,65,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,34,65,-60,-61,-62,-63,-64,65,-68,-69,-70,-71,-72,-73,-74,65,34,65,103,103,103,103,103,103,-50,-52,-154,65,65,-155,-156,-31,-98,65,-166,-167,65,-148,-149,-150,-151,-152,-153,-83,65,-148,-55,-133,-56,34,-59,-65,-67,-66,-96,-49,65,-51,65,65,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,65,-146,-77,-78,65,-57,34,-142,65,-163,-161,-53,65,-157,-158,-159,-143,-132,-54,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,177,178,179,180,181,182,185,188,189,191,193,194,196,198,199,201,202,204,211,215,217,219,220,222,223,224,225,226,227,236,237,238,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,270,272,275,276,277,278,279,280,282,285,286,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,64,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,64,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,104,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,64,64,146,64,64,64,64,-48,64,64,64,64,36,-58,36,64,64,64,64,-40,-135,-99,64,-76,-168,-32,-124,212,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,36,36,104,104,104,104,104,104,-50,-52,-154,64,-155,-156,-31,-98,64,-166,-167,253,-83,257,-55,-133,-56,36,-59,-65,-67,-66,-96,-49,64,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,64,-146,-77,-78,64,-57,36,-142,-163,-161,-53,64,-157,-158,-159,212,-143,-132,-54,]),'SET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[43,43,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,43,-137,-138,-139,-140,-141,43,-48,43,-58,43,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,43,43,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,43,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,43,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[44,44,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,44,-58,44,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,44,44,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,44,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,44,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[45,45,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,45,-58,45,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,45,45,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,45,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,45,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'UNLESS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[46,46,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,46,-58,46,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,46,46,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,46,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,46,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'INSTANCE_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,222,223,224,225,226,227,236,237,238,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[47,47,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,68,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,68,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,68,68,108,-115,-116,-117,-118,-23,-26,-27,-2,-160,68,68,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,68,68,68,68,68,68,68,-48,68,68,68,68,47,-58,47,68,68,68,68,-40,-135,-99,68,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,47,68,-60,-61,-62,-63,-64,68,-68,-69,-70,-71,-72,-73,-74,47,68,108,108,108,108,108,108,-50,-52,-154,68,68,-155,-156,-31,-98,68,-166,-167,-83,-55,-133,-56,47,-59,-65,-67,-66,-96,-49,68,-51,68,68,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,68,-146,-77,-78,68,-57,47,-142,68,-163,-161,-53,68,-157,-158,-159,-143,-132,-54,]),'CLASS_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,222,223,224,225,226,227,236,237,238,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[48,48,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,69,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,69,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,69,69,109,-115,-116,-117,-118,-23,-26,-27,-2,-160,69,69,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,69,69,69,69,69,69,69,-48,69,69,69,69,48,-58,48,69,69,69,69,-40,-135,-99,69,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,48,69,-60,-61,-62,-63,-64,69,-68,-69,-70,-71,-72,-73,-74,48,69,109,109,109,109,109,109,-50,-52,-154,69,69,-155,-156,-31,-98,69,-166,-167,-83,-55,-133,-56,48,-59,-65,-67,-66,-96,-49,69,-51,69,69,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,69,-146,-77,-78,69,-57,48,-142,69,-163,-161,-53,69,-157,-158,-159,-143,-132,-54,]),'GLOBAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,222,223,224,225,226,227,236,237,238,240,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,270,272,275,276,277,278,279,282,285,286,],[49,49,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,70,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,70,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,70,70,110,-115,-116,-117,-118,-23,-26,-27,-2,-160,70,70,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,70,70,70,70,70,70,70,-48,70,70,70,70,49,-58,49,70,70,70,70,-40,-135,-99,70,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,49,70,-60,-61,-62,-63,-64,70,-68,-69,-70,-71,-72,-73,-74,49,70,110,110,110,110,110,110,-50,-52,-154,70,70,-155,-156,-31,-98,70,-166,-167,-83,-55,-133,-56,49,-59,-65,-67,-66,-96,-49,70,-51,70,70,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,70,-146,-77,-78,70,-57,49,-142,70,-163,-161,-53,70,-157,-158,-159,-143,-132,-54,]),'CONSTANT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,177,178,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[50,50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,50,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,50,-58,50,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,50,50,50,50,50,50,50,50,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,50,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,50,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'NIL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,191,193,194,196,198,199,201,202,211,217,219,220,222,223,224,225,226,227,236,237,238,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,270,272,275,276,277,278,279,282,285,286,],[53,53,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,53,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,53,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,53,53,53,53,53,53,53,-48,53,53,53,53,53,-58,53,53,53,53,53,-40,-135,-99,53,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,53,53,-50,-52,-154,53,-155,-156,-31,-98,53,-166,-167,-83,-55,-133,-56,53,-59,-65,-67,-66,-96,-49,53,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,53,-146,-77,-78,53,-57,53,-142,-163,-161,-53,53,-157,-158,-159,-143,-132,-54,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,82,83,84,85,87,89,90,91,93,94,95,98,111,112,121,125,126,127,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,191,193,194,196,198,199,201,202,211,217,219,220,222,223,224,225,226,227,236,237,238,244,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,270,272,275,276,277,278,279,282,285,286,],[54,54,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,54,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,54,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,54,54,54,54,54,54,54,-48,54,54,54,54,54,-58,54,54,54,54,54,-40,-135,-99,54,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,54,54,-50,-52,-154,54,-155,-156,-31,-98,54,-166,-167,-83,-55,-133,-56,54,-59,-65,-67,-66,-96,-49,54,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,54,-146,-77,-78,54,-57,54,-142,-163,-161,-53,54,-157,-158,-159,-143,-132,-54,]),'LEFT_COR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,47,48,49,50,51,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,81,87,94,95,98,113,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,218,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,80,-119,-120,-121,88,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,93,-115,-116,-117,-118,-23,-26,-27,112,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,26,-48,26,-58,26,26,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,26,26,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,260,-133,-56,26,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,26,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'PERCENTW':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[55,55,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,55,-48,55,-58,55,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,55,55,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,55,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,55,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,87,94,95,98,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,222,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,270,272,275,277,278,279,282,285,286,],[56,56,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,56,-48,56,-58,56,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,56,56,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,56,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,56,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,95,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,185,188,189,193,194,196,198,201,202,211,217,219,220,223,224,225,226,227,236,238,244,245,247,248,249,250,251,252,253,254,256,257,258,261,263,270,272,275,277,278,279,282,285,286,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,-59,-65,-67,-66,-96,-49,-51,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,-142,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'END_LOWER':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,95,117,118,119,120,123,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,175,185,188,189,193,194,196,198,201,202,211,217,219,220,221,223,224,225,226,227,236,238,242,244,245,247,248,249,250,251,252,253,254,256,257,258,261,262,263,268,269,270,272,275,277,278,279,282,285,286,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-127,-128,-129,-169,194,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,220,227,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,261,-59,-65,-67,-66,-96,-49,-51,-97,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,-75,-142,-100,279,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,87,95,117,118,119,120,126,127,129,132,134,135,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,154,155,156,159,185,188,189,193,194,196,198,201,202,211,217,219,220,223,224,225,226,227,228,236,238,242,244,245,247,248,249,250,251,252,253,254,256,257,258,261,263,268,270,272,275,277,278,279,282,285,286,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-127,-128,-129,-169,-40,-135,-99,-76,-168,-32,-124,-88,-93,-136,-46,-81,-162,-23,-24,-25,-89,-90,-91,-92,-47,-130,-131,-87,222,-50,-52,-154,-155,-156,-31,-98,-166,-167,-83,-55,-133,-56,-59,-65,-67,-66,-96,264,-49,-51,-97,-38,-39,-165,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-57,-142,-100,-163,-161,-53,-157,-158,-159,-143,-132,-54,]),'LBRACE':([7,25,47,48,49,52,81,129,198,259,],[59,-32,-33,-34,-35,111,137,-99,-98,59,]),'DO':([7,129,198,259,],[60,-99,-98,60,]),'DOT':([15,25,43,56,126,147,],[71,79,92,114,197,216,]),'PLUS':([20,21,65,66,127,135,144,146,219,249,251,285,],[-134,73,-36,-37,-135,204,214,215,-133,214,214,-132,]),'MINUS':([20,21,65,66,127,135,144,219,249,251,285,],[-134,74,-36,-37,-135,205,205,-133,205,205,-132,]),'AMPERSAND':([20,21,127,219,285,],[-134,75,-135,-133,-132,]),'PIPE':([20,21,59,60,127,190,195,219,285,],[-134,76,116,124,-135,240,243,-133,-132,]),'CARET':([20,21,127,219,285,],[-134,77,-135,-133,-132,]),'LEFTPAR':([25,56,79,121,130,157,188,],[78,113,131,191,199,218,239,]),'ASSIGN':([25,42,235,],[81,91,-86,]),'PLUS_ASSIGN':([25,],[82,]),'MULTIPLY_ASSIGN':([25,],[83,]),'MINUS_ASSIGN':([25,],[84,]),'DIVIDE_ASSIGN':([25,],[85,]),'EQUAL':([25,33,34,35,36,37,47,48,49,50,51,52,53,54,65,66,67,68,69,70,94,95,96,97,98,100,102,103,104,107,108,109,110,122,135,139,144,145,223,224,225,226,242,],[-32,-37,-36,-112,-25,89,-33,-34,-35,-118,-23,-24,-26,-27,-36,-37,-32,-33,-34,-35,165,-58,171,171,165,181,-110,-111,-113,-114,-115,-116,-117,165,-32,165,171,171,165,-65,-67,-66,165,]),'COMPARE':([25,33,34,36,37,47,48,49,51,52,53,54,65,66,67,68,69,70,96,97,135,144,145,],[-32,-37,-36,-25,90,-33,-34,-35,-23,-24,-26,-27,-36,-37,-32,-33,-34,-35,173,173,-32,173,173,]),'RIGHT_COR':([26,51,53,54,62,63,64,65,66,67,68,69,70,80,86,112,133,153,158,184,186,196,265,273,],[87,-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,134,152,185,202,217,219,236,-29,-31,-28,281,]),'GREATER':([35,50,65,66,67,68,69,70,96,97,100,102,103,104,107,108,109,110,135,144,145,],[-112,-118,-36,-37,-32,-33,-34,-35,167,167,177,-110,-111,-113,-114,-115,-116,-117,-32,167,167,]),'LESS':([35,50,65,66,67,68,69,70,96,97,100,102,103,104,107,108,109,110,135,144,145,],[-112,-118,-36,-37,-32,-33,-34,-35,168,168,178,-110,-111,-113,-114,-115,-116,-117,-32,168,168,]),'GREATER_EQUAL':([35,50,65,66,67,68,69,70,96,97,100,102,103,104,107,108,109,110,135,144,145,],[-112,-118,-36,-37,-32,-33,-34,-35,169,169,179,-110,-111,-113,-114,-115,-116,-117,-32,169,169,]),'LESS_EQUAL':([35,50,65,66,67,68,69,70,96,97,100,102,103,104,107,108,109,110,135,144,145,],[-112,-118,-36,-37,-32,-33,-34,-35,170,170,180,-110,-111,-113,-114,-115,-116,-117,-32,170,170,]),'NOT_EQUAL':([35,50,65,66,67,68,69,70,96,97,100,102,103,104,107,108,109,110,135,144,145,],[-112,-118,-36,-37,-32,-33,-34,-35,172,172,182,-110,-111,-113,-114,-115,-116,-117,-32,172,172,]),'THEN':([35,50,99,101,102,103,104,105,106,107,108,109,110,229,230,231,232,233,234,],[-112,-118,176,-107,-110,-111,-113,-108,-109,-114,-115,-116,-117,-101,-102,-103,-104,-105,-106,]),'TRUE':([46,],[105,]),'FALSE':([46,],[106,]),'COMMA':([51,53,54,62,63,64,65,66,67,68,69,70,266,271,],[-23,-26,-27,125,-24,-25,-36,-37,-32,-33,-34,-35,276,280,]),'RIGHTPAR':([51,53,54,62,63,64,65,66,67,68,69,70,78,87,128,131,152,187,196,199,200,241,246,266,281,283,],[-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,129,-48,198,201,-47,238,-31,247,248,268,270,275,285,286,]),'RBRACE':([51,53,54,61,62,63,64,65,66,67,68,69,70,95,115,117,118,119,120,126,137,183,196,210,223,224,225,226,242,244,245,267,268,271,284,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,189,-127,-128,-129,-169,-40,211,235,-31,254,-59,-65,-67,-66,-97,-38,-39,277,-100,-84,-85,]),'SPACE':([51,53,54,63,64,65,66,67,68,69,70,186,],[-23,-26,-27,-24,-25,-36,-37,-32,-33,-34,-35,237,]),'END':([51,53,54,61,62,63,64,65,66,67,68,69,70,95,117,118,119,120,123,126,196,223,224,225,226,228,242,244,245,268,269,274,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,-127,-128,-129,-169,193,-40,-31,-59,-65,-67,-66,263,-97,-38,-39,-100,278,282,]),'MULTIPLY':([65,66,135,144,249,251,],[-36,-37,206,206,206,206,]),'DIVIDE':([65,66,135,144,249,251,],[-36,-37,207,207,207,207,]),'MODULO':([65,66,135,144,249,251,],[-36,-37,208,208,208,208,]),'EXPONENT':([65,66,135,144,249,251,],[-36,-37,209,209,209,209,]),'AND':([65,66,67,68,69,70,94,95,98,122,139,223,224,225,226,242,],[-36,-37,-32,-33,-34,-35,161,-58,161,161,161,161,-65,-67,-66,161,]),'OR':([65,66,67,68,69,70,94,95,98,122,139,223,224,225,226,242,],[-36,-37,-32,-33,-34,-35,162,-58,162,162,162,162,-65,-67,-66,162,]),'AND_RESERVED':([65,66,67,68,69,70,94,95,98,122,139,223,224,225,226,242,],[-36,-37,-32,-33,-34,-35,163,-58,163,163,163,163,-65,-67,-66,163,]),'OR_RESERVED':([65,66,67,68,69,70,94,95,98,122,139,223,224,225,226,242,],[-36,-37,-32,-33,-34,-35,164,-58,164,164,164,164,-65,-67,-66,164,]),'CHOMP':([71,],[126,]),'CALL':([79,],[130,]),'TO_S':([79,],[132,]),'PROC':([81,],[147,]),'NEW':([92,114,216,],[157,188,259,]),'TO_F':([197,],[244,]),'TO_I':([197,],[245,]),'HASH_ROCKET':([212,],[255,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,94,98,222,],[1,159,175,262,]),'sentencia':([0,1,94,98,159,175,222,262,],[2,57,2,2,57,57,2,57,]),'puts':([0,1,59,60,94,98,159,175,176,222,240,243,262,264,],[3,3,117,117,3,3,3,3,117,3,117,117,3,117,]),'gets':([0,1,59,60,94,98,159,175,176,222,240,243,262,264,],[4,4,118,118,4,4,4,4,118,4,118,118,4,118,]),'estructurasDatos':([0,1,94,98,159,175,222,262,],[5,5,5,5,5,5,5,5,]),'estructurasControl':([0,1,94,98,159,175,222,262,],[6,6,6,6,6,6,6,6,]),'method_call':([0,1,94,98,159,175,222,262,],[7,7,7,7,7,7,7,7,]),'block_assignment':([0,1,94,98,159,175,222,262,],[8,8,8,8,8,8,8,8,]),'proc_call':([0,1,94,98,159,175,222,262,],[9,9,9,9,9,9,9,9,]),'declaraciones':([0,1,94,98,159,175,222,262,],[10,10,10,10,10,10,10,10,]),'expression':([0,1,46,94,98,159,175,177,178,179,180,181,182,222,262,],[11,11,100,11,11,11,11,229,230,231,232,233,234,11,11,]),'to_string':([0,1,94,98,159,175,222,262,],[12,12,12,12,12,12,12,12,]),'comparador':([0,1,94,98,159,175,222,262,],[13,13,13,13,13,13,13,13,]),'array':([0,1,81,94,98,159,175,222,262,],[16,16,141,16,16,16,16,16,16,]),'acceder_arreglo':([0,1,94,98,159,175,222,262,],[17,17,17,17,17,17,17,17,]),'hash_operations':([0,1,94,98,159,175,222,262,],[18,18,18,18,18,18,18,18,]),'hash_var':([0,1,94,98,159,175,222,262,],[19,19,19,19,19,19,19,19,]),'set_expression':([0,1,72,81,94,98,159,175,222,262,],[20,20,127,140,20,20,20,20,20,20,]),'set_operations':([0,1,94,98,159,175,222,262,],[21,21,21,21,21,21,21,21,]),'ifStatement':([0,1,94,98,159,175,222,262,],[22,22,22,22,22,22,22,22,]),'while_statement':([0,1,94,98,159,175,222,262,],[23,23,23,23,23,23,23,23,]),'unless_expression':([0,1,94,98,159,175,222,262,],[24,24,24,24,24,24,24,24,]),'variable_declaration':([0,1,94,98,159,175,222,262,],[27,27,27,27,27,27,27,27,]),'store_conditional_result':([0,1,94,98,159,175,222,262,],[28,28,28,28,28,28,28,28,]),'declare_data_structures':([0,1,94,98,159,175,222,262,],[29,29,29,29,29,29,29,29,]),'var_arreglo':([0,1,94,98,159,175,222,262,],[30,30,30,30,30,30,30,30,]),'declaracion_concatenar_string':([0,1,94,98,159,175,222,262,],[31,31,31,31,31,31,31,31,]),'proc_assignment':([0,1,94,98,159,175,222,262,],[32,32,32,32,32,32,32,32,]),'variable':([0,1,46,94,98,159,175,177,178,179,180,181,182,222,262,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'value':([0,1,14,26,78,80,81,82,83,84,85,89,90,91,93,94,98,111,112,121,125,131,159,175,191,199,222,237,255,260,262,276,],[37,37,62,62,62,62,138,148,149,150,151,154,155,156,62,37,37,183,186,62,62,62,37,37,62,62,37,186,271,62,37,62,]),'array_explicito':([0,1,81,94,98,113,159,175,222,262,],[38,38,38,38,38,187,38,38,38,38,]),'array_implicito':([0,1,81,94,98,159,175,222,262,],[39,39,39,39,39,39,39,39,39,]),'array_creation':([0,1,81,94,98,159,175,222,262,],[40,40,40,40,40,40,40,40,40,]),'newArray':([0,1,81,94,98,159,175,222,262,],[41,41,41,41,41,41,41,41,41,]),'hash_access':([0,1,94,98,159,175,222,262,],[42,42,42,42,42,42,42,42,]),'num':([0,1,14,26,44,45,59,60,78,80,81,82,83,84,85,89,90,91,93,94,98,111,112,121,125,131,159,160,166,174,175,176,191,192,199,203,213,222,237,240,243,255,260,262,264,276,],[51,51,51,51,96,96,96,96,51,51,144,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,96,224,226,51,96,51,96,51,251,251,51,51,96,96,51,51,51,96,51,]),'var':([0,1,14,26,44,45,59,60,78,80,81,82,83,84,85,89,90,91,93,94,98,111,112,121,125,131,159,160,166,175,176,191,192,199,222,237,240,243,255,260,262,264,276,],[52,52,63,63,97,97,97,97,63,63,145,63,63,63,63,63,63,63,63,52,52,63,63,63,63,63,52,97,225,52,97,63,97,63,52,63,97,97,63,63,52,97,63,]),'block_expression':([7,259,],[58,272,]),'values':([14,26,78,80,93,121,125,131,191,199,260,276,],[61,86,128,133,158,61,196,200,241,246,273,283,]),'set_binary_operators':([21,],[72,]),'condiciones':([44,45,59,60,81,160,176,192,240,243,264,],[94,98,122,122,139,223,122,242,122,122,122,]),'condicion':([44,45,59,60,81,160,176,192,240,243,264,],[95,95,95,95,95,95,95,95,95,95,95,]),'boolean_expression':([46,],[99,]),'boolean_value':([46,],[101,]),'expresion':([59,60,176,240,243,264,],[115,123,228,267,269,274,]),'print_statement':([59,60,176,240,243,264,],[119,119,119,119,119,119,]),'condition_with_connectors':([59,60,176,240,243,264,],[120,120,120,120,120,120,]),'arithmetic_production':([81,203,213,],[136,250,256,]),'concatenar_string':([81,],[142,]),'proc_expression':([81,],[143,]),'conectores':([94,98,122,139,223,242,],[160,160,192,160,160,160,]),'operComp':([96,97,144,145,],[166,174,166,174,]),'values_space':([112,237,],[184,265,]),'arithmetic_operators':([135,144,249,251,],[203,213,203,213,]),'hash_values':([137,280,],[210,284,]),'else_statement':([159,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> sentencia','codigo',1,'p_codigo','syntax_analyzer.py',17),
  ('codigo -> codigo sentencia','codigo',2,'p_codigo','syntax_analyzer.py',18),
  ('sentencia -> puts','sentencia',1,'p_sentencia','syntax_analyzer.py',21),
  ('sentencia -> gets','sentencia',1,'p_sentencia','syntax_analyzer.py',22),
  ('sentencia -> estructurasDatos','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> estructurasControl','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> method_call','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> block_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> proc_call','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> declaraciones','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> expression','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> to_string','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('sentencia -> comparador','sentencia',1,'p_sentencia','syntax_analyzer.py',31),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',34),
  ('estructurasDatos -> acceder_arreglo','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',35),
  ('estructurasDatos -> hash_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',36),
  ('estructurasDatos -> hash_var','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',37),
  ('estructurasDatos -> set_expression','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',38),
  ('estructurasDatos -> set_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',39),
  ('estructurasControl -> ifStatement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',43),
  ('estructurasControl -> while_statement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',44),
  ('estructurasControl -> unless_expression','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',45),
  ('value -> num','value',1,'p_value','syntax_analyzer.py',50),
  ('value -> var','value',1,'p_value','syntax_analyzer.py',51),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',52),
  ('value -> NIL','value',1,'p_value','syntax_analyzer.py',53),
  ('value -> SYMBOL','value',1,'p_value','syntax_analyzer.py',54),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','syntax_analyzer.py',59),
  ('values_space -> value','values_space',1,'p_values_space','syntax_analyzer.py',60),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',64),
  ('values -> value COMMA values','values',3,'p_values','syntax_analyzer.py',65),
  ('var -> LOCAL_VAR','var',1,'p_var','syntax_analyzer.py',69),
  ('var -> INSTANCE_VAR','var',1,'p_var','syntax_analyzer.py',70),
  ('var -> CLASS_VAR','var',1,'p_var','syntax_analyzer.py',71),
  ('var -> GLOBAL_VAR','var',1,'p_var','syntax_analyzer.py',72),
  ('num -> FLOAT','num',1,'p_num','syntax_analyzer.py',77),
  ('num -> INTEGER','num',1,'p_num','syntax_analyzer.py',78),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','syntax_analyzer.py',83),
  ('gets -> GETS DOT CHOMP DOT TO_I','gets',5,'p_gets','syntax_analyzer.py',84),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','syntax_analyzer.py',85),
  ('puts -> PUT values','puts',2,'p_puts','syntax_analyzer.py',89),
  ('array -> array_explicito','array',1,'p_array','syntax_analyzer.py',95),
  ('array -> array_implicito','array',1,'p_array','syntax_analyzer.py',96),
  ('array -> array_creation','array',1,'p_array','syntax_analyzer.py',97),
  ('array -> newArray','array',1,'p_array','syntax_analyzer.py',98),
  ('var_arreglo -> LOCAL_VAR ASSIGN array','var_arreglo',3,'p_var_arreglo','syntax_analyzer.py',103),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','syntax_analyzer.py',108),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','syntax_analyzer.py',109),
  ('array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','syntax_analyzer.py',114),
  ('array_implicito -> PERCENTW LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','syntax_analyzer.py',115),
  ('array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR','array_creation',4,'p_array_creation','syntax_analyzer.py',119),
  ('newArray -> ARRAY DOT NEW','newArray',3,'p_newArray','syntax_analyzer.py',123),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR','newArray',6,'p_newArray','syntax_analyzer.py',124),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR','newArray',8,'p_newArray','syntax_analyzer.py',125),
  ('acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','syntax_analyzer.py',129),
  ('ifStatement -> IF condiciones codigo END_LOWER','ifStatement',4,'p_ifStatement','syntax_analyzer.py',134),
  ('ifStatement -> IF condiciones codigo else_statement END_LOWER','ifStatement',5,'p_ifStatement','syntax_analyzer.py',135),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','syntax_analyzer.py',139),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','syntax_analyzer.py',140),
  ('conectores -> AND','conectores',1,'p_conectores','syntax_analyzer.py',145),
  ('conectores -> OR','conectores',1,'p_conectores','syntax_analyzer.py',146),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',147),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',148),
  ('conectores -> EQUAL','conectores',1,'p_conectores','syntax_analyzer.py',149),
  ('condicion -> num operComp num','condicion',3,'p_condicion','syntax_analyzer.py',154),
  ('condicion -> var operComp num','condicion',3,'p_condicion','syntax_analyzer.py',155),
  ('condicion -> num operComp var','condicion',3,'p_condicion','syntax_analyzer.py',156),
  ('operComp -> GREATER','operComp',1,'p_operComp','syntax_analyzer.py',161),
  ('operComp -> LESS','operComp',1,'p_operComp','syntax_analyzer.py',162),
  ('operComp -> GREATER_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',163),
  ('operComp -> LESS_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',164),
  ('operComp -> EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',165),
  ('operComp -> NOT_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',166),
  ('operComp -> COMPARE','operComp',1,'p_operComp','syntax_analyzer.py',167),
  ('else_statement -> ELSE codigo','else_statement',2,'p_else_statement','syntax_analyzer.py',171),
  ('to_string -> LOCAL_VAR DOT TO_S','to_string',3,'p_to_string','syntax_analyzer.py',175),
  ('concatenar_string -> STRING PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',188),
  ('concatenar_string -> STRING PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',189),
  ('concatenar_string -> LOCAL_VAR PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',190),
  ('concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',191),
  ('declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string','declaracion_concatenar_string',3,'p_declaracion_concatenar_string','syntax_analyzer.py',205),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE','hash_var',5,'p_hash_var','syntax_analyzer.py',225),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE','hash_var',4,'p_hash_var','syntax_analyzer.py',226),
  ('hash_values -> STRING HASH_ROCKET value','hash_values',3,'p_hash_values','syntax_analyzer.py',238),
  ('hash_values -> STRING HASH_ROCKET value COMMA hash_values','hash_values',5,'p_hash_values','syntax_analyzer.py',239),
  ('hash_access -> var LBRACE value RBRACE','hash_access',4,'p_hash_access','syntax_analyzer.py',260),
  ('hash_operations -> hash_access ASSIGN value','hash_operations',3,'p_hash_operations','syntax_analyzer.py',264),
  ('variable_declaration -> LOCAL_VAR ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',269),
  ('variable_declaration -> LOCAL_VAR PLUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',270),
  ('variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',271),
  ('variable_declaration -> LOCAL_VAR MINUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',272),
  ('variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',273),
  ('store_conditional_result -> LOCAL_VAR ASSIGN condiciones','store_conditional_result',3,'p_store_conditional_result','syntax_analyzer.py',281),
  ('declare_data_structures -> var_arreglo','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',286),
  ('declare_data_structures -> hash_var','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',287),
  ('while_statement -> WHILE condiciones codigo END_LOWER','while_statement',4,'p_while_statement','syntax_analyzer.py',292),
  ('condition_with_connectors -> condiciones conectores condiciones','condition_with_connectors',3,'p_condition_with_connectors','syntax_analyzer.py',297),
  ('method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR','method_call',4,'p_method_call','syntax_analyzer.py',302),
  ('method_call -> LOCAL_VAR LEFTPAR RIGHTPAR','method_call',3,'p_method_call','syntax_analyzer.py',303),
  ('print_statement -> PUT LEFTPAR values RIGHTPAR','print_statement',4,'p_print_statement','syntax_analyzer.py',307),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',312),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',313),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',314),
  ('boolean_expression -> expression LESS_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',315),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',316),
  ('boolean_expression -> expression NOT_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',317),
  ('boolean_expression -> boolean_value','boolean_expression',1,'p_boolean_expression','syntax_analyzer.py',318),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',322),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',323),
  ('expression -> INTEGER','expression',1,'p_expression','syntax_analyzer.py',327),
  ('expression -> FLOAT','expression',1,'p_expression','syntax_analyzer.py',328),
  ('expression -> variable','expression',1,'p_expression','syntax_analyzer.py',329),
  ('expression -> STRING','expression',1,'p_expression','syntax_analyzer.py',330),
  ('variable -> LOCAL_VAR','variable',1,'p_variable','syntax_analyzer.py',333),
  ('variable -> INSTANCE_VAR','variable',1,'p_variable','syntax_analyzer.py',334),
  ('variable -> CLASS_VAR','variable',1,'p_variable','syntax_analyzer.py',335),
  ('variable -> GLOBAL_VAR','variable',1,'p_variable','syntax_analyzer.py',336),
  ('variable -> CONSTANT','variable',1,'p_variable','syntax_analyzer.py',337),
  ('declaraciones -> variable_declaration','declaraciones',1,'p_declaraciones','syntax_analyzer.py',341),
  ('declaraciones -> store_conditional_result','declaraciones',1,'p_declaraciones','syntax_analyzer.py',342),
  ('declaraciones -> declare_data_structures','declaraciones',1,'p_declaraciones','syntax_analyzer.py',343),
  ('declaraciones -> var_arreglo','declaraciones',1,'p_declaraciones','syntax_analyzer.py',344),
  ('declaraciones -> hash_var','declaraciones',1,'p_declaraciones','syntax_analyzer.py',345),
  ('declaraciones -> LOCAL_VAR ASSIGN arithmetic_production','declaraciones',3,'p_declaraciones','syntax_analyzer.py',346),
  ('declaraciones -> declaracion_concatenar_string','declaraciones',1,'p_declaraciones','syntax_analyzer.py',347),
  ('declaraciones -> proc_assignment','declaraciones',1,'p_declaraciones','syntax_analyzer.py',348),
  ('expresion -> puts','expresion',1,'p_expresion','syntax_analyzer.py',353),
  ('expresion -> gets','expresion',1,'p_expresion','syntax_analyzer.py',354),
  ('expresion -> print_statement','expresion',1,'p_expresion','syntax_analyzer.py',355),
  ('comparador -> value EQUAL value','comparador',3,'p_comparador','syntax_analyzer.py',362),
  ('comparador -> value COMPARE value','comparador',3,'p_comparador','syntax_analyzer.py',363),
  ('set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR','set_expression',8,'p_set_expression','syntax_analyzer.py',404),
  ('set_expression -> SET LEFT_COR values RIGHT_COR','set_expression',4,'p_set_expression','syntax_analyzer.py',405),
  ('set_operations -> set_expression','set_operations',1,'p_set_operations','syntax_analyzer.py',408),
  ('set_operations -> set_operations set_binary_operators set_expression','set_operations',3,'p_set_operations','syntax_analyzer.py',409),
  ('declare_data_structures -> LOCAL_VAR ASSIGN set_expression','declare_data_structures',3,'p_set_declaration','syntax_analyzer.py',412),
  ('set_binary_operators -> PLUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',416),
  ('set_binary_operators -> MINUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',417),
  ('set_binary_operators -> AMPERSAND','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',418),
  ('set_binary_operators -> PIPE','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',419),
  ('set_binary_operators -> CARET','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',420),
  ('unless_expression -> UNLESS boolean_expression THEN expresion END','unless_expression',5,'p_unless_expression','syntax_analyzer.py',423),
  ('unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END','unless_expression',7,'p_unless_expression','syntax_analyzer.py',424),
  ('arithmetic_production -> num','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',427),
  ('arithmetic_production -> LOCAL_VAR','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',428),
  ('arithmetic_production -> num arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',429),
  ('arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',430),
  ('arithmetic_operators -> PLUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',456),
  ('arithmetic_operators -> MINUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',457),
  ('arithmetic_operators -> MULTIPLY','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',458),
  ('arithmetic_operators -> DIVIDE','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',459),
  ('arithmetic_operators -> MODULO','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',460),
  ('arithmetic_operators -> EXPONENT','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',461),
  ('block_expression -> LBRACE expresion RBRACE','block_expression',3,'p_block_expression','syntax_analyzer.py',464),
  ('block_expression -> DO expresion END','block_expression',3,'p_block_expression','syntax_analyzer.py',465),
  ('block_expression -> DO expresion END_LOWER','block_expression',3,'p_block_expression','syntax_analyzer.py',466),
  ('block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE','block_expression',6,'p_block_expression','syntax_analyzer.py',467),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END','block_expression',6,'p_block_expression','syntax_analyzer.py',468),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER','block_expression',6,'p_block_expression','syntax_analyzer.py',469),
  ('block_assignment -> method_call block_expression','block_assignment',2,'p_block_assignment','syntax_analyzer.py',472),
  ('proc_expression -> PROC DOT NEW block_expression','proc_expression',4,'p_proc_expression','syntax_analyzer.py',475),
  ('proc_assignment -> LOCAL_VAR ASSIGN proc_expression','proc_assignment',3,'p_proc_assignment','syntax_analyzer.py',479),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR','proc_call',6,'p_proc_call','syntax_analyzer.py',483),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',484),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',485),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR','proc_call',4,'p_proc_call','syntax_analyzer.py',486),
  ('proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR','proc_call',4,'p_proc_call_cor','syntax_analyzer.py',494),
  ('proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR','proc_call',3,'p_proc_call_cor','syntax_analyzer.py',495),
  ('expresion -> condition_with_connectors','expresion',1,'p_condition_expr','syntax_analyzer.py',503),
]
