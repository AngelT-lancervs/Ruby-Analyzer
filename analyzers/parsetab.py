
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BIN_INTEGER BOOLEAN BREAK CALL CARET CASE CASE_EQUAL CHOMP CLASS CLASS_VAR COLON COMMA COMPARE CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END END_LOWER EQUAL EXPONENT EXPONENT_ASSIGN FALSE FLOAT FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET HEX_INTEGER IF IN INSTANCE_VAR INTEGER LBRACE LEFTPAR LEFT_COR LESS LESS_EQUAL LOCAL_VAR MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NMAP NOT NOT_EQUAL OCT_INTEGER OR OR_RESERVED PERCENTW PIPE PLUS PLUS_ASSIGN PROC PUT QUOTATION RANGEEX RANGEIN RBRACE REDO RETURN RIGHTPAR RIGHT_COR SELF SET SPACE STRING SYMBOL TAB THEN TO_F TO_I TO_S TRUE UNLESS UNTIL WHEN WHILEcodigo : sentencia\n              | codigo sentenciasentencia : puts \n                 | gets\n                 | estructurasDatos\n                 | estructurasControl\n                 | method_call\n                 | block_assignment\n                 | proc_call\n                 | declaraciones\n                 | expression\n                 | to_string\n                 | comparador estructurasDatos : array\n                         | acceder_arreglo\n                         | hash_operations\n                         | hash_var\n                         | set_expression\n                         | set_operations\n     estructurasControl : ifStatement\n                           | while_statement\n                           | unless_expression\n     value : num\n             | var\n             | STRING\n             | NIL\n             | SYMBOL\n           values_space : value SPACE values_space\n                     | value\n     values : value\n               | value COMMA values \n                var : LOCAL_VAR\n           | INSTANCE_VAR\n           | CLASS_VAR\n           | GLOBAL_VAR\n            num : FLOAT\n           | INTEGER\n            gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP DOT TO_I\n             | GETS DOT CHOMP\n     puts : PUT values \n\n     array : array_explicito\n              | array_implicito\n              | array_creation\n              | newArray\n     var_arreglo : LOCAL_VAR ASSIGN array\n     array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR\n     array_implicito : PERCENTW LEFT_COR values_space RIGHT_COR\n                        | PERCENTW LEFT_COR RIGHT_COR\n     array_creation : ARRAY LEFTPAR array_explicito RIGHTPAR\n     newArray : ARRAY DOT NEW \n                 | ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR\n                 | ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR\n     acceder_arreglo : var_arreglo LEFT_COR INTEGER RIGHT_COR\n     ifStatement : IF condiciones NEWLINE codigo END_LOWER\n                     | IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER\n     condiciones : condicion\n                    | condiciones conectores condiciones\n     conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED\n                   | EQUAL\n     condicion : num operComp num\n                  | var operComp num\n                  | num operComp var\n     operComp : GREATER\n                 | LESS\n                 | GREATER_EQUAL\n                 | LESS_EQUAL\n                 | EQUAL\n                 | NOT_EQUAL\n                 | COMPARE\n     else_statement : ELSE NEWLINE codigo\n     to_string : LOCAL_VAR DOT TO_S\n     concatenar_string : STRING PLUS STRING\n                          | STRING PLUS LOCAL_VAR\n                          | LOCAL_VAR PLUS STRING\n                          | LOCAL_VAR PLUS LOCAL_VAR\n     declaracion_concatenar_string : LOCAL_VAR ASSIGN concatenar_string\n     hash_var : LOCAL_VAR ASSIGN LBRACE hash_values RBRACE\n                 | LOCAL_VAR ASSIGN LBRACE RBRACE\n     hash_values : STRING HASH_ROCKET value\n                    | STRING HASH_ROCKET value COMMA hash_values\n     hash_access : var LBRACE value RBRACE\n     hash_operations : hash_access ASSIGN value\n     variable_declaration : var ASSIGN value\n                             | var PLUS_ASSIGN value\n                             | var MULTIPLY_ASSIGN value\n                             | var MINUS_ASSIGN value\n                             | LOCAL_VAR DIVIDE_ASSIGN value\n     store_conditional_result : LOCAL_VAR ASSIGN condiciones\n     declare_data_structures : var_arreglo\n                                | hash_var\n     while_statement : WHILE condiciones codigo END_LOWER\n     condition_with_connectors : condiciones conectores condiciones\n     method_call : LOCAL_VAR LEFTPAR values RIGHTPAR\n                    | LOCAL_VAR LEFTPAR RIGHTPAR\n     print_statement : PUT LEFTPAR values RIGHTPAR\n     boolean_expression : expression GREATER expression\n                           | expression LESS expression\n                           | expression GREATER_EQUAL expression\n                           | expression LESS_EQUAL expression\n                           | expression EQUAL expression\n                           | expression NOT_EQUAL expression\n                           | boolean_value  boolean_value : TRUE\n                      | FALSE  expression : INTEGER\n                   | FLOAT\n                   | variable\n                   | STRING  variable : LOCAL_VAR\n                 | INSTANCE_VAR\n                 | CLASS_VAR\n                 | GLOBAL_VAR\n                 | CONSTANT  declaraciones : variable_declaration\n                      | store_conditional_result\n                      | declare_data_structures\n                      | var_arreglo\n                      | hash_var\n                      | LOCAL_VAR ASSIGN arithmetic_production\n                      | declaracion_concatenar_string\n                      | proc_assignment\n     expresion : puts\n                 | gets\n                 | print_statement\n     comparador : value EQUAL value\n                   | value COMPARE value\n    set_expression : SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR\n                      | SET LEFT_COR values RIGHT_CORset_operations : set_expression\n                      | set_operations set_binary_operators set_expressiondeclare_data_structures : LOCAL_VAR ASSIGN set_expressionset_binary_operators : PLUS\n                            | MINUS\n                            | AMPERSAND\n                            | PIPE\n                            | CARETunless_expression : UNLESS boolean_expression THEN expresion END\n                         | UNLESS boolean_expression THEN expresion ELSE expresion ENDarithmetic_production : num\n                             | LOCAL_VAR\n                             | num arithmetic_operators arithmetic_production\n                             | LOCAL_VAR arithmetic_operators arithmetic_productionarithmetic_operators : PLUS\n                            | MINUS\n                            | MULTIPLY\n                            | DIVIDE\n                            | MODULO\n                            | EXPONENTblock_expression : LBRACE expresion RBRACE\n                         | DO expresion END\n                         | DO expresion END_LOWER\n                         | LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE\n                         | DO PIPE LOCAL_VAR PIPE expresion END\n                         | DO PIPE LOCAL_VAR PIPE expresion END_LOWERblock_assignment : method_call block_expressionproc_expression : PROC DOT NEW block_expressionproc_assignment : LOCAL_VAR ASSIGN proc_expressionproc_call : LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR LEFT_COR values RIGHT_COR\n                 | LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR RIGHTPAR\n                 | LOCAL_VAR LEFT_COR RIGHT_CORexpresion : condition_with_connectors'
    
_lr_action_items = {'PUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,172,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,238,241,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,262,268,270,275,277,278,279,282,283,284,287,288,289,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,122,122,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,14,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,14,14,122,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,14,-59,-65,-67,-66,-96,-49,-51,122,122,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,122,-163,-161,-53,-157,-158,-159,-57,14,-143,-132,14,-54,]),'GETS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,172,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,238,241,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,262,268,270,275,277,278,279,282,283,284,287,288,289,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,15,15,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,15,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,15,15,15,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,15,-59,-65,-67,-66,-96,-49,-51,15,15,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,15,-163,-161,-53,-157,-158,-159,-57,15,-143,-132,15,-54,]),'LOCAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,117,122,125,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,215,217,219,220,221,222,223,224,225,234,235,236,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[25,25,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,67,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,67,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,67,67,104,-115,-116,-117,-118,-23,-26,-27,-2,-160,67,67,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,67,67,136,67,-48,67,67,67,67,-58,25,67,67,67,67,67,67,190,67,195,67,-40,-135,-99,67,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,25,67,-60,-61,-62,-63,-64,67,-68,-69,-70,-71,-72,-73,-74,25,67,104,104,104,104,104,104,-88,-89,-90,-91,-50,-52,-154,67,67,-155,-156,-31,-98,67,-167,-165,247,250,-149,-150,-151,-152,-153,-83,247,-148,256,-55,-133,25,-59,-65,-67,-66,-96,-49,67,-51,67,67,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,67,-146,-77,-78,67,-56,-142,67,-163,-161,-53,67,-157,-158,-159,-57,25,-143,-132,25,-54,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,85,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,217,219,220,221,222,223,224,225,234,235,236,237,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[33,33,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,66,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,66,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,66,66,99,-115,-116,-117,-118,-23,-26,-27,-2,-160,66,66,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,66,66,66,66,-48,149,66,66,66,66,-58,33,66,66,66,66,66,66,66,66,-40,-135,-99,66,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,33,66,-60,-61,-62,-63,-64,66,-68,-69,-70,-71,-72,-73,-74,66,33,66,99,99,99,99,99,99,-88,-89,-90,-91,-50,-52,-154,66,66,-155,-156,-31,-98,66,-167,-165,66,-148,-149,-150,-151,-152,-153,-83,66,-148,-55,-133,33,-59,-65,-67,-66,-96,-49,66,-51,264,66,66,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,66,-146,-77,-78,66,-56,-142,66,-163,-161,-53,66,-157,-158,-159,-57,33,-143,-132,33,-54,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,203,204,205,206,207,208,209,211,213,214,217,219,220,221,222,223,224,225,234,235,236,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[34,34,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,65,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,65,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,65,65,100,-115,-116,-117,-118,-23,-26,-27,-2,-160,65,65,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,65,65,65,65,-48,65,65,65,65,-58,34,65,65,65,65,65,65,65,65,-40,-135,-99,65,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,34,65,-60,-61,-62,-63,-64,65,-68,-69,-70,-71,-72,-73,-74,65,34,65,100,100,100,100,100,100,-88,-89,-90,-91,-50,-52,-154,65,65,-155,-156,-31,-98,65,-167,-165,65,-148,-149,-150,-151,-152,-153,-83,65,-148,-55,-133,34,-59,-65,-67,-66,-96,-49,65,-51,65,65,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,65,-146,-77,-78,65,-56,-142,65,-163,-161,-53,65,-157,-158,-159,-57,34,-143,-132,34,-54,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,138,139,140,141,142,143,144,147,148,150,151,152,155,171,173,174,175,176,177,178,179,180,181,182,185,188,189,191,193,194,196,198,199,201,202,204,211,215,217,219,220,221,222,223,224,225,234,235,236,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,268,270,275,276,277,278,279,280,282,283,284,287,288,289,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,64,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,64,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,101,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,64,64,145,64,-48,64,64,64,64,-58,36,64,64,64,64,64,64,64,64,-40,-135,-99,64,-76,-168,-145,-124,212,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,36,36,101,101,101,101,101,101,-88,-89,-90,-91,-50,-52,-154,64,-155,-156,-31,-98,64,-167,-165,251,-83,255,-55,-133,36,-59,-65,-67,-66,-96,-49,64,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,64,-146,-77,-78,64,-56,-142,-163,-161,-53,64,-157,-158,-159,212,-57,36,-143,-132,36,-54,]),'SET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[43,43,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,43,-137,-138,-139,-140,-141,43,-48,-58,43,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,43,43,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,43,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,43,-143,-132,43,-54,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[44,44,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,44,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,44,44,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,44,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,44,-143,-132,44,-54,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[45,45,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,45,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,45,45,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,45,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,45,-143,-132,45,-54,]),'UNLESS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[46,46,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,46,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,46,46,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,46,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,46,-143,-132,46,-54,]),'INSTANCE_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,221,222,223,224,225,234,235,236,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[48,48,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,68,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,68,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,68,68,105,-115,-116,-117,-118,-23,-26,-27,-2,-160,68,68,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,68,68,68,68,-48,68,68,68,68,-58,48,68,68,68,68,68,68,68,68,-40,-135,-99,68,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,48,68,-60,-61,-62,-63,-64,68,-68,-69,-70,-71,-72,-73,-74,48,68,105,105,105,105,105,105,-88,-89,-90,-91,-50,-52,-154,68,68,-155,-156,-31,-98,68,-167,-165,-83,-55,-133,48,-59,-65,-67,-66,-96,-49,68,-51,68,68,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,68,-146,-77,-78,68,-56,-142,68,-163,-161,-53,68,-157,-158,-159,-57,48,-143,-132,48,-54,]),'CLASS_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,221,222,223,224,225,234,235,236,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[49,49,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,69,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,69,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,69,69,106,-115,-116,-117,-118,-23,-26,-27,-2,-160,69,69,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,69,69,69,69,-48,69,69,69,69,-58,49,69,69,69,69,69,69,69,69,-40,-135,-99,69,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,49,69,-60,-61,-62,-63,-64,69,-68,-69,-70,-71,-72,-73,-74,49,69,106,106,106,106,106,106,-88,-89,-90,-91,-50,-52,-154,69,69,-155,-156,-31,-98,69,-167,-165,-83,-55,-133,49,-59,-65,-67,-66,-96,-49,69,-51,69,69,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,69,-146,-77,-78,69,-56,-142,69,-163,-161,-53,69,-157,-158,-159,-57,49,-143,-132,49,-54,]),'GLOBAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,191,192,193,194,196,198,199,201,202,211,217,219,220,221,222,223,224,225,234,235,236,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,268,270,275,276,277,278,279,282,283,284,287,288,289,],[50,50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,70,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,70,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,70,70,107,-115,-116,-117,-118,-23,-26,-27,-2,-160,70,70,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,70,70,70,70,-48,70,70,70,70,-58,50,70,70,70,70,70,70,70,70,-40,-135,-99,70,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,50,70,-60,-61,-62,-63,-64,70,-68,-69,-70,-71,-72,-73,-74,50,70,107,107,107,107,107,107,-88,-89,-90,-91,-50,-52,-154,70,70,-155,-156,-31,-98,70,-167,-165,-83,-55,-133,50,-59,-65,-67,-66,-96,-49,70,-51,70,70,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,70,-146,-77,-78,70,-56,-142,70,-163,-161,-53,70,-157,-158,-159,-57,50,-143,-132,50,-54,]),'CONSTANT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,173,174,175,176,177,178,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[51,51,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,51,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,51,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,51,51,51,51,51,51,51,51,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,51,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,51,-143,-132,51,-54,]),'NIL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,191,193,194,196,198,199,201,202,211,217,219,220,221,222,223,224,225,234,235,236,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,268,270,275,276,277,278,279,282,283,284,287,288,289,],[53,53,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,53,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,53,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,53,53,53,-48,53,53,53,53,-58,53,53,53,53,53,53,53,53,53,-40,-135,-99,53,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,53,53,-88,-89,-90,-91,-50,-52,-154,53,-155,-156,-31,-98,53,-167,-165,-83,-55,-133,53,-59,-65,-67,-66,-96,-49,53,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,53,-146,-77,-78,53,-56,-142,-163,-161,-53,53,-157,-158,-159,-57,53,-143,-132,53,-54,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,82,84,86,87,88,90,92,95,108,109,110,111,112,113,122,126,127,128,130,132,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,191,193,194,196,198,199,201,202,211,217,219,220,221,222,223,224,225,234,235,236,242,243,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,268,270,275,276,277,278,279,282,283,284,287,288,289,],[54,54,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,54,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,54,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,54,54,54,-48,54,54,54,54,-58,54,54,54,54,54,54,54,54,54,-40,-135,-99,54,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,54,54,-88,-89,-90,-91,-50,-52,-154,54,-155,-156,-31,-98,54,-167,-165,-83,-55,-133,54,-59,-65,-67,-66,-96,-49,54,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,54,-146,-77,-78,54,-56,-142,-163,-161,-53,54,-157,-158,-159,-57,54,-143,-132,54,-54,]),'LEFT_COR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,48,49,50,51,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,81,84,92,95,114,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,218,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,80,-119,-120,-121,85,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,90,-115,-116,-117,-118,-23,-26,-27,113,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,26,-48,-58,26,26,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,26,26,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,258,-133,26,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,26,-143,-132,26,-54,]),'PERCENTW':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[55,55,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,55,-48,-58,55,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,55,55,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,55,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,55,-143,-132,55,-54,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,84,92,95,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,155,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,283,284,287,288,289,],[56,56,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,56,-48,-58,56,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,56,56,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,56,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,56,-143,-132,56,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,275,277,278,279,282,284,287,289,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,-53,-157,-158,-159,-57,-143,-132,-54,]),'END_LOWER':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,92,118,119,120,121,124,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,171,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,240,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,266,267,268,270,272,275,277,278,279,282,284,287,288,289,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-127,-128,-129,-169,194,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,225,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,260,-59,-65,-67,-66,-96,-49,-51,-97,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-100,279,-163,-161,282,-53,-157,-158,-159,-57,-143,-132,-75,-54,]),'NEWLINE':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,48,49,50,51,52,53,54,57,58,61,62,63,64,65,66,67,68,69,70,84,91,92,127,128,130,133,135,136,137,139,140,141,142,143,144,147,148,150,151,152,179,180,181,182,185,188,189,193,194,196,198,201,202,211,217,219,220,221,222,223,224,225,234,236,242,243,245,246,247,248,249,250,251,252,254,255,256,260,261,268,270,273,275,277,278,279,282,284,287,289,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-114,-119,-120,-121,-94,-125,-126,-110,-111,-112,-113,-42,-43,-44,-45,-115,-116,-117,-118,-23,-26,-27,-2,-160,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,155,-58,-40,-135,-99,-76,-168,-145,-124,-93,-136,-46,-81,-162,-144,-92,-47,-130,-131,-87,-88,-89,-90,-91,-50,-52,-154,-155,-156,-31,-98,-167,-165,-83,-55,-133,259,-59,-65,-67,-66,-96,-49,-51,-38,-39,-166,-164,-145,-147,-144,-80,-79,-82,-146,-77,-78,-56,-142,-163,-161,283,-53,-157,-158,-159,-57,-143,-132,-54,]),'LBRACE':([7,25,47,48,49,50,81,130,198,257,],[59,-32,112,-33,-34,-35,138,-99,-98,59,]),'DO':([7,130,198,257,],[60,-99,-98,60,]),'DOT':([15,25,43,56,127,146,],[71,79,89,115,197,216,]),'PLUS':([20,21,65,66,128,136,144,145,219,247,249,287,],[-134,73,-36,-37,-135,204,214,215,-133,214,214,-132,]),'MINUS':([20,21,65,66,128,136,144,219,247,249,287,],[-134,74,-36,-37,-135,205,205,-133,205,205,-132,]),'AMPERSAND':([20,21,128,219,287,],[-134,75,-135,-133,-132,]),'PIPE':([20,21,59,60,128,190,195,219,287,],[-134,76,117,125,-135,238,241,-133,-132,]),'CARET':([20,21,128,219,287,],[-134,77,-135,-133,-132,]),'LEFTPAR':([25,56,79,122,131,153,188,],[78,114,132,191,199,218,237,]),'ASSIGN':([25,42,47,48,49,50,233,],[81,88,108,-33,-34,-35,-86,]),'DIVIDE_ASSIGN':([25,],[82,]),'PLUS_ASSIGN':([25,47,48,49,50,],[-32,109,-33,-34,-35,]),'MULTIPLY_ASSIGN':([25,47,48,49,50,],[-32,110,-33,-34,-35,]),'MINUS_ASSIGN':([25,47,48,49,50,],[-32,111,-33,-34,-35,]),'EQUAL':([25,33,34,35,36,37,47,48,49,50,51,52,53,54,65,66,67,68,69,70,91,92,93,94,95,97,99,100,101,104,105,106,107,123,136,139,144,221,222,223,224,240,],[-32,-37,-36,-112,-25,86,-24,-33,-34,-35,-118,-23,-26,-27,-36,-37,-32,-33,-34,-35,161,-58,167,167,161,177,-110,-111,-113,-114,-115,-116,-117,161,-32,161,167,161,-65,-67,-66,161,]),'COMPARE':([25,33,34,36,37,47,48,49,50,52,53,54,65,66,67,68,69,70,93,94,136,144,],[-32,-37,-36,-25,87,-24,-33,-34,-35,-23,-26,-27,-36,-37,-32,-33,-34,-35,169,169,-32,169,]),'RIGHT_COR':([26,52,53,54,62,63,64,65,66,67,68,69,70,80,83,113,134,149,154,184,186,196,263,271,],[84,-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,135,148,185,202,217,219,234,-29,-31,-28,281,]),'GREATER':([35,51,65,66,67,68,69,70,93,94,97,99,100,101,104,105,106,107,136,144,],[-112,-118,-36,-37,-32,-33,-34,-35,163,163,173,-110,-111,-113,-114,-115,-116,-117,-32,163,]),'LESS':([35,51,65,66,67,68,69,70,93,94,97,99,100,101,104,105,106,107,136,144,],[-112,-118,-36,-37,-32,-33,-34,-35,164,164,174,-110,-111,-113,-114,-115,-116,-117,-32,164,]),'GREATER_EQUAL':([35,51,65,66,67,68,69,70,93,94,97,99,100,101,104,105,106,107,136,144,],[-112,-118,-36,-37,-32,-33,-34,-35,165,165,175,-110,-111,-113,-114,-115,-116,-117,-32,165,]),'LESS_EQUAL':([35,51,65,66,67,68,69,70,93,94,97,99,100,101,104,105,106,107,136,144,],[-112,-118,-36,-37,-32,-33,-34,-35,166,166,176,-110,-111,-113,-114,-115,-116,-117,-32,166,]),'NOT_EQUAL':([35,51,65,66,67,68,69,70,93,94,97,99,100,101,104,105,106,107,136,144,],[-112,-118,-36,-37,-32,-33,-34,-35,168,168,178,-110,-111,-113,-114,-115,-116,-117,-32,168,]),'THEN':([35,51,96,98,99,100,101,102,103,104,105,106,107,227,228,229,230,231,232,],[-112,-118,172,-107,-110,-111,-113,-108,-109,-114,-115,-116,-117,-101,-102,-103,-104,-105,-106,]),'TRUE':([46,],[102,]),'FALSE':([46,],[103,]),'COMMA':([52,53,54,62,63,64,65,66,67,68,69,70,264,269,],[-23,-26,-27,126,-24,-25,-36,-37,-32,-33,-34,-35,276,280,]),'RIGHTPAR':([52,53,54,62,63,64,65,66,67,68,69,70,78,84,129,132,148,187,196,199,200,239,244,264,281,285,],[-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,130,-48,198,201,-47,236,-31,245,246,266,268,275,287,289,]),'RBRACE':([52,53,54,61,62,63,64,65,66,67,68,69,70,92,116,118,119,120,121,127,138,183,196,210,221,222,223,224,240,242,243,265,266,269,286,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,189,-127,-128,-129,-169,-40,211,233,-31,252,-59,-65,-67,-66,-97,-38,-39,277,-100,-84,-85,]),'SPACE':([52,53,54,63,64,65,66,67,68,69,70,186,],[-23,-26,-27,-24,-25,-36,-37,-32,-33,-34,-35,235,]),'END':([52,53,54,61,62,63,64,65,66,67,68,69,70,92,118,119,120,121,124,127,196,221,222,223,224,226,240,242,243,266,267,274,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,-127,-128,-129,-169,193,-40,-31,-59,-65,-67,-66,261,-97,-38,-39,-100,278,284,]),'ELSE':([52,53,54,61,62,63,64,65,66,67,68,69,70,92,118,119,120,121,127,196,221,222,223,224,226,240,242,243,259,266,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,-127,-128,-129,-169,-40,-31,-59,-65,-67,-66,262,-97,-38,-39,273,-100,]),'MULTIPLY':([65,66,136,144,247,249,],[-36,-37,206,206,206,206,]),'DIVIDE':([65,66,136,144,247,249,],[-36,-37,207,207,207,207,]),'MODULO':([65,66,136,144,247,249,],[-36,-37,208,208,208,208,]),'EXPONENT':([65,66,136,144,247,249,],[-36,-37,209,209,209,209,]),'AND':([65,66,67,68,69,70,91,92,95,123,139,221,222,223,224,240,],[-36,-37,-32,-33,-34,-35,157,-58,157,157,157,157,-65,-67,-66,157,]),'OR':([65,66,67,68,69,70,91,92,95,123,139,221,222,223,224,240,],[-36,-37,-32,-33,-34,-35,158,-58,158,158,158,158,-65,-67,-66,158,]),'AND_RESERVED':([65,66,67,68,69,70,91,92,95,123,139,221,222,223,224,240,],[-36,-37,-32,-33,-34,-35,159,-58,159,159,159,159,-65,-67,-66,159,]),'OR_RESERVED':([65,66,67,68,69,70,91,92,95,123,139,221,222,223,224,240,],[-36,-37,-32,-33,-34,-35,160,-58,160,160,160,160,-65,-67,-66,160,]),'CHOMP':([71,],[127,]),'CALL':([79,],[131,]),'TO_S':([79,],[133,]),'PROC':([81,],[146,]),'NEW':([89,115,216,],[153,188,257,]),'TO_F':([197,],[242,]),'TO_I':([197,],[243,]),'HASH_ROCKET':([212,],[253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,95,155,283,],[1,171,220,288,]),'sentencia':([0,1,95,155,171,220,283,288,],[2,57,2,2,57,57,2,57,]),'puts':([0,1,59,60,95,155,171,172,220,238,241,262,283,288,],[3,3,118,118,3,3,3,118,3,118,118,118,3,3,]),'gets':([0,1,59,60,95,155,171,172,220,238,241,262,283,288,],[4,4,119,119,4,4,4,119,4,119,119,119,4,4,]),'estructurasDatos':([0,1,95,155,171,220,283,288,],[5,5,5,5,5,5,5,5,]),'estructurasControl':([0,1,95,155,171,220,283,288,],[6,6,6,6,6,6,6,6,]),'method_call':([0,1,95,155,171,220,283,288,],[7,7,7,7,7,7,7,7,]),'block_assignment':([0,1,95,155,171,220,283,288,],[8,8,8,8,8,8,8,8,]),'proc_call':([0,1,95,155,171,220,283,288,],[9,9,9,9,9,9,9,9,]),'declaraciones':([0,1,95,155,171,220,283,288,],[10,10,10,10,10,10,10,10,]),'expression':([0,1,46,95,155,171,173,174,175,176,177,178,220,283,288,],[11,11,97,11,11,11,227,228,229,230,231,232,11,11,11,]),'to_string':([0,1,95,155,171,220,283,288,],[12,12,12,12,12,12,12,12,]),'comparador':([0,1,95,155,171,220,283,288,],[13,13,13,13,13,13,13,13,]),'array':([0,1,81,95,155,171,220,283,288,],[16,16,141,16,16,16,16,16,16,]),'acceder_arreglo':([0,1,95,155,171,220,283,288,],[17,17,17,17,17,17,17,17,]),'hash_operations':([0,1,95,155,171,220,283,288,],[18,18,18,18,18,18,18,18,]),'hash_var':([0,1,95,155,171,220,283,288,],[19,19,19,19,19,19,19,19,]),'set_expression':([0,1,72,81,95,155,171,220,283,288,],[20,20,128,140,20,20,20,20,20,20,]),'set_operations':([0,1,95,155,171,220,283,288,],[21,21,21,21,21,21,21,21,]),'ifStatement':([0,1,95,155,171,220,283,288,],[22,22,22,22,22,22,22,22,]),'while_statement':([0,1,95,155,171,220,283,288,],[23,23,23,23,23,23,23,23,]),'unless_expression':([0,1,95,155,171,220,283,288,],[24,24,24,24,24,24,24,24,]),'variable_declaration':([0,1,95,155,171,220,283,288,],[27,27,27,27,27,27,27,27,]),'store_conditional_result':([0,1,95,155,171,220,283,288,],[28,28,28,28,28,28,28,28,]),'declare_data_structures':([0,1,95,155,171,220,283,288,],[29,29,29,29,29,29,29,29,]),'var_arreglo':([0,1,95,155,171,220,283,288,],[30,30,30,30,30,30,30,30,]),'declaracion_concatenar_string':([0,1,95,155,171,220,283,288,],[31,31,31,31,31,31,31,31,]),'proc_assignment':([0,1,95,155,171,220,283,288,],[32,32,32,32,32,32,32,32,]),'variable':([0,1,46,95,155,171,173,174,175,176,177,178,220,283,288,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'value':([0,1,14,26,78,80,82,86,87,88,90,95,108,109,110,111,112,113,122,126,132,155,171,191,199,220,235,253,258,276,283,288,],[37,37,62,62,62,62,147,150,151,152,62,37,179,180,181,182,183,186,62,62,62,37,37,62,62,37,186,269,62,62,37,37,]),'array_explicito':([0,1,81,95,114,155,171,220,283,288,],[38,38,38,38,187,38,38,38,38,38,]),'array_implicito':([0,1,81,95,155,171,220,283,288,],[39,39,39,39,39,39,39,39,39,]),'array_creation':([0,1,81,95,155,171,220,283,288,],[40,40,40,40,40,40,40,40,40,]),'newArray':([0,1,81,95,155,171,220,283,288,],[41,41,41,41,41,41,41,41,41,]),'hash_access':([0,1,95,155,171,220,283,288,],[42,42,42,42,42,42,42,42,]),'var':([0,1,14,26,44,45,59,60,78,80,81,82,86,87,88,90,95,108,109,110,111,112,113,122,126,132,155,156,162,171,172,191,192,199,220,235,238,241,253,258,262,276,283,288,],[47,47,63,63,94,94,94,94,63,63,94,63,63,63,63,63,47,63,63,63,63,63,63,63,63,63,47,94,223,47,94,63,94,63,47,63,94,94,63,63,94,63,47,47,]),'num':([0,1,14,26,44,45,59,60,78,80,81,82,86,87,88,90,95,108,109,110,111,112,113,122,126,132,155,156,162,170,171,172,191,192,199,203,213,220,235,238,241,253,258,262,276,283,288,],[52,52,52,52,93,93,93,93,52,52,144,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,93,222,224,52,93,52,93,52,249,249,52,52,93,93,52,52,93,52,52,52,]),'block_expression':([7,257,],[58,270,]),'values':([14,26,78,80,90,122,126,132,191,199,258,276,],[61,83,129,134,154,61,196,200,239,244,271,285,]),'set_binary_operators':([21,],[72,]),'condiciones':([44,45,59,60,81,156,172,192,238,241,262,],[91,95,123,123,139,221,123,240,123,123,123,]),'condicion':([44,45,59,60,81,156,172,192,238,241,262,],[92,92,92,92,92,92,92,92,92,92,92,]),'boolean_expression':([46,],[96,]),'boolean_value':([46,],[98,]),'expresion':([59,60,172,238,241,262,],[116,124,226,265,267,274,]),'print_statement':([59,60,172,238,241,262,],[120,120,120,120,120,120,]),'condition_with_connectors':([59,60,172,238,241,262,],[121,121,121,121,121,121,]),'arithmetic_production':([81,203,213,],[137,248,254,]),'concatenar_string':([81,],[142,]),'proc_expression':([81,],[143,]),'conectores':([91,95,123,139,221,240,],[156,156,192,156,156,156,]),'operComp':([93,94,144,],[162,170,162,]),'values_space':([113,235,],[184,263,]),'arithmetic_operators':([136,144,247,249,],[203,213,203,213,]),'hash_values':([138,280,],[210,286,]),'else_statement':([259,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> sentencia','codigo',1,'p_codigo','syntax_analyzer.py',16),
  ('codigo -> codigo sentencia','codigo',2,'p_codigo','syntax_analyzer.py',17),
  ('sentencia -> puts','sentencia',1,'p_sentencia','syntax_analyzer.py',20),
  ('sentencia -> gets','sentencia',1,'p_sentencia','syntax_analyzer.py',21),
  ('sentencia -> estructurasDatos','sentencia',1,'p_sentencia','syntax_analyzer.py',22),
  ('sentencia -> estructurasControl','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> method_call','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> block_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> proc_call','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> declaraciones','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> expression','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> to_string','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> comparador','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',33),
  ('estructurasDatos -> acceder_arreglo','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',34),
  ('estructurasDatos -> hash_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',35),
  ('estructurasDatos -> hash_var','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',36),
  ('estructurasDatos -> set_expression','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',37),
  ('estructurasDatos -> set_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',38),
  ('estructurasControl -> ifStatement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',42),
  ('estructurasControl -> while_statement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',43),
  ('estructurasControl -> unless_expression','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',44),
  ('value -> num','value',1,'p_value','syntax_analyzer.py',49),
  ('value -> var','value',1,'p_value','syntax_analyzer.py',50),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',51),
  ('value -> NIL','value',1,'p_value','syntax_analyzer.py',52),
  ('value -> SYMBOL','value',1,'p_value','syntax_analyzer.py',53),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','syntax_analyzer.py',58),
  ('values_space -> value','values_space',1,'p_values_space','syntax_analyzer.py',59),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',63),
  ('values -> value COMMA values','values',3,'p_values','syntax_analyzer.py',64),
  ('var -> LOCAL_VAR','var',1,'p_var','syntax_analyzer.py',68),
  ('var -> INSTANCE_VAR','var',1,'p_var','syntax_analyzer.py',69),
  ('var -> CLASS_VAR','var',1,'p_var','syntax_analyzer.py',70),
  ('var -> GLOBAL_VAR','var',1,'p_var','syntax_analyzer.py',71),
  ('num -> FLOAT','num',1,'p_num','syntax_analyzer.py',76),
  ('num -> INTEGER','num',1,'p_num','syntax_analyzer.py',77),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','syntax_analyzer.py',82),
  ('gets -> GETS DOT CHOMP DOT TO_I','gets',5,'p_gets','syntax_analyzer.py',83),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','syntax_analyzer.py',84),
  ('puts -> PUT values','puts',2,'p_puts','syntax_analyzer.py',88),
  ('array -> array_explicito','array',1,'p_array','syntax_analyzer.py',94),
  ('array -> array_implicito','array',1,'p_array','syntax_analyzer.py',95),
  ('array -> array_creation','array',1,'p_array','syntax_analyzer.py',96),
  ('array -> newArray','array',1,'p_array','syntax_analyzer.py',97),
  ('var_arreglo -> LOCAL_VAR ASSIGN array','var_arreglo',3,'p_var_arreglo','syntax_analyzer.py',102),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','syntax_analyzer.py',107),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','syntax_analyzer.py',108),
  ('array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','syntax_analyzer.py',113),
  ('array_implicito -> PERCENTW LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','syntax_analyzer.py',114),
  ('array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR','array_creation',4,'p_array_creation','syntax_analyzer.py',118),
  ('newArray -> ARRAY DOT NEW','newArray',3,'p_newArray','syntax_analyzer.py',122),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR','newArray',6,'p_newArray','syntax_analyzer.py',123),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR','newArray',8,'p_newArray','syntax_analyzer.py',124),
  ('acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','syntax_analyzer.py',128),
  ('ifStatement -> IF condiciones NEWLINE codigo END_LOWER','ifStatement',5,'p_ifStatement','syntax_analyzer.py',133),
  ('ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER','ifStatement',7,'p_ifStatement','syntax_analyzer.py',134),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','syntax_analyzer.py',138),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','syntax_analyzer.py',139),
  ('conectores -> AND','conectores',1,'p_conectores','syntax_analyzer.py',144),
  ('conectores -> OR','conectores',1,'p_conectores','syntax_analyzer.py',145),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',146),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',147),
  ('conectores -> EQUAL','conectores',1,'p_conectores','syntax_analyzer.py',148),
  ('condicion -> num operComp num','condicion',3,'p_condicion','syntax_analyzer.py',153),
  ('condicion -> var operComp num','condicion',3,'p_condicion','syntax_analyzer.py',154),
  ('condicion -> num operComp var','condicion',3,'p_condicion','syntax_analyzer.py',155),
  ('operComp -> GREATER','operComp',1,'p_operComp','syntax_analyzer.py',160),
  ('operComp -> LESS','operComp',1,'p_operComp','syntax_analyzer.py',161),
  ('operComp -> GREATER_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',162),
  ('operComp -> LESS_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',163),
  ('operComp -> EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',164),
  ('operComp -> NOT_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',165),
  ('operComp -> COMPARE','operComp',1,'p_operComp','syntax_analyzer.py',166),
  ('else_statement -> ELSE NEWLINE codigo','else_statement',3,'p_else_statement','syntax_analyzer.py',170),
  ('to_string -> LOCAL_VAR DOT TO_S','to_string',3,'p_to_string','syntax_analyzer.py',174),
  ('concatenar_string -> STRING PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',187),
  ('concatenar_string -> STRING PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',188),
  ('concatenar_string -> LOCAL_VAR PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',189),
  ('concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',190),
  ('declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string','declaracion_concatenar_string',3,'p_declaracion_concatenar_string','syntax_analyzer.py',204),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE','hash_var',5,'p_hash_var','syntax_analyzer.py',224),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE','hash_var',4,'p_hash_var','syntax_analyzer.py',225),
  ('hash_values -> STRING HASH_ROCKET value','hash_values',3,'p_hash_values','syntax_analyzer.py',237),
  ('hash_values -> STRING HASH_ROCKET value COMMA hash_values','hash_values',5,'p_hash_values','syntax_analyzer.py',238),
  ('hash_access -> var LBRACE value RBRACE','hash_access',4,'p_hash_access','syntax_analyzer.py',259),
  ('hash_operations -> hash_access ASSIGN value','hash_operations',3,'p_hash_operations','syntax_analyzer.py',263),
  ('variable_declaration -> var ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',268),
  ('variable_declaration -> var PLUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',269),
  ('variable_declaration -> var MULTIPLY_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',270),
  ('variable_declaration -> var MINUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',271),
  ('variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',272),
  ('store_conditional_result -> LOCAL_VAR ASSIGN condiciones','store_conditional_result',3,'p_store_conditional_result','syntax_analyzer.py',280),
  ('declare_data_structures -> var_arreglo','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',285),
  ('declare_data_structures -> hash_var','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',286),
  ('while_statement -> WHILE condiciones codigo END_LOWER','while_statement',4,'p_while_statement','syntax_analyzer.py',291),
  ('condition_with_connectors -> condiciones conectores condiciones','condition_with_connectors',3,'p_condition_with_connectors','syntax_analyzer.py',296),
  ('method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR','method_call',4,'p_method_call','syntax_analyzer.py',301),
  ('method_call -> LOCAL_VAR LEFTPAR RIGHTPAR','method_call',3,'p_method_call','syntax_analyzer.py',302),
  ('print_statement -> PUT LEFTPAR values RIGHTPAR','print_statement',4,'p_print_statement','syntax_analyzer.py',306),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',311),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',312),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',313),
  ('boolean_expression -> expression LESS_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',314),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',315),
  ('boolean_expression -> expression NOT_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',316),
  ('boolean_expression -> boolean_value','boolean_expression',1,'p_boolean_expression','syntax_analyzer.py',317),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',321),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',322),
  ('expression -> INTEGER','expression',1,'p_expression','syntax_analyzer.py',326),
  ('expression -> FLOAT','expression',1,'p_expression','syntax_analyzer.py',327),
  ('expression -> variable','expression',1,'p_expression','syntax_analyzer.py',328),
  ('expression -> STRING','expression',1,'p_expression','syntax_analyzer.py',329),
  ('variable -> LOCAL_VAR','variable',1,'p_variable','syntax_analyzer.py',332),
  ('variable -> INSTANCE_VAR','variable',1,'p_variable','syntax_analyzer.py',333),
  ('variable -> CLASS_VAR','variable',1,'p_variable','syntax_analyzer.py',334),
  ('variable -> GLOBAL_VAR','variable',1,'p_variable','syntax_analyzer.py',335),
  ('variable -> CONSTANT','variable',1,'p_variable','syntax_analyzer.py',336),
  ('declaraciones -> variable_declaration','declaraciones',1,'p_declaraciones','syntax_analyzer.py',340),
  ('declaraciones -> store_conditional_result','declaraciones',1,'p_declaraciones','syntax_analyzer.py',341),
  ('declaraciones -> declare_data_structures','declaraciones',1,'p_declaraciones','syntax_analyzer.py',342),
  ('declaraciones -> var_arreglo','declaraciones',1,'p_declaraciones','syntax_analyzer.py',343),
  ('declaraciones -> hash_var','declaraciones',1,'p_declaraciones','syntax_analyzer.py',344),
  ('declaraciones -> LOCAL_VAR ASSIGN arithmetic_production','declaraciones',3,'p_declaraciones','syntax_analyzer.py',345),
  ('declaraciones -> declaracion_concatenar_string','declaraciones',1,'p_declaraciones','syntax_analyzer.py',346),
  ('declaraciones -> proc_assignment','declaraciones',1,'p_declaraciones','syntax_analyzer.py',347),
  ('expresion -> puts','expresion',1,'p_expresion','syntax_analyzer.py',352),
  ('expresion -> gets','expresion',1,'p_expresion','syntax_analyzer.py',353),
  ('expresion -> print_statement','expresion',1,'p_expresion','syntax_analyzer.py',354),
  ('comparador -> value EQUAL value','comparador',3,'p_comparador','syntax_analyzer.py',361),
  ('comparador -> value COMPARE value','comparador',3,'p_comparador','syntax_analyzer.py',362),
  ('set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR','set_expression',8,'p_set_expression','syntax_analyzer.py',403),
  ('set_expression -> SET LEFT_COR values RIGHT_COR','set_expression',4,'p_set_expression','syntax_analyzer.py',404),
  ('set_operations -> set_expression','set_operations',1,'p_set_operations','syntax_analyzer.py',407),
  ('set_operations -> set_operations set_binary_operators set_expression','set_operations',3,'p_set_operations','syntax_analyzer.py',408),
  ('declare_data_structures -> LOCAL_VAR ASSIGN set_expression','declare_data_structures',3,'p_set_declaration','syntax_analyzer.py',411),
  ('set_binary_operators -> PLUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',415),
  ('set_binary_operators -> MINUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',416),
  ('set_binary_operators -> AMPERSAND','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',417),
  ('set_binary_operators -> PIPE','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',418),
  ('set_binary_operators -> CARET','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',419),
  ('unless_expression -> UNLESS boolean_expression THEN expresion END','unless_expression',5,'p_unless_expression','syntax_analyzer.py',422),
  ('unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END','unless_expression',7,'p_unless_expression','syntax_analyzer.py',423),
  ('arithmetic_production -> num','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',426),
  ('arithmetic_production -> LOCAL_VAR','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',427),
  ('arithmetic_production -> num arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',428),
  ('arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',429),
  ('arithmetic_operators -> PLUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',455),
  ('arithmetic_operators -> MINUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',456),
  ('arithmetic_operators -> MULTIPLY','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',457),
  ('arithmetic_operators -> DIVIDE','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',458),
  ('arithmetic_operators -> MODULO','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',459),
  ('arithmetic_operators -> EXPONENT','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',460),
  ('block_expression -> LBRACE expresion RBRACE','block_expression',3,'p_block_expression','syntax_analyzer.py',463),
  ('block_expression -> DO expresion END','block_expression',3,'p_block_expression','syntax_analyzer.py',464),
  ('block_expression -> DO expresion END_LOWER','block_expression',3,'p_block_expression','syntax_analyzer.py',465),
  ('block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE','block_expression',6,'p_block_expression','syntax_analyzer.py',466),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END','block_expression',6,'p_block_expression','syntax_analyzer.py',467),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER','block_expression',6,'p_block_expression','syntax_analyzer.py',468),
  ('block_assignment -> method_call block_expression','block_assignment',2,'p_block_assignment','syntax_analyzer.py',471),
  ('proc_expression -> PROC DOT NEW block_expression','proc_expression',4,'p_proc_expression','syntax_analyzer.py',474),
  ('proc_assignment -> LOCAL_VAR ASSIGN proc_expression','proc_assignment',3,'p_proc_assignment','syntax_analyzer.py',478),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR','proc_call',6,'p_proc_call','syntax_analyzer.py',482),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',483),
  ('proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR','proc_call',4,'p_proc_call','syntax_analyzer.py',484),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',485),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR','proc_call',4,'p_proc_call','syntax_analyzer.py',486),
  ('proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR','proc_call',3,'p_proc_call','syntax_analyzer.py',487),
  ('expresion -> condition_with_connectors','expresion',1,'p_condition_expr','syntax_analyzer.py',495),
]
