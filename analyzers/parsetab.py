
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BIN_INTEGER BOOLEAN BREAK CALL CARET CASE CASE_EQUAL CHOMP CLASS CLASS_VAR COLON COMMA COMPARE CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END END_LOWER EQUAL EXPONENT EXPONENT_ASSIGN FALSE FLOAT FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET HEX_INTEGER IF IN INSTANCE_VAR INTEGER LBRACE LEFTPAR LEFT_COR LESS LESS_EQUAL LOCAL_VAR MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NMAP NOT NOT_EQUAL OCT_INTEGER OR OR_RESERVED PERCENTW PIPE PLUS PLUS_ASSIGN PROC PUT QUOTATION RANGEEX RANGEIN RBRACE REDO RETURN RIGHTPAR RIGHT_COR SELF SET SPACE STRING SYMBOL TAB THEN TO_F TO_I TO_S TRUE UNLESS UNTIL WHEN WHILEcodigo : sentencia\n              | codigo sentenciasentencia : puts \n                 | gets\n                 | estructurasDatos\n                 | estructurasControl\n                 | method_call\n                 | block_assignment\n                 | proc_call\n                 | declaraciones\n                 | expression\n                 | to_string\n                 | comparador estructurasDatos : array\n                         | acceder_arreglo\n                         | hash_operations\n                         | hash_var\n                         | set_expression\n                         | set_operations\n     estructurasControl : ifStatement\n                           | while_statement\n                           | unless_expression\n     value : num\n             | var\n             | STRING\n             | NIL\n             | SYMBOL\n           values_space : value SPACE values_space\n                     | value\n     values : value\n               | value COMMA values \n                var : LOCAL_VAR\n           | INSTANCE_VAR\n           | CLASS_VAR\n           | GLOBAL_VAR\n            num : FLOAT\n           | INTEGER\n            gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP DOT TO_I\n             | GETS DOT CHOMP\n     puts : PUT values \n\n     array : array_explicito\n              | array_implicito\n              | array_creation\n              | newArray\n     var_arreglo : LOCAL_VAR ASSIGN array\n     array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR\n     array_implicito : PERCENTW LEFT_COR values_space RIGHT_COR\n                        | PERCENTW LEFT_COR RIGHT_COR\n     array_creation : ARRAY LEFTPAR array_explicito RIGHTPAR\n     newArray : ARRAY DOT NEW \n                 | ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR\n                 | ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR\n     acceder_arreglo : var_arreglo LEFT_COR INTEGER RIGHT_COR\n     ifStatement : IF condiciones NEWLINE codigo END_LOWER\n                     | IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER\n     condiciones : condicion\n                    | condiciones conectores condiciones\n     conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED\n                   | EQUAL\n     condicion : num operComp num\n                  | var operComp num\n                  | num operComp var\n     operComp : GREATER\n                 | LESS\n                 | GREATER_EQUAL\n                 | LESS_EQUAL\n                 | EQUAL\n                 | NOT_EQUAL\n                 | COMPARE\n     else_statement : ELSE NEWLINE codigo\n     to_string : LOCAL_VAR DOT TO_S\n     concatenar_string : STRING PLUS STRING\n                          | STRING PLUS LOCAL_VAR\n                          | LOCAL_VAR PLUS STRING\n                          | LOCAL_VAR PLUS LOCAL_VAR\n     declaracion_concatenar_string : LOCAL_VAR ASSIGN concatenar_string\n     hash_var : LOCAL_VAR ASSIGN LBRACE hash_values RBRACE\n                 | LOCAL_VAR ASSIGN LBRACE RBRACE\n     hash_values : STRING HASH_ROCKET value\n                    | STRING HASH_ROCKET value COMMA hash_values\n     hash_access : var LBRACE value RBRACE\n     hash_operations : hash_access ASSIGN value\n     variable_declaration : LOCAL_VAR ASSIGN value\n     store_conditional_result : LOCAL_VAR ASSIGN condiciones\n     declare_data_structures : var_arreglo\n                                | hash_var\n     while_statement : WHILE condiciones codigo END_LOWER\n     condition_with_connectors : condiciones conectores condiciones\n     method_call : LOCAL_VAR LEFTPAR values RIGHTPAR\n                    | LOCAL_VAR LEFTPAR RIGHTPAR\n     print_statement : PUT LEFTPAR values RIGHTPAR\n     boolean_expression : expression GREATER expression\n                           | expression LESS expression\n                           | expression GREATER_EQUAL expression\n                           | expression LESS_EQUAL expression\n                           | expression EQUAL expression\n                           | expression NOT_EQUAL expression\n                           | boolean_value  boolean_value : TRUE\n                      | FALSE  expression : INTEGER\n                   | FLOAT\n                   | variable\n                   | STRING  variable : LOCAL_VAR\n                 | INSTANCE_VAR\n                 | CLASS_VAR\n                 | GLOBAL_VAR\n                 | CONSTANT  declaraciones : variable_declaration\n                      | store_conditional_result\n                      | declare_data_structures\n                      | var_arreglo\n                      | hash_var\n                      | LOCAL_VAR ASSIGN arithmetic_production\n                      | declaracion_concatenar_string\n                      | proc_assignment\n     expresion : puts\n                 | gets\n                 | print_statement\n     comparador : value EQUAL value\n                   | value COMPARE value\n    set_expression : SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR\n                      | SET LEFT_COR values RIGHT_CORset_operations : set_expression\n                      | set_operations set_binary_operators set_expressiondeclare_data_structures : LOCAL_VAR ASSIGN set_expressionset_binary_operators : PLUS\n                            | MINUS\n                            | AMPERSAND\n                            | PIPE\n                            | CARETunless_expression : UNLESS boolean_expression THEN expresion END\n                         | UNLESS boolean_expression THEN expresion ELSE expresion ENDarithmetic_production : num\n                             | LOCAL_VAR\n                             | num arithmetic_operators arithmetic_production\n                             | LOCAL_VAR arithmetic_operators arithmetic_productionarithmetic_operators : PLUS\n                            | MINUS\n                            | MULTIPLY\n                            | DIVIDE\n                            | MODULO\n                            | EXPONENTblock_expression : LBRACE expresion RBRACE\n                         | DO expresion END\n                         | DO expresion END_LOWER\n                         | LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE\n                         | DO PIPE LOCAL_VAR PIPE expresion END\n                         | DO PIPE LOCAL_VAR PIPE expresion END_LOWERblock_assignment : method_call block_expressionproc_expression : PROC DOT NEW block_expressionproc_assignment : LOCAL_VAR ASSIGN proc_expressionproc_call : LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR LEFT_COR values RIGHT_CORexpresion : condition_with_connectors'
    
_lr_action_items = {'PUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,167,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,228,231,232,233,235,236,237,238,239,240,241,243,244,245,249,250,251,257,259,264,266,267,268,271,272,273,276,277,278,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,117,117,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,14,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,14,14,117,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,14,-59,-65,-67,-66,-92,-49,-51,117,117,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,117,-159,-157,-53,-153,-154,-155,-57,14,-139,-128,14,-54,]),'GETS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,167,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,228,231,232,233,235,236,237,238,239,240,241,243,244,245,249,250,251,257,259,264,266,267,268,271,272,273,276,277,278,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,15,15,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,15,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,15,15,15,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,15,-59,-65,-67,-66,-92,-49,-51,15,15,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,15,-159,-157,-53,-153,-154,-155,-57,15,-139,-128,15,-54,]),'LOCAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,112,117,120,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,193,194,195,196,197,198,199,201,203,204,205,207,209,210,211,212,213,214,215,224,225,226,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[25,25,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,67,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,67,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,67,67,103,-111,-112,-113,-114,-23,-26,-27,-2,-156,67,67,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,67,67,130,-48,67,67,67,67,-58,25,67,67,181,67,186,67,-40,-131,-95,67,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,25,67,-60,-61,-62,-63,-64,67,-68,-69,-70,-71,-72,-73,-74,25,67,103,103,103,103,103,103,-50,-52,-150,67,67,-151,-152,-31,-94,67,-161,236,239,-145,-146,-147,-148,-149,-83,236,-144,245,-55,-129,25,-59,-65,-67,-66,-92,-49,67,-51,67,67,-38,-39,-160,-141,-143,-140,-80,-79,-82,67,-142,-77,-78,67,-56,-138,67,-159,-157,-53,67,-153,-154,-155,-57,25,-139,-128,25,-54,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,84,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,193,194,195,196,197,198,199,201,203,204,207,209,210,211,212,213,214,215,224,225,226,227,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[33,33,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,66,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,66,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,66,66,98,-111,-112,-113,-114,-23,-26,-27,-2,-156,66,66,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,66,66,66,-48,144,66,66,66,66,-58,33,66,66,66,66,-40,-131,-95,66,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,33,66,-60,-61,-62,-63,-64,66,-68,-69,-70,-71,-72,-73,-74,66,33,66,98,98,98,98,98,98,-50,-52,-150,66,66,-151,-152,-31,-94,66,-161,66,-144,-145,-146,-147,-148,-149,-83,66,-144,-55,-129,33,-59,-65,-67,-66,-92,-49,66,-51,253,66,66,-38,-39,-160,-141,-143,-140,-80,-79,-82,66,-142,-77,-78,66,-56,-138,66,-159,-157,-53,66,-153,-154,-155,-57,33,-139,-128,33,-54,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,193,194,195,196,197,198,199,201,203,204,207,209,210,211,212,213,214,215,224,225,226,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[34,34,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,65,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,65,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,65,65,99,-111,-112,-113,-114,-23,-26,-27,-2,-156,65,65,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,65,65,65,-48,65,65,65,65,-58,34,65,65,65,65,-40,-131,-95,65,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,34,65,-60,-61,-62,-63,-64,65,-68,-69,-70,-71,-72,-73,-74,65,34,65,99,99,99,99,99,99,-50,-52,-150,65,65,-151,-152,-31,-94,65,-161,65,-144,-145,-146,-147,-148,-149,-83,65,-144,-55,-129,34,-59,-65,-67,-66,-92,-49,65,-51,65,65,-38,-39,-160,-141,-143,-140,-80,-79,-82,65,-142,-77,-78,65,-56,-138,65,-159,-157,-53,65,-153,-154,-155,-57,34,-139,-128,34,-54,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,132,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,168,169,170,171,172,173,176,179,180,182,184,185,187,189,190,192,194,201,205,207,209,210,211,212,213,214,215,224,225,226,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,257,259,264,265,266,267,268,269,271,272,273,276,277,278,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,64,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,64,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,100,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,64,64,141,-48,64,64,64,64,-58,36,64,64,64,64,-40,-131,-95,64,-76,-32,-120,202,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,36,36,100,100,100,100,100,100,-50,-52,-150,64,-151,-152,-31,-94,64,-161,240,-83,244,-55,-129,36,-59,-65,-67,-66,-92,-49,64,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,64,-142,-77,-78,64,-56,-138,-159,-157,-53,64,-153,-154,-155,202,-57,36,-139,-128,36,-54,]),'SET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[43,43,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,43,-133,-134,-135,-136,-137,43,-48,-58,43,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,43,43,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,43,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,43,-139,-128,43,-54,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[44,44,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,44,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,44,44,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,44,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,44,-139,-128,44,-54,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[45,45,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,45,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,45,45,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,45,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,45,-139,-128,45,-54,]),'UNLESS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[46,46,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,46,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,46,46,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,46,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,46,-139,-128,46,-54,]),'INSTANCE_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,201,207,209,210,211,212,213,214,215,224,225,226,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[47,47,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,68,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,68,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,68,68,104,-111,-112,-113,-114,-23,-26,-27,-2,-156,68,68,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,68,68,68,-48,68,68,68,68,-58,47,68,68,68,68,-40,-131,-95,68,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,47,68,-60,-61,-62,-63,-64,68,-68,-69,-70,-71,-72,-73,-74,47,68,104,104,104,104,104,104,-50,-52,-150,68,68,-151,-152,-31,-94,68,-161,-83,-55,-129,47,-59,-65,-67,-66,-92,-49,68,-51,68,68,-38,-39,-160,-141,-143,-140,-80,-79,-82,68,-142,-77,-78,68,-56,-138,68,-159,-157,-53,68,-153,-154,-155,-57,47,-139,-128,47,-54,]),'CLASS_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,201,207,209,210,211,212,213,214,215,224,225,226,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[48,48,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,69,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,69,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,69,69,105,-111,-112,-113,-114,-23,-26,-27,-2,-156,69,69,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,69,69,69,-48,69,69,69,69,-58,48,69,69,69,69,-40,-131,-95,69,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,48,69,-60,-61,-62,-63,-64,69,-68,-69,-70,-71,-72,-73,-74,48,69,105,105,105,105,105,105,-50,-52,-150,69,69,-151,-152,-31,-94,69,-161,-83,-55,-129,48,-59,-65,-67,-66,-92,-49,69,-51,69,69,-38,-39,-160,-141,-143,-140,-80,-79,-82,69,-142,-77,-78,69,-56,-138,69,-159,-157,-53,69,-153,-154,-155,-57,48,-139,-128,48,-54,]),'GLOBAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,179,180,182,183,184,185,187,189,190,192,201,207,209,210,211,212,213,214,215,224,225,226,228,231,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,257,259,264,265,266,267,268,271,272,273,276,277,278,],[49,49,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,70,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,70,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,70,70,106,-111,-112,-113,-114,-23,-26,-27,-2,-156,70,70,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,70,70,70,-48,70,70,70,70,-58,49,70,70,70,70,-40,-131,-95,70,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,49,70,-60,-61,-62,-63,-64,70,-68,-69,-70,-71,-72,-73,-74,49,70,106,106,106,106,106,106,-50,-52,-150,70,70,-151,-152,-31,-94,70,-161,-83,-55,-129,49,-59,-65,-67,-66,-92,-49,70,-51,70,70,-38,-39,-160,-141,-143,-140,-80,-79,-82,70,-142,-77,-78,70,-56,-138,70,-159,-157,-53,70,-153,-154,-155,-57,49,-139,-128,49,-54,]),'CONSTANT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,46,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,168,169,170,171,172,173,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[50,50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,50,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,50,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,50,50,50,50,50,50,50,50,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,50,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,50,-139,-128,50,-54,]),'NIL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,182,184,185,187,189,190,192,201,207,209,210,211,212,213,214,215,224,225,226,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,257,259,264,265,266,267,268,271,272,273,276,277,278,],[53,53,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,53,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,53,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,53,53,53,-48,53,53,53,53,-58,53,53,53,53,53,-40,-131,-95,53,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,53,53,-50,-52,-150,53,-151,-152,-31,-94,53,-161,-83,-55,-129,53,-59,-65,-67,-66,-92,-49,53,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,53,-142,-77,-78,53,-56,-138,-159,-157,-53,53,-153,-154,-155,-57,53,-139,-128,53,-54,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,78,80,81,83,85,86,87,89,91,94,107,108,117,121,122,123,125,127,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,182,184,185,187,189,190,192,201,207,209,210,211,212,213,214,215,224,225,226,232,233,235,236,237,238,239,240,241,242,243,244,245,247,249,250,257,259,264,265,266,267,268,271,272,273,276,277,278,],[54,54,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,54,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,54,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,54,54,54,-48,54,54,54,54,-58,54,54,54,54,54,-40,-131,-95,54,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,54,54,-50,-52,-150,54,-151,-152,-31,-94,54,-161,-83,-55,-129,54,-59,-65,-67,-66,-92,-49,54,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,54,-142,-77,-78,54,-56,-138,-159,-157,-53,54,-153,-154,-155,-57,54,-139,-128,54,-54,]),'LEFT_COR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,47,48,49,50,51,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,81,83,91,94,109,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,208,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,80,-115,-116,-117,84,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,89,-111,-112,-113,-114,-23,-26,-27,108,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,26,-48,-58,26,26,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,26,26,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,247,-129,26,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,26,-139,-128,26,-54,]),'PERCENTW':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[55,55,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,55,-48,-58,55,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,55,55,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,55,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,55,-139,-128,55,-54,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,81,83,91,94,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,150,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,272,273,276,277,278,],[56,56,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,56,-48,-58,56,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,56,56,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,56,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,56,-139,-128,56,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,176,179,180,184,185,187,189,192,201,207,209,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,264,266,267,268,271,273,276,278,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,-53,-153,-154,-155,-57,-139,-128,-54,]),'END_LOWER':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,91,113,114,115,116,119,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,166,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,230,232,233,235,236,237,238,239,240,241,243,244,245,249,250,255,256,257,259,261,264,266,267,268,271,273,276,277,278,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,-58,-123,-124,-125,-162,185,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,215,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,249,-59,-65,-67,-66,-92,-49,-51,-93,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-96,268,-159,-157,271,-53,-153,-154,-155,-57,-139,-128,-75,-54,]),'NEWLINE':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,47,48,49,50,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,83,90,91,122,123,125,128,130,131,133,134,135,136,137,138,139,140,141,143,145,146,147,176,179,180,184,185,187,189,192,201,207,209,210,211,212,213,214,215,224,226,232,233,235,236,237,238,239,240,241,243,244,245,249,250,257,259,262,264,266,267,268,271,273,276,278,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-110,-115,-116,-117,-90,-121,-122,-106,-107,-108,-109,-42,-43,-44,-45,-111,-112,-113,-114,-23,-26,-27,-2,-156,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-48,150,-58,-40,-131,-95,-76,-32,-120,-88,-89,-132,-46,-81,-158,-23,-24,-25,-47,-126,-127,-87,-50,-52,-150,-151,-152,-31,-94,-161,-83,-55,-129,248,-59,-65,-67,-66,-92,-49,-51,-38,-39,-160,-141,-143,-140,-80,-79,-82,-142,-77,-78,-56,-138,-159,-157,272,-53,-153,-154,-155,-57,-139,-128,-54,]),'LBRACE':([7,25,47,48,49,52,81,125,189,246,],[59,-32,-33,-34,-35,107,132,-95,-94,59,]),'DO':([7,125,189,246,],[60,-95,-94,60,]),'DOT':([15,25,43,56,122,142,],[71,79,88,110,188,206,]),'PLUS':([20,21,65,66,123,130,139,141,209,236,238,276,],[-130,73,-36,-37,-131,194,204,205,-129,204,204,-128,]),'MINUS':([20,21,65,66,123,130,139,209,236,238,276,],[-130,74,-36,-37,-131,195,195,-129,195,195,-128,]),'AMPERSAND':([20,21,123,209,276,],[-130,75,-131,-129,-128,]),'PIPE':([20,21,59,60,123,181,186,209,276,],[-130,76,112,120,-131,228,231,-129,-128,]),'CARET':([20,21,123,209,276,],[-130,77,-131,-129,-128,]),'LEFTPAR':([25,56,79,117,126,148,179,],[78,109,127,182,190,208,227,]),'ASSIGN':([25,42,223,],[81,87,-86,]),'EQUAL':([25,33,34,35,36,37,47,48,49,50,51,52,53,54,65,66,67,68,69,70,90,91,92,93,94,96,98,99,100,103,104,105,106,118,130,134,139,140,211,212,213,214,230,],[-32,-37,-36,-108,-25,85,-33,-34,-35,-114,-23,-24,-26,-27,-36,-37,-32,-33,-34,-35,156,-58,162,162,156,172,-106,-107,-109,-110,-111,-112,-113,156,-32,156,162,162,156,-65,-67,-66,156,]),'COMPARE':([25,33,34,36,37,47,48,49,51,52,53,54,65,66,67,68,69,70,92,93,130,139,140,],[-32,-37,-36,-25,86,-33,-34,-35,-23,-24,-26,-27,-36,-37,-32,-33,-34,-35,164,164,-32,164,164,]),'RIGHT_COR':([26,51,53,54,62,63,64,65,66,67,68,69,70,82,108,129,144,149,175,177,187,252,260,],[83,-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,143,176,192,207,209,224,-29,-31,-28,270,]),'GREATER':([35,50,65,66,67,68,69,70,92,93,96,98,99,100,103,104,105,106,130,139,140,],[-108,-114,-36,-37,-32,-33,-34,-35,158,158,168,-106,-107,-109,-110,-111,-112,-113,-32,158,158,]),'LESS':([35,50,65,66,67,68,69,70,92,93,96,98,99,100,103,104,105,106,130,139,140,],[-108,-114,-36,-37,-32,-33,-34,-35,159,159,169,-106,-107,-109,-110,-111,-112,-113,-32,159,159,]),'GREATER_EQUAL':([35,50,65,66,67,68,69,70,92,93,96,98,99,100,103,104,105,106,130,139,140,],[-108,-114,-36,-37,-32,-33,-34,-35,160,160,170,-106,-107,-109,-110,-111,-112,-113,-32,160,160,]),'LESS_EQUAL':([35,50,65,66,67,68,69,70,92,93,96,98,99,100,103,104,105,106,130,139,140,],[-108,-114,-36,-37,-32,-33,-34,-35,161,161,171,-106,-107,-109,-110,-111,-112,-113,-32,161,161,]),'NOT_EQUAL':([35,50,65,66,67,68,69,70,92,93,96,98,99,100,103,104,105,106,130,139,140,],[-108,-114,-36,-37,-32,-33,-34,-35,163,163,173,-106,-107,-109,-110,-111,-112,-113,-32,163,163,]),'THEN':([35,50,95,97,98,99,100,101,102,103,104,105,106,217,218,219,220,221,222,],[-108,-114,167,-103,-106,-107,-109,-104,-105,-110,-111,-112,-113,-97,-98,-99,-100,-101,-102,]),'TRUE':([46,],[101,]),'FALSE':([46,],[102,]),'COMMA':([51,53,54,62,63,64,65,66,67,68,69,70,253,258,],[-23,-26,-27,121,-24,-25,-36,-37,-32,-33,-34,-35,265,269,]),'RIGHTPAR':([51,53,54,62,63,64,65,66,67,68,69,70,78,83,124,143,178,187,191,229,234,253,270,274,],[-23,-26,-27,-30,-24,-25,-36,-37,-32,-33,-34,-35,125,-48,189,-47,226,-31,235,255,257,264,276,278,]),'RBRACE':([51,53,54,61,62,63,64,65,66,67,68,69,70,91,111,113,114,115,116,122,132,174,187,200,211,212,213,214,230,232,233,254,255,258,275,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,180,-123,-124,-125,-162,-40,201,223,-31,241,-59,-65,-67,-66,-93,-38,-39,266,-96,-84,-85,]),'SPACE':([51,53,54,63,64,65,66,67,68,69,70,177,],[-23,-26,-27,-24,-25,-36,-37,-32,-33,-34,-35,225,]),'END':([51,53,54,61,62,63,64,65,66,67,68,69,70,91,113,114,115,116,119,122,187,211,212,213,214,216,230,232,233,255,256,263,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,-123,-124,-125,-162,184,-40,-31,-59,-65,-67,-66,250,-93,-38,-39,-96,267,273,]),'ELSE':([51,53,54,61,62,63,64,65,66,67,68,69,70,91,113,114,115,116,122,187,211,212,213,214,216,230,232,233,248,255,],[-23,-26,-27,-41,-30,-24,-25,-36,-37,-32,-33,-34,-35,-58,-123,-124,-125,-162,-40,-31,-59,-65,-67,-66,251,-93,-38,-39,262,-96,]),'MULTIPLY':([65,66,130,139,236,238,],[-36,-37,196,196,196,196,]),'DIVIDE':([65,66,130,139,236,238,],[-36,-37,197,197,197,197,]),'MODULO':([65,66,130,139,236,238,],[-36,-37,198,198,198,198,]),'EXPONENT':([65,66,130,139,236,238,],[-36,-37,199,199,199,199,]),'AND':([65,66,67,68,69,70,90,91,94,118,134,211,212,213,214,230,],[-36,-37,-32,-33,-34,-35,152,-58,152,152,152,152,-65,-67,-66,152,]),'OR':([65,66,67,68,69,70,90,91,94,118,134,211,212,213,214,230,],[-36,-37,-32,-33,-34,-35,153,-58,153,153,153,153,-65,-67,-66,153,]),'AND_RESERVED':([65,66,67,68,69,70,90,91,94,118,134,211,212,213,214,230,],[-36,-37,-32,-33,-34,-35,154,-58,154,154,154,154,-65,-67,-66,154,]),'OR_RESERVED':([65,66,67,68,69,70,90,91,94,118,134,211,212,213,214,230,],[-36,-37,-32,-33,-34,-35,155,-58,155,155,155,155,-65,-67,-66,155,]),'CHOMP':([71,],[122,]),'CALL':([79,],[126,]),'TO_S':([79,],[128,]),'PROC':([81,],[142,]),'NEW':([88,110,206,],[148,179,246,]),'TO_F':([188,],[232,]),'TO_I':([188,],[233,]),'HASH_ROCKET':([202,],[242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,94,150,272,],[1,166,210,277,]),'sentencia':([0,1,94,150,166,210,272,277,],[2,57,2,2,57,57,2,57,]),'puts':([0,1,59,60,94,150,166,167,210,228,231,251,272,277,],[3,3,113,113,3,3,3,113,3,113,113,113,3,3,]),'gets':([0,1,59,60,94,150,166,167,210,228,231,251,272,277,],[4,4,114,114,4,4,4,114,4,114,114,114,4,4,]),'estructurasDatos':([0,1,94,150,166,210,272,277,],[5,5,5,5,5,5,5,5,]),'estructurasControl':([0,1,94,150,166,210,272,277,],[6,6,6,6,6,6,6,6,]),'method_call':([0,1,94,150,166,210,272,277,],[7,7,7,7,7,7,7,7,]),'block_assignment':([0,1,94,150,166,210,272,277,],[8,8,8,8,8,8,8,8,]),'proc_call':([0,1,94,150,166,210,272,277,],[9,9,9,9,9,9,9,9,]),'declaraciones':([0,1,94,150,166,210,272,277,],[10,10,10,10,10,10,10,10,]),'expression':([0,1,46,94,150,166,168,169,170,171,172,173,210,272,277,],[11,11,96,11,11,11,217,218,219,220,221,222,11,11,11,]),'to_string':([0,1,94,150,166,210,272,277,],[12,12,12,12,12,12,12,12,]),'comparador':([0,1,94,150,166,210,272,277,],[13,13,13,13,13,13,13,13,]),'array':([0,1,81,94,150,166,210,272,277,],[16,16,136,16,16,16,16,16,16,]),'acceder_arreglo':([0,1,94,150,166,210,272,277,],[17,17,17,17,17,17,17,17,]),'hash_operations':([0,1,94,150,166,210,272,277,],[18,18,18,18,18,18,18,18,]),'hash_var':([0,1,94,150,166,210,272,277,],[19,19,19,19,19,19,19,19,]),'set_expression':([0,1,72,81,94,150,166,210,272,277,],[20,20,123,135,20,20,20,20,20,20,]),'set_operations':([0,1,94,150,166,210,272,277,],[21,21,21,21,21,21,21,21,]),'ifStatement':([0,1,94,150,166,210,272,277,],[22,22,22,22,22,22,22,22,]),'while_statement':([0,1,94,150,166,210,272,277,],[23,23,23,23,23,23,23,23,]),'unless_expression':([0,1,94,150,166,210,272,277,],[24,24,24,24,24,24,24,24,]),'variable_declaration':([0,1,94,150,166,210,272,277,],[27,27,27,27,27,27,27,27,]),'store_conditional_result':([0,1,94,150,166,210,272,277,],[28,28,28,28,28,28,28,28,]),'declare_data_structures':([0,1,94,150,166,210,272,277,],[29,29,29,29,29,29,29,29,]),'var_arreglo':([0,1,94,150,166,210,272,277,],[30,30,30,30,30,30,30,30,]),'declaracion_concatenar_string':([0,1,94,150,166,210,272,277,],[31,31,31,31,31,31,31,31,]),'proc_assignment':([0,1,94,150,166,210,272,277,],[32,32,32,32,32,32,32,32,]),'variable':([0,1,46,94,150,166,168,169,170,171,172,173,210,272,277,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'value':([0,1,14,26,78,80,81,85,86,87,89,94,107,108,117,121,127,150,166,182,190,210,225,242,247,265,272,277,],[37,37,62,62,62,62,133,145,146,147,62,37,174,177,62,62,62,37,37,62,62,37,177,258,62,62,37,37,]),'array_explicito':([0,1,81,94,109,150,166,210,272,277,],[38,38,38,38,178,38,38,38,38,38,]),'array_implicito':([0,1,81,94,150,166,210,272,277,],[39,39,39,39,39,39,39,39,39,]),'array_creation':([0,1,81,94,150,166,210,272,277,],[40,40,40,40,40,40,40,40,40,]),'newArray':([0,1,81,94,150,166,210,272,277,],[41,41,41,41,41,41,41,41,41,]),'hash_access':([0,1,94,150,166,210,272,277,],[42,42,42,42,42,42,42,42,]),'num':([0,1,14,26,44,45,59,60,78,80,81,85,86,87,89,94,107,108,117,121,127,150,151,157,165,166,167,182,183,190,193,203,210,225,228,231,242,247,251,265,272,277,],[51,51,51,51,92,92,92,92,51,51,139,51,51,51,51,51,51,51,51,51,51,51,92,212,214,51,92,51,92,51,238,238,51,51,92,92,51,51,92,51,51,51,]),'var':([0,1,14,26,44,45,59,60,78,80,81,85,86,87,89,94,107,108,117,121,127,150,151,157,166,167,182,183,190,210,225,228,231,242,247,251,265,272,277,],[52,52,63,63,93,93,93,93,63,63,140,63,63,63,63,52,63,63,63,63,63,52,93,213,52,93,63,93,63,52,63,93,93,63,63,93,63,52,52,]),'block_expression':([7,246,],[58,259,]),'values':([14,26,78,80,89,117,121,127,182,190,247,265,],[61,82,124,129,149,61,187,191,229,234,260,274,]),'set_binary_operators':([21,],[72,]),'condiciones':([44,45,59,60,81,151,167,183,228,231,251,],[90,94,118,118,134,211,118,230,118,118,118,]),'condicion':([44,45,59,60,81,151,167,183,228,231,251,],[91,91,91,91,91,91,91,91,91,91,91,]),'boolean_expression':([46,],[95,]),'boolean_value':([46,],[97,]),'expresion':([59,60,167,228,231,251,],[111,119,216,254,256,263,]),'print_statement':([59,60,167,228,231,251,],[115,115,115,115,115,115,]),'condition_with_connectors':([59,60,167,228,231,251,],[116,116,116,116,116,116,]),'arithmetic_production':([81,193,203,],[131,237,243,]),'concatenar_string':([81,],[137,]),'proc_expression':([81,],[138,]),'conectores':([90,94,118,134,211,230,],[151,151,183,151,151,151,]),'operComp':([92,93,139,140,],[157,165,157,165,]),'values_space':([108,225,],[175,252,]),'arithmetic_operators':([130,139,236,238,],[193,203,193,203,]),'hash_values':([132,269,],[200,275,]),'else_statement':([248,],[261,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> sentencia','codigo',1,'p_codigo','syntax_analyzer.py',16),
  ('codigo -> codigo sentencia','codigo',2,'p_codigo','syntax_analyzer.py',17),
  ('sentencia -> puts','sentencia',1,'p_sentencia','syntax_analyzer.py',20),
  ('sentencia -> gets','sentencia',1,'p_sentencia','syntax_analyzer.py',21),
  ('sentencia -> estructurasDatos','sentencia',1,'p_sentencia','syntax_analyzer.py',22),
  ('sentencia -> estructurasControl','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> method_call','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> block_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> proc_call','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> declaraciones','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> expression','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> to_string','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> comparador','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',33),
  ('estructurasDatos -> acceder_arreglo','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',34),
  ('estructurasDatos -> hash_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',35),
  ('estructurasDatos -> hash_var','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',36),
  ('estructurasDatos -> set_expression','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',37),
  ('estructurasDatos -> set_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',38),
  ('estructurasControl -> ifStatement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',42),
  ('estructurasControl -> while_statement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',43),
  ('estructurasControl -> unless_expression','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',44),
  ('value -> num','value',1,'p_value','syntax_analyzer.py',49),
  ('value -> var','value',1,'p_value','syntax_analyzer.py',50),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',51),
  ('value -> NIL','value',1,'p_value','syntax_analyzer.py',52),
  ('value -> SYMBOL','value',1,'p_value','syntax_analyzer.py',53),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','syntax_analyzer.py',58),
  ('values_space -> value','values_space',1,'p_values_space','syntax_analyzer.py',59),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',63),
  ('values -> value COMMA values','values',3,'p_values','syntax_analyzer.py',64),
  ('var -> LOCAL_VAR','var',1,'p_var','syntax_analyzer.py',68),
  ('var -> INSTANCE_VAR','var',1,'p_var','syntax_analyzer.py',69),
  ('var -> CLASS_VAR','var',1,'p_var','syntax_analyzer.py',70),
  ('var -> GLOBAL_VAR','var',1,'p_var','syntax_analyzer.py',71),
  ('num -> FLOAT','num',1,'p_num','syntax_analyzer.py',76),
  ('num -> INTEGER','num',1,'p_num','syntax_analyzer.py',77),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','syntax_analyzer.py',82),
  ('gets -> GETS DOT CHOMP DOT TO_I','gets',5,'p_gets','syntax_analyzer.py',83),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','syntax_analyzer.py',84),
  ('puts -> PUT values','puts',2,'p_puts','syntax_analyzer.py',88),
  ('array -> array_explicito','array',1,'p_array','syntax_analyzer.py',94),
  ('array -> array_implicito','array',1,'p_array','syntax_analyzer.py',95),
  ('array -> array_creation','array',1,'p_array','syntax_analyzer.py',96),
  ('array -> newArray','array',1,'p_array','syntax_analyzer.py',97),
  ('var_arreglo -> LOCAL_VAR ASSIGN array','var_arreglo',3,'p_var_arreglo','syntax_analyzer.py',102),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','syntax_analyzer.py',107),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','syntax_analyzer.py',108),
  ('array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','syntax_analyzer.py',113),
  ('array_implicito -> PERCENTW LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','syntax_analyzer.py',114),
  ('array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR','array_creation',4,'p_array_creation','syntax_analyzer.py',118),
  ('newArray -> ARRAY DOT NEW','newArray',3,'p_newArray','syntax_analyzer.py',122),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR','newArray',6,'p_newArray','syntax_analyzer.py',123),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR','newArray',8,'p_newArray','syntax_analyzer.py',124),
  ('acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','syntax_analyzer.py',128),
  ('ifStatement -> IF condiciones NEWLINE codigo END_LOWER','ifStatement',5,'p_ifStatement','syntax_analyzer.py',133),
  ('ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER','ifStatement',7,'p_ifStatement','syntax_analyzer.py',134),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','syntax_analyzer.py',138),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','syntax_analyzer.py',139),
  ('conectores -> AND','conectores',1,'p_conectores','syntax_analyzer.py',144),
  ('conectores -> OR','conectores',1,'p_conectores','syntax_analyzer.py',145),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',146),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',147),
  ('conectores -> EQUAL','conectores',1,'p_conectores','syntax_analyzer.py',148),
  ('condicion -> num operComp num','condicion',3,'p_condicion','syntax_analyzer.py',153),
  ('condicion -> var operComp num','condicion',3,'p_condicion','syntax_analyzer.py',154),
  ('condicion -> num operComp var','condicion',3,'p_condicion','syntax_analyzer.py',155),
  ('operComp -> GREATER','operComp',1,'p_operComp','syntax_analyzer.py',160),
  ('operComp -> LESS','operComp',1,'p_operComp','syntax_analyzer.py',161),
  ('operComp -> GREATER_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',162),
  ('operComp -> LESS_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',163),
  ('operComp -> EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',164),
  ('operComp -> NOT_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',165),
  ('operComp -> COMPARE','operComp',1,'p_operComp','syntax_analyzer.py',166),
  ('else_statement -> ELSE NEWLINE codigo','else_statement',3,'p_else_statement','syntax_analyzer.py',170),
  ('to_string -> LOCAL_VAR DOT TO_S','to_string',3,'p_to_string','syntax_analyzer.py',174),
  ('concatenar_string -> STRING PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',187),
  ('concatenar_string -> STRING PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',188),
  ('concatenar_string -> LOCAL_VAR PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',189),
  ('concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',190),
  ('declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string','declaracion_concatenar_string',3,'p_declaracion_concatenar_string','syntax_analyzer.py',204),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE','hash_var',5,'p_hash_var','syntax_analyzer.py',224),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE','hash_var',4,'p_hash_var','syntax_analyzer.py',225),
  ('hash_values -> STRING HASH_ROCKET value','hash_values',3,'p_hash_values','syntax_analyzer.py',237),
  ('hash_values -> STRING HASH_ROCKET value COMMA hash_values','hash_values',5,'p_hash_values','syntax_analyzer.py',238),
  ('hash_access -> var LBRACE value RBRACE','hash_access',4,'p_hash_access','syntax_analyzer.py',259),
  ('hash_operations -> hash_access ASSIGN value','hash_operations',3,'p_hash_operations','syntax_analyzer.py',263),
  ('variable_declaration -> LOCAL_VAR ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',268),
  ('store_conditional_result -> LOCAL_VAR ASSIGN condiciones','store_conditional_result',3,'p_store_conditional_result','syntax_analyzer.py',276),
  ('declare_data_structures -> var_arreglo','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',281),
  ('declare_data_structures -> hash_var','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',282),
  ('while_statement -> WHILE condiciones codigo END_LOWER','while_statement',4,'p_while_statement','syntax_analyzer.py',287),
  ('condition_with_connectors -> condiciones conectores condiciones','condition_with_connectors',3,'p_condition_with_connectors','syntax_analyzer.py',292),
  ('method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR','method_call',4,'p_method_call','syntax_analyzer.py',297),
  ('method_call -> LOCAL_VAR LEFTPAR RIGHTPAR','method_call',3,'p_method_call','syntax_analyzer.py',298),
  ('print_statement -> PUT LEFTPAR values RIGHTPAR','print_statement',4,'p_print_statement','syntax_analyzer.py',302),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',307),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',308),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',309),
  ('boolean_expression -> expression LESS_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',310),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',311),
  ('boolean_expression -> expression NOT_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',312),
  ('boolean_expression -> boolean_value','boolean_expression',1,'p_boolean_expression','syntax_analyzer.py',313),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',317),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',318),
  ('expression -> INTEGER','expression',1,'p_expression','syntax_analyzer.py',322),
  ('expression -> FLOAT','expression',1,'p_expression','syntax_analyzer.py',323),
  ('expression -> variable','expression',1,'p_expression','syntax_analyzer.py',324),
  ('expression -> STRING','expression',1,'p_expression','syntax_analyzer.py',325),
  ('variable -> LOCAL_VAR','variable',1,'p_variable','syntax_analyzer.py',328),
  ('variable -> INSTANCE_VAR','variable',1,'p_variable','syntax_analyzer.py',329),
  ('variable -> CLASS_VAR','variable',1,'p_variable','syntax_analyzer.py',330),
  ('variable -> GLOBAL_VAR','variable',1,'p_variable','syntax_analyzer.py',331),
  ('variable -> CONSTANT','variable',1,'p_variable','syntax_analyzer.py',332),
  ('declaraciones -> variable_declaration','declaraciones',1,'p_declaraciones','syntax_analyzer.py',336),
  ('declaraciones -> store_conditional_result','declaraciones',1,'p_declaraciones','syntax_analyzer.py',337),
  ('declaraciones -> declare_data_structures','declaraciones',1,'p_declaraciones','syntax_analyzer.py',338),
  ('declaraciones -> var_arreglo','declaraciones',1,'p_declaraciones','syntax_analyzer.py',339),
  ('declaraciones -> hash_var','declaraciones',1,'p_declaraciones','syntax_analyzer.py',340),
  ('declaraciones -> LOCAL_VAR ASSIGN arithmetic_production','declaraciones',3,'p_declaraciones','syntax_analyzer.py',341),
  ('declaraciones -> declaracion_concatenar_string','declaraciones',1,'p_declaraciones','syntax_analyzer.py',342),
  ('declaraciones -> proc_assignment','declaraciones',1,'p_declaraciones','syntax_analyzer.py',343),
  ('expresion -> puts','expresion',1,'p_expresion','syntax_analyzer.py',348),
  ('expresion -> gets','expresion',1,'p_expresion','syntax_analyzer.py',349),
  ('expresion -> print_statement','expresion',1,'p_expresion','syntax_analyzer.py',350),
  ('comparador -> value EQUAL value','comparador',3,'p_comparador','syntax_analyzer.py',357),
  ('comparador -> value COMPARE value','comparador',3,'p_comparador','syntax_analyzer.py',358),
  ('set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR','set_expression',8,'p_set_expression','syntax_analyzer.py',399),
  ('set_expression -> SET LEFT_COR values RIGHT_COR','set_expression',4,'p_set_expression','syntax_analyzer.py',400),
  ('set_operations -> set_expression','set_operations',1,'p_set_operations','syntax_analyzer.py',403),
  ('set_operations -> set_operations set_binary_operators set_expression','set_operations',3,'p_set_operations','syntax_analyzer.py',404),
  ('declare_data_structures -> LOCAL_VAR ASSIGN set_expression','declare_data_structures',3,'p_set_declaration','syntax_analyzer.py',407),
  ('set_binary_operators -> PLUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',411),
  ('set_binary_operators -> MINUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',412),
  ('set_binary_operators -> AMPERSAND','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',413),
  ('set_binary_operators -> PIPE','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',414),
  ('set_binary_operators -> CARET','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',415),
  ('unless_expression -> UNLESS boolean_expression THEN expresion END','unless_expression',5,'p_unless_expression','syntax_analyzer.py',418),
  ('unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END','unless_expression',7,'p_unless_expression','syntax_analyzer.py',419),
  ('arithmetic_production -> num','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',422),
  ('arithmetic_production -> LOCAL_VAR','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',423),
  ('arithmetic_production -> num arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',424),
  ('arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',425),
  ('arithmetic_operators -> PLUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',451),
  ('arithmetic_operators -> MINUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',452),
  ('arithmetic_operators -> MULTIPLY','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',453),
  ('arithmetic_operators -> DIVIDE','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',454),
  ('arithmetic_operators -> MODULO','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',455),
  ('arithmetic_operators -> EXPONENT','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',456),
  ('block_expression -> LBRACE expresion RBRACE','block_expression',3,'p_block_expression','syntax_analyzer.py',459),
  ('block_expression -> DO expresion END','block_expression',3,'p_block_expression','syntax_analyzer.py',460),
  ('block_expression -> DO expresion END_LOWER','block_expression',3,'p_block_expression','syntax_analyzer.py',461),
  ('block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE','block_expression',6,'p_block_expression','syntax_analyzer.py',462),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END','block_expression',6,'p_block_expression','syntax_analyzer.py',463),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER','block_expression',6,'p_block_expression','syntax_analyzer.py',464),
  ('block_assignment -> method_call block_expression','block_assignment',2,'p_block_assignment','syntax_analyzer.py',467),
  ('proc_expression -> PROC DOT NEW block_expression','proc_expression',4,'p_proc_expression','syntax_analyzer.py',470),
  ('proc_assignment -> LOCAL_VAR ASSIGN proc_expression','proc_assignment',3,'p_proc_assignment','syntax_analyzer.py',474),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR','proc_call',6,'p_proc_call','syntax_analyzer.py',478),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',479),
  ('proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR','proc_call',4,'p_proc_call','syntax_analyzer.py',480),
  ('expresion -> condition_with_connectors','expresion',1,'p_condition_expr','syntax_analyzer.py',488),
]
