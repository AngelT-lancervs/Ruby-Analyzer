
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BIN_INTEGER BOOLEAN BREAK CALL CARET CASE CASE_EQUAL CHOMP CLASS CLASS_VAR COLON COMMA COMPARE CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END END_LOWER EQUAL EXPONENT EXPONENT_ASSIGN FALSE FLOAT FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET HEX_INTEGER IF IN INSTANCE_VAR INTEGER LBRACE LEFTPAR LEFT_COR LESS LESS_EQUAL LOCAL_VAR MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NMAP NOT NOT_EQUAL OCT_INTEGER OR OR_RESERVED PERCENTW PIPE PLUS PLUS_ASSIGN PROC PUT QUOTATION RANGEEX RANGEIN RBRACE REDO RETURN RIGHTPAR RIGHT_COR SELF SET SPACE STRING SYMBOL TAB THEN TO_F TO_I TO_S TRUE UNLESS UNTIL WHEN WHILEcodigo : sentencia\n              | codigo sentenciasentencia : puts \n                 | gets\n                 | estructurasDatos\n                 | estructurasControl\n                 | method_call\n                 | block_assignment\n                 | proc_call\n                 | declaraciones\n                 | expression\n                 | to_string\n                 | comparador\n                 | range_expression estructurasDatos : array\n                         | acceder_arreglo\n                         | hash_operations\n                         | hash_var\n                         | set_expression\n                         | set_operations\n     estructurasControl : ifStatement\n                           | while_statement\n                           | unless_expression\n     value : num\n             | var\n             | STRING\n             | NIL\n             | SYMBOL\n           values_space : value SPACE values_space\n                     | value\n     values : value\n               | value COMMA values var : LOCAL_VAR\n           | INSTANCE_VAR\n           | CLASS_VAR\n           | GLOBAL_VAR\n            num : FLOAT\n           | INTEGER\n            gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP DOT TO_I\n             | GETS DOT CHOMP\n     puts : PUT values \n\n     array : array_explicito\n              | array_implicito\n              | array_creation\n              | newArray\n     var_arreglo : LOCAL_VAR ASSIGN array\n     array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR\n     array_implicito : PERCENTW LEFT_COR values_space RIGHT_COR\n                        | PERCENTW LEFT_COR RIGHT_COR\n     array_creation : ARRAY LEFTPAR array_explicito RIGHTPAR\n     newArray : ARRAY DOT NEW \n                 | ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR\n                 | ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR\n     acceder_arreglo : var_arreglo LEFT_COR INTEGER RIGHT_COR\n     ifStatement : IF condiciones codigo END_LOWER\n                     | IF condiciones codigo else_statement END_LOWER\n     condiciones : condicion\n                    | condiciones conectores condiciones\n     conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED\n                   | EQUAL\n     condicion : num operComp num\n                  | var operComp num\n                  | num operComp var\n     operComp : GREATER\n                 | LESS\n                 | GREATER_EQUAL\n                 | LESS_EQUAL\n                 | EQUAL\n                 | NOT_EQUAL\n                 | COMPARE\n     else_statement : ELSE codigo\n     to_string : LOCAL_VAR DOT TO_S\n     concatenar_string : STRING PLUS STRING\n                          | STRING PLUS LOCAL_VAR\n                          | LOCAL_VAR PLUS STRING\n                          | LOCAL_VAR PLUS LOCAL_VAR\n     declaracion_concatenar_string : LOCAL_VAR ASSIGN concatenar_string\n     hash_var : LOCAL_VAR ASSIGN LBRACE hash_values RBRACE\n                 | LOCAL_VAR ASSIGN LBRACE RBRACE\n     hash_values : STRING HASH_ROCKET value\n                    | STRING HASH_ROCKET value COMMA hash_values\n     hash_access : var LBRACE value RBRACE\n     hash_operations : hash_access ASSIGN value\n     variable_declaration : LOCAL_VAR ASSIGN value\n                             | LOCAL_VAR PLUS_ASSIGN value\n                             | LOCAL_VAR MULTIPLY_ASSIGN value\n                             | LOCAL_VAR MINUS_ASSIGN value\n                             | LOCAL_VAR DIVIDE_ASSIGN value\n     store_conditional_result : LOCAL_VAR ASSIGN condiciones\n     declare_data_structures : var_arreglo\n                                | hash_var\n     while_statement : WHILE condiciones codigo END_LOWER\n     condition_with_connectors : condiciones conectores condiciones\n     method_call : LOCAL_VAR LEFTPAR values RIGHTPAR\n                    | LOCAL_VAR LEFTPAR RIGHTPAR\n     print_statement : PUT LEFTPAR values RIGHTPAR\n     boolean_expression : expression GREATER expression\n                           | expression LESS expression\n                           | expression GREATER_EQUAL expression\n                           | expression LESS_EQUAL expression\n                           | expression EQUAL expression\n                           | expression NOT_EQUAL expression\n                           | boolean_value  boolean_value : TRUE\n                      | FALSE  expression : INTEGER\n                   | FLOAT\n                   | variable\n                   | STRING  variable : LOCAL_VAR\n                 | INSTANCE_VAR\n                 | CLASS_VAR\n                 | GLOBAL_VAR\n                 | CONSTANT  declaraciones : variable_declaration\n                      | store_conditional_result\n                      | declare_data_structures\n                      | var_arreglo\n                      | hash_var\n                      | LOCAL_VAR ASSIGN arithmetic_production\n                      | declaracion_concatenar_string\n                      | proc_assignment\n     expresion : puts\n                 | gets\n                 | print_statement\n     comparador : value EQUAL value\n                   | value COMPARE value\n    range_expression : value RANGEIN value\n                        | value RANGEEX value\n                        | LEFTPAR value RANGEIN value RIGHTPAR\n                        | LEFTPAR value RANGEEX value RIGHTPARset_expression : SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR\n                      | SET LEFT_COR values RIGHT_CORset_operations : set_expression\n                      | set_operations set_binary_operators set_expressiondeclare_data_structures : LOCAL_VAR ASSIGN set_expressionset_binary_operators : PLUS\n                            | MINUS\n                            | AMPERSAND\n                            | PIPE\n                            | CARETunless_expression : UNLESS boolean_expression THEN expresion END\n                         | UNLESS boolean_expression THEN expresion ELSE expresion ENDarithmetic_production : num\n                             | LOCAL_VAR\n                             | num arithmetic_operators arithmetic_production\n                             | LOCAL_VAR arithmetic_operators arithmetic_productionarithmetic_operators : PLUS\n                            | MINUS\n                            | MULTIPLY\n                            | DIVIDE\n                            | MODULO\n                            | EXPONENTblock_expression : LBRACE expresion RBRACE\n                         | DO expresion END\n                         | DO expresion END_LOWER\n                         | LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE\n                         | DO PIPE LOCAL_VAR PIPE expresion END\n                         | DO PIPE LOCAL_VAR PIPE expresion END_LOWERblock_assignment : method_call block_expressionproc_expression : PROC DOT NEW block_expressionproc_assignment : LOCAL_VAR ASSIGN proc_expressionproc_call : LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR values RIGHTPAR\n                 | LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR\n                 | LOCAL_VAR DOT LEFTPAR RIGHTPARproc_call : LOCAL_VAR LEFT_COR values RIGHT_COR\n                 | LOCAL_VAR LEFT_COR RIGHT_CORexpresion : condition_with_connectors'
    
_lr_action_items = {'PUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,185,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,251,254,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,277,283,285,288,290,291,292,295,298,299,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,126,126,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,15,-59,15,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,15,15,126,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,15,-60,-66,-68,-67,-97,-50,-52,126,126,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,15,-147,126,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'GETS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,185,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,251,254,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,277,283,285,288,290,291,292,295,298,299,],[16,16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,16,16,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,16,-59,16,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,16,16,16,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,16,-60,-66,-68,-67,-97,-50,-52,16,16,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,16,-147,16,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'LOCAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,121,126,129,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,212,213,214,215,216,217,218,220,222,223,224,228,230,231,233,234,235,236,237,238,247,248,249,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,69,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,69,69,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,69,69,112,-116,-117,-118,-119,-24,-27,-28,-2,-165,69,69,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,69,69,140,69,69,69,69,-49,69,69,69,69,69,69,26,-59,26,69,69,199,69,204,69,-41,-140,-100,69,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,69,69,-48,-131,-132,-133,-134,-88,26,69,-61,-62,-63,-64,-65,69,-69,-70,-71,-72,-73,-74,-75,26,69,112,112,112,112,112,112,-51,-53,-159,69,69,-160,-161,-32,-99,69,-171,-172,260,263,-154,-155,-156,-157,-158,-84,260,-153,269,-56,-138,-57,26,-60,-66,-68,-67,-97,-50,69,-52,69,69,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,69,-151,-78,-79,-135,-136,69,-58,26,-147,69,-168,-166,-54,69,-162,-163,-164,-148,-137,-55,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,91,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,212,213,214,215,216,217,218,220,222,223,228,230,231,233,234,235,236,237,238,247,248,249,250,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[35,35,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,68,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,68,68,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,68,68,107,-116,-117,-118,-119,-24,-27,-28,-2,-165,68,68,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,68,68,68,68,68,68,68,-49,160,68,68,68,68,68,68,35,-59,35,68,68,68,68,-41,-140,-100,68,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,68,68,-48,-131,-132,-133,-134,-88,35,68,-61,-62,-63,-64,-65,68,-69,-70,-71,-72,-73,-74,-75,68,35,68,107,107,107,107,107,107,-51,-53,-159,68,68,-160,-161,-32,-99,68,-171,-172,68,-153,-154,-155,-156,-157,-158,-84,68,-153,-56,-138,-57,35,-60,-66,-68,-67,-97,-50,68,-52,279,68,68,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,68,-151,-78,-79,-135,-136,68,-58,35,-147,68,-168,-166,-54,68,-162,-163,-164,-148,-137,-55,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,212,213,214,215,216,217,218,220,222,223,228,230,231,233,234,235,236,237,238,247,248,249,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,67,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,67,67,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,67,67,108,-116,-117,-118,-119,-24,-27,-28,-2,-165,67,67,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,67,67,67,67,67,67,67,-49,67,67,67,67,67,67,36,-59,36,67,67,67,67,-41,-140,-100,67,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,67,67,-48,-131,-132,-133,-134,-88,36,67,-61,-62,-63,-64,-65,67,-69,-70,-71,-72,-73,-74,-75,67,36,67,108,108,108,108,108,108,-51,-53,-159,67,67,-160,-161,-32,-99,67,-171,-172,67,-153,-154,-155,-156,-157,-158,-84,67,-153,-56,-138,-57,36,-60,-66,-68,-67,-97,-50,67,-52,67,67,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,67,-151,-78,-79,-135,-136,67,-58,36,-147,67,-168,-166,-54,67,-162,-163,-164,-148,-137,-55,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,48,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,184,186,187,188,189,190,191,194,197,198,200,202,203,205,207,208,210,211,213,220,224,228,230,231,233,234,235,236,237,238,247,248,249,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,283,285,288,289,290,291,292,293,295,298,299,],[38,38,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,66,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,66,66,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,109,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,66,66,151,66,66,66,66,-49,66,66,66,66,66,66,38,-59,38,66,66,66,66,-41,-140,-100,66,-77,-173,-33,-125,221,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,66,66,-48,-131,-132,-133,-134,-88,38,38,109,109,109,109,109,109,-51,-53,-159,66,-160,-161,-32,-99,66,-171,-172,264,-84,268,-56,-138,-57,38,-60,-66,-68,-67,-97,-50,66,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,66,-151,-78,-79,-135,-136,66,-58,38,-147,-168,-166,-54,66,-162,-163,-164,221,-148,-137,-55,]),'LEFTPAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,58,59,60,63,64,65,66,67,68,69,70,71,72,81,90,99,100,103,126,131,132,134,135,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,166,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[27,27,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,80,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,118,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,136,-49,27,-59,27,200,-41,-140,-100,208,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,229,27,27,-51,250,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,27,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,27,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'SET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,83,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[45,45,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,45,-142,-143,-144,-145,-146,45,-49,45,-59,45,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,45,45,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,45,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,45,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[46,46,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,46,-59,46,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,46,46,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,46,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,46,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[47,47,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,47,-59,47,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,47,47,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,47,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,47,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'UNLESS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[48,48,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,48,-59,48,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,48,48,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,48,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,48,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'INSTANCE_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,220,228,230,231,233,234,235,236,237,238,247,248,249,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[49,49,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,70,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,70,70,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,70,70,113,-116,-117,-118,-119,-24,-27,-28,-2,-165,70,70,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,70,70,70,70,70,70,70,-49,70,70,70,70,70,70,49,-59,49,70,70,70,70,-41,-140,-100,70,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,70,70,-48,-131,-132,-133,-134,-88,49,70,-61,-62,-63,-64,-65,70,-69,-70,-71,-72,-73,-74,-75,49,70,113,113,113,113,113,113,-51,-53,-159,70,70,-160,-161,-32,-99,70,-171,-172,-84,-56,-138,-57,49,-60,-66,-68,-67,-97,-50,70,-52,70,70,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,70,-151,-78,-79,-135,-136,70,-58,49,-147,70,-168,-166,-54,70,-162,-163,-164,-148,-137,-55,]),'CLASS_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,220,228,230,231,233,234,235,236,237,238,247,248,249,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[50,50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,71,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,71,71,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,71,71,114,-116,-117,-118,-119,-24,-27,-28,-2,-165,71,71,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,71,71,71,71,71,71,71,-49,71,71,71,71,71,71,50,-59,50,71,71,71,71,-41,-140,-100,71,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,71,71,-48,-131,-132,-133,-134,-88,50,71,-61,-62,-63,-64,-65,71,-69,-70,-71,-72,-73,-74,-75,50,71,114,114,114,114,114,114,-51,-53,-159,71,71,-160,-161,-32,-99,71,-171,-172,-84,-56,-138,-57,50,-60,-66,-68,-67,-97,-50,71,-52,71,71,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,71,-151,-78,-79,-135,-136,71,-58,50,-147,71,-168,-166,-54,71,-162,-163,-164,-148,-137,-55,]),'GLOBAL_VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,197,198,200,201,202,203,205,207,208,210,211,220,228,230,231,233,234,235,236,237,238,247,248,249,251,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,283,285,288,289,290,291,292,295,298,299,],[51,51,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,72,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,72,72,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,72,72,115,-116,-117,-118,-119,-24,-27,-28,-2,-165,72,72,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,72,72,72,72,72,72,72,-49,72,72,72,72,72,72,51,-59,51,72,72,72,72,-41,-140,-100,72,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,72,72,-48,-131,-132,-133,-134,-88,51,72,-61,-62,-63,-64,-65,72,-69,-70,-71,-72,-73,-74,-75,51,72,115,115,115,115,115,115,-51,-53,-159,72,72,-160,-161,-32,-99,72,-171,-172,-84,-56,-138,-57,51,-60,-66,-68,-67,-97,-50,72,-52,72,72,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,72,-151,-78,-79,-135,-136,72,-58,51,-147,72,-168,-166,-54,72,-162,-163,-164,-148,-137,-55,]),'CONSTANT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,48,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,186,187,188,189,190,191,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[52,52,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,52,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,52,-59,52,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,52,52,52,52,52,52,52,52,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,52,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,52,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'NIL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,184,194,197,198,200,202,203,205,207,208,210,211,220,228,230,231,233,234,235,236,237,238,247,248,249,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,283,285,288,289,290,291,292,295,298,299,],[55,55,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,55,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,55,55,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,55,55,55,55,55,55,55,-49,55,55,55,55,55,55,55,-59,55,55,55,55,55,-41,-140,-100,55,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,55,55,-48,-131,-132,-133,-134,-88,55,55,-51,-53,-159,55,-160,-161,-32,-99,55,-171,-172,-84,-56,-138,-57,55,-60,-66,-68,-67,-97,-50,55,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,55,-151,-78,-79,-135,-136,55,-58,55,-147,-168,-166,-54,55,-162,-163,-164,-148,-137,-55,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,90,92,93,94,95,96,98,99,100,103,116,117,126,130,131,132,134,136,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,161,162,163,164,165,168,184,194,197,198,200,202,203,205,207,208,210,211,220,228,230,231,233,234,235,236,237,238,247,248,249,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,283,285,288,289,290,291,292,295,298,299,],[56,56,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,56,56,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,56,56,56,56,56,56,56,-49,56,56,56,56,56,56,56,-59,56,56,56,56,56,-41,-140,-100,56,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,56,56,-48,-131,-132,-133,-134,-88,56,56,-51,-53,-159,56,-160,-161,-32,-99,56,-171,-172,-84,-56,-138,-57,56,-60,-66,-68,-67,-97,-50,56,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,56,-151,-78,-79,-135,-136,56,-58,56,-147,-168,-166,-54,56,-162,-163,-164,-148,-137,-55,]),'LEFT_COR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,45,49,50,51,52,53,55,56,57,59,60,63,64,65,66,67,68,69,70,71,72,83,90,99,100,103,118,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,229,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[28,28,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,82,-120,-121,-122,91,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,98,-116,-117,-118,-119,-24,-27,-28,117,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,28,-49,28,-59,28,28,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,28,28,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,273,-138,-57,28,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,28,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'PERCENTW':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,83,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[57,57,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,57,-49,57,-59,57,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,57,57,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,57,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,57,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,83,90,99,100,103,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,233,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,283,285,288,290,291,292,295,298,299,],[58,58,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,58,-49,58,-59,58,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,58,58,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,58,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,58,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,100,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,194,197,198,202,203,205,207,210,211,220,228,230,231,234,235,236,237,238,247,249,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,276,283,285,288,290,291,292,295,298,299,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,-59,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,-60,-66,-68,-67,-97,-50,-52,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,-147,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'END_LOWER':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,100,122,123,124,125,128,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,184,194,197,198,202,203,205,207,210,211,220,228,230,231,232,234,235,236,237,238,247,249,253,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,275,276,281,282,283,285,288,290,291,292,295,298,299,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,-59,-128,-129,-130,-174,203,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,231,238,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,274,-60,-66,-68,-67,-97,-50,-52,-98,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,-76,-147,-101,292,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,59,60,63,64,65,66,67,68,69,70,71,72,90,100,122,123,124,125,131,132,134,137,139,140,141,143,144,145,146,147,148,149,150,151,153,154,155,156,159,161,162,163,164,165,168,194,197,198,202,203,205,207,210,211,220,228,230,231,234,235,236,237,238,239,247,249,253,255,256,258,259,260,261,262,263,264,265,267,268,269,271,272,274,276,281,283,285,288,290,291,292,295,298,299,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-115,-120,-121,-122,-95,-126,-127,-111,-112,-113,-114,-43,-44,-45,-46,-116,-117,-118,-119,-24,-27,-28,-2,-165,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-49,-59,-128,-129,-130,-174,-41,-140,-100,-77,-173,-33,-125,-89,-94,-141,-47,-82,-167,-24,-25,-26,-90,-91,-92,-93,-48,-131,-132,-133,-134,-88,233,-51,-53,-159,-160,-161,-32,-99,-171,-172,-84,-56,-138,-57,-60,-66,-68,-67,-97,277,-50,-52,-98,-39,-40,-170,-169,-150,-152,-149,-81,-80,-83,-151,-78,-79,-135,-136,-58,-147,-101,-168,-166,-54,-162,-163,-164,-148,-137,-55,]),'LBRACE':([7,26,49,50,51,54,83,134,207,270,],[61,-33,-34,-35,-36,116,142,-100,-99,61,]),'DO':([7,134,207,270,],[62,-100,-99,62,]),'DOT':([16,26,45,58,131,152,],[73,81,97,119,206,225,]),'PLUS':([21,22,67,68,132,140,149,151,230,260,262,298,],[-139,75,-37,-38,-140,213,223,224,-138,223,223,-137,]),'MINUS':([21,22,67,68,132,140,149,230,260,262,298,],[-139,76,-37,-38,-140,214,214,-138,214,214,-137,]),'AMPERSAND':([21,22,132,230,298,],[-139,77,-140,-138,-137,]),'PIPE':([21,22,61,62,132,199,204,230,298,],[-139,78,121,129,-140,251,254,-138,-137,]),'CARET':([21,22,132,230,298,],[-139,79,-140,-138,-137,]),'ASSIGN':([26,44,246,],[83,96,-87,]),'PLUS_ASSIGN':([26,],[84,]),'MULTIPLY_ASSIGN':([26,],[85,]),'MINUS_ASSIGN':([26,],[86,]),'DIVIDE_ASSIGN':([26,],[87,]),'EQUAL':([26,35,36,37,38,39,49,50,51,52,53,54,55,56,67,68,69,70,71,72,99,100,101,102,103,105,107,108,109,112,113,114,115,127,140,144,149,150,234,235,236,237,253,],[-33,-38,-37,-113,-26,92,-34,-35,-36,-119,-24,-25,-27,-28,-37,-38,-33,-34,-35,-36,174,-59,180,180,174,190,-111,-112,-114,-115,-116,-117,-118,174,-33,174,180,180,174,-66,-68,-67,174,]),'COMPARE':([26,35,36,38,39,49,50,51,53,54,55,56,67,68,69,70,71,72,101,102,140,149,150,],[-33,-38,-37,-26,93,-34,-35,-36,-24,-25,-27,-28,-37,-38,-33,-34,-35,-36,182,182,-33,182,182,]),'RANGEIN':([26,35,36,38,39,49,50,51,53,54,55,56,65,66,67,68,69,70,71,72,88,],[-33,-38,-37,-26,94,-34,-35,-36,-24,-25,-27,-28,-25,-26,-37,-38,-33,-34,-35,-36,157,]),'RANGEEX':([26,35,36,38,39,49,50,51,53,54,55,56,65,66,67,68,69,70,71,72,88,],[-33,-38,-37,-26,95,-34,-35,-36,-24,-25,-27,-28,-25,-26,-37,-38,-33,-34,-35,-36,158,]),'RIGHT_COR':([28,53,55,56,64,65,66,67,68,69,70,71,72,82,89,117,138,160,167,193,195,205,278,286,],[90,-24,-27,-28,-31,-25,-26,-37,-38,-33,-34,-35,-36,139,159,194,211,228,230,247,-30,-32,-29,294,]),'GREATER':([37,52,67,68,69,70,71,72,101,102,105,107,108,109,112,113,114,115,140,149,150,],[-113,-119,-37,-38,-33,-34,-35,-36,176,176,186,-111,-112,-114,-115,-116,-117,-118,-33,176,176,]),'LESS':([37,52,67,68,69,70,71,72,101,102,105,107,108,109,112,113,114,115,140,149,150,],[-113,-119,-37,-38,-33,-34,-35,-36,177,177,187,-111,-112,-114,-115,-116,-117,-118,-33,177,177,]),'GREATER_EQUAL':([37,52,67,68,69,70,71,72,101,102,105,107,108,109,112,113,114,115,140,149,150,],[-113,-119,-37,-38,-33,-34,-35,-36,178,178,188,-111,-112,-114,-115,-116,-117,-118,-33,178,178,]),'LESS_EQUAL':([37,52,67,68,69,70,71,72,101,102,105,107,108,109,112,113,114,115,140,149,150,],[-113,-119,-37,-38,-33,-34,-35,-36,179,179,189,-111,-112,-114,-115,-116,-117,-118,-33,179,179,]),'NOT_EQUAL':([37,52,67,68,69,70,71,72,101,102,105,107,108,109,112,113,114,115,140,149,150,],[-113,-119,-37,-38,-33,-34,-35,-36,181,181,191,-111,-112,-114,-115,-116,-117,-118,-33,181,181,]),'THEN':([37,52,104,106,107,108,109,110,111,112,113,114,115,240,241,242,243,244,245,],[-113,-119,185,-108,-111,-112,-114,-109,-110,-115,-116,-117,-118,-102,-103,-104,-105,-106,-107,]),'TRUE':([48,],[110,]),'FALSE':([48,],[111,]),'COMMA':([53,55,56,64,65,66,67,68,69,70,71,72,279,284,],[-24,-27,-28,130,-25,-26,-37,-38,-33,-34,-35,-36,289,293,]),'RIGHTPAR':([53,55,56,64,65,66,67,68,69,70,71,72,80,90,133,136,159,196,205,208,209,226,227,252,257,279,294,296,],[-24,-27,-28,-31,-25,-26,-37,-38,-33,-34,-35,-36,134,-49,207,210,-48,249,-32,258,259,271,272,281,283,288,298,299,]),'RBRACE':([53,55,56,63,64,65,66,67,68,69,70,71,72,100,120,122,123,124,125,131,142,192,205,219,234,235,236,237,253,255,256,280,281,284,297,],[-24,-27,-28,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-59,198,-128,-129,-130,-174,-41,220,246,-32,265,-60,-66,-68,-67,-98,-39,-40,290,-101,-85,-86,]),'SPACE':([53,55,56,65,66,67,68,69,70,71,72,195,],[-24,-27,-28,-25,-26,-37,-38,-33,-34,-35,-36,248,]),'END':([53,55,56,63,64,65,66,67,68,69,70,71,72,100,122,123,124,125,128,131,205,234,235,236,237,239,253,255,256,281,282,287,],[-24,-27,-28,-42,-31,-25,-26,-37,-38,-33,-34,-35,-36,-59,-128,-129,-130,-174,202,-41,-32,-60,-66,-68,-67,276,-98,-39,-40,-101,291,295,]),'MULTIPLY':([67,68,140,149,260,262,],[-37,-38,215,215,215,215,]),'DIVIDE':([67,68,140,149,260,262,],[-37,-38,216,216,216,216,]),'MODULO':([67,68,140,149,260,262,],[-37,-38,217,217,217,217,]),'EXPONENT':([67,68,140,149,260,262,],[-37,-38,218,218,218,218,]),'AND':([67,68,69,70,71,72,99,100,103,127,144,234,235,236,237,253,],[-37,-38,-33,-34,-35,-36,170,-59,170,170,170,170,-66,-68,-67,170,]),'OR':([67,68,69,70,71,72,99,100,103,127,144,234,235,236,237,253,],[-37,-38,-33,-34,-35,-36,171,-59,171,171,171,171,-66,-68,-67,171,]),'AND_RESERVED':([67,68,69,70,71,72,99,100,103,127,144,234,235,236,237,253,],[-37,-38,-33,-34,-35,-36,172,-59,172,172,172,172,-66,-68,-67,172,]),'OR_RESERVED':([67,68,69,70,71,72,99,100,103,127,144,234,235,236,237,253,],[-37,-38,-33,-34,-35,-36,173,-59,173,173,173,173,-66,-68,-67,173,]),'CHOMP':([73,],[131,]),'CALL':([81,],[135,]),'TO_S':([81,],[137,]),'PROC':([83,],[152,]),'NEW':([97,119,225,],[166,197,270,]),'TO_F':([206,],[255,]),'TO_I':([206,],[256,]),'HASH_ROCKET':([221,],[266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,99,103,233,],[1,168,184,275,]),'sentencia':([0,1,99,103,168,184,233,275,],[2,59,2,2,59,59,2,59,]),'puts':([0,1,61,62,99,103,168,184,185,233,251,254,275,277,],[3,3,122,122,3,3,3,3,122,3,122,122,3,122,]),'gets':([0,1,61,62,99,103,168,184,185,233,251,254,275,277,],[4,4,123,123,4,4,4,4,123,4,123,123,4,123,]),'estructurasDatos':([0,1,99,103,168,184,233,275,],[5,5,5,5,5,5,5,5,]),'estructurasControl':([0,1,99,103,168,184,233,275,],[6,6,6,6,6,6,6,6,]),'method_call':([0,1,99,103,168,184,233,275,],[7,7,7,7,7,7,7,7,]),'block_assignment':([0,1,99,103,168,184,233,275,],[8,8,8,8,8,8,8,8,]),'proc_call':([0,1,99,103,168,184,233,275,],[9,9,9,9,9,9,9,9,]),'declaraciones':([0,1,99,103,168,184,233,275,],[10,10,10,10,10,10,10,10,]),'expression':([0,1,48,99,103,168,184,186,187,188,189,190,191,233,275,],[11,11,105,11,11,11,11,240,241,242,243,244,245,11,11,]),'to_string':([0,1,99,103,168,184,233,275,],[12,12,12,12,12,12,12,12,]),'comparador':([0,1,99,103,168,184,233,275,],[13,13,13,13,13,13,13,13,]),'range_expression':([0,1,99,103,168,184,233,275,],[14,14,14,14,14,14,14,14,]),'array':([0,1,83,99,103,168,184,233,275,],[17,17,146,17,17,17,17,17,17,]),'acceder_arreglo':([0,1,99,103,168,184,233,275,],[18,18,18,18,18,18,18,18,]),'hash_operations':([0,1,99,103,168,184,233,275,],[19,19,19,19,19,19,19,19,]),'hash_var':([0,1,99,103,168,184,233,275,],[20,20,20,20,20,20,20,20,]),'set_expression':([0,1,74,83,99,103,168,184,233,275,],[21,21,132,145,21,21,21,21,21,21,]),'set_operations':([0,1,99,103,168,184,233,275,],[22,22,22,22,22,22,22,22,]),'ifStatement':([0,1,99,103,168,184,233,275,],[23,23,23,23,23,23,23,23,]),'while_statement':([0,1,99,103,168,184,233,275,],[24,24,24,24,24,24,24,24,]),'unless_expression':([0,1,99,103,168,184,233,275,],[25,25,25,25,25,25,25,25,]),'variable_declaration':([0,1,99,103,168,184,233,275,],[29,29,29,29,29,29,29,29,]),'store_conditional_result':([0,1,99,103,168,184,233,275,],[30,30,30,30,30,30,30,30,]),'declare_data_structures':([0,1,99,103,168,184,233,275,],[31,31,31,31,31,31,31,31,]),'var_arreglo':([0,1,99,103,168,184,233,275,],[32,32,32,32,32,32,32,32,]),'declaracion_concatenar_string':([0,1,99,103,168,184,233,275,],[33,33,33,33,33,33,33,33,]),'proc_assignment':([0,1,99,103,168,184,233,275,],[34,34,34,34,34,34,34,34,]),'variable':([0,1,48,99,103,168,184,186,187,188,189,190,191,233,275,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'value':([0,1,15,27,28,80,82,83,84,85,86,87,92,93,94,95,96,98,99,103,116,117,126,130,136,157,158,168,184,200,208,233,248,266,273,275,289,],[39,39,64,88,64,64,64,143,153,154,155,156,161,162,163,164,165,64,39,39,192,195,64,64,64,226,227,39,39,64,64,39,195,284,64,39,64,]),'array_explicito':([0,1,83,99,103,118,168,184,233,275,],[40,40,40,40,40,196,40,40,40,40,]),'array_implicito':([0,1,83,99,103,168,184,233,275,],[41,41,41,41,41,41,41,41,41,]),'array_creation':([0,1,83,99,103,168,184,233,275,],[42,42,42,42,42,42,42,42,42,]),'newArray':([0,1,83,99,103,168,184,233,275,],[43,43,43,43,43,43,43,43,43,]),'hash_access':([0,1,99,103,168,184,233,275,],[44,44,44,44,44,44,44,44,]),'num':([0,1,15,27,28,46,47,61,62,80,82,83,84,85,86,87,92,93,94,95,96,98,99,103,116,117,126,130,136,157,158,168,169,175,183,184,185,200,201,208,212,222,233,248,251,254,266,273,275,277,289,],[53,53,53,53,53,101,101,101,101,53,53,149,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,101,235,237,53,101,53,101,53,262,262,53,53,101,101,53,53,53,101,53,]),'var':([0,1,15,27,28,46,47,61,62,80,82,83,84,85,86,87,92,93,94,95,96,98,99,103,116,117,126,130,136,157,158,168,169,175,184,185,200,201,208,233,248,251,254,266,273,275,277,289,],[54,54,65,65,65,102,102,102,102,65,65,150,65,65,65,65,65,65,65,65,65,65,54,54,65,65,65,65,65,65,65,54,102,236,54,102,65,102,65,54,65,102,102,65,65,54,102,65,]),'block_expression':([7,270,],[60,285,]),'values':([15,28,80,82,98,126,130,136,200,208,273,289,],[63,89,133,138,167,63,205,209,252,257,286,296,]),'set_binary_operators':([22,],[74,]),'condiciones':([46,47,61,62,83,169,185,201,251,254,277,],[99,103,127,127,144,234,127,253,127,127,127,]),'condicion':([46,47,61,62,83,169,185,201,251,254,277,],[100,100,100,100,100,100,100,100,100,100,100,]),'boolean_expression':([48,],[104,]),'boolean_value':([48,],[106,]),'expresion':([61,62,185,251,254,277,],[120,128,239,280,282,287,]),'print_statement':([61,62,185,251,254,277,],[124,124,124,124,124,124,]),'condition_with_connectors':([61,62,185,251,254,277,],[125,125,125,125,125,125,]),'arithmetic_production':([83,212,222,],[141,261,267,]),'concatenar_string':([83,],[147,]),'proc_expression':([83,],[148,]),'conectores':([99,103,127,144,234,253,],[169,169,201,169,169,169,]),'operComp':([101,102,149,150,],[175,183,175,183,]),'values_space':([117,248,],[193,278,]),'arithmetic_operators':([140,149,260,262,],[212,222,212,222,]),'hash_values':([142,293,],[219,297,]),'else_statement':([168,],[232,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> sentencia','codigo',1,'p_codigo','syntax_analyzer.py',17),
  ('codigo -> codigo sentencia','codigo',2,'p_codigo','syntax_analyzer.py',18),
  ('sentencia -> puts','sentencia',1,'p_sentencia','syntax_analyzer.py',21),
  ('sentencia -> gets','sentencia',1,'p_sentencia','syntax_analyzer.py',22),
  ('sentencia -> estructurasDatos','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> estructurasControl','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> method_call','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> block_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> proc_call','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> declaraciones','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> expression','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> to_string','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('sentencia -> comparador','sentencia',1,'p_sentencia','syntax_analyzer.py',31),
  ('sentencia -> range_expression','sentencia',1,'p_sentencia','syntax_analyzer.py',32),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',35),
  ('estructurasDatos -> acceder_arreglo','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',36),
  ('estructurasDatos -> hash_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',37),
  ('estructurasDatos -> hash_var','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',38),
  ('estructurasDatos -> set_expression','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',39),
  ('estructurasDatos -> set_operations','estructurasDatos',1,'p_estructurasDatos','syntax_analyzer.py',40),
  ('estructurasControl -> ifStatement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',44),
  ('estructurasControl -> while_statement','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',45),
  ('estructurasControl -> unless_expression','estructurasControl',1,'p_estructurasControl','syntax_analyzer.py',46),
  ('value -> num','value',1,'p_value','syntax_analyzer.py',51),
  ('value -> var','value',1,'p_value','syntax_analyzer.py',52),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',53),
  ('value -> NIL','value',1,'p_value','syntax_analyzer.py',54),
  ('value -> SYMBOL','value',1,'p_value','syntax_analyzer.py',55),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','syntax_analyzer.py',60),
  ('values_space -> value','values_space',1,'p_values_space','syntax_analyzer.py',61),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',65),
  ('values -> value COMMA values','values',3,'p_values','syntax_analyzer.py',66),
  ('var -> LOCAL_VAR','var',1,'p_var','syntax_analyzer.py',70),
  ('var -> INSTANCE_VAR','var',1,'p_var','syntax_analyzer.py',71),
  ('var -> CLASS_VAR','var',1,'p_var','syntax_analyzer.py',72),
  ('var -> GLOBAL_VAR','var',1,'p_var','syntax_analyzer.py',73),
  ('num -> FLOAT','num',1,'p_num','syntax_analyzer.py',78),
  ('num -> INTEGER','num',1,'p_num','syntax_analyzer.py',79),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','syntax_analyzer.py',84),
  ('gets -> GETS DOT CHOMP DOT TO_I','gets',5,'p_gets','syntax_analyzer.py',85),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','syntax_analyzer.py',86),
  ('puts -> PUT values','puts',2,'p_puts','syntax_analyzer.py',90),
  ('array -> array_explicito','array',1,'p_array','syntax_analyzer.py',96),
  ('array -> array_implicito','array',1,'p_array','syntax_analyzer.py',97),
  ('array -> array_creation','array',1,'p_array','syntax_analyzer.py',98),
  ('array -> newArray','array',1,'p_array','syntax_analyzer.py',99),
  ('var_arreglo -> LOCAL_VAR ASSIGN array','var_arreglo',3,'p_var_arreglo','syntax_analyzer.py',104),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','syntax_analyzer.py',109),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','syntax_analyzer.py',110),
  ('array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','syntax_analyzer.py',115),
  ('array_implicito -> PERCENTW LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','syntax_analyzer.py',116),
  ('array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR','array_creation',4,'p_array_creation','syntax_analyzer.py',120),
  ('newArray -> ARRAY DOT NEW','newArray',3,'p_newArray','syntax_analyzer.py',124),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR','newArray',6,'p_newArray','syntax_analyzer.py',125),
  ('newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR','newArray',8,'p_newArray','syntax_analyzer.py',126),
  ('acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','syntax_analyzer.py',130),
  ('ifStatement -> IF condiciones codigo END_LOWER','ifStatement',4,'p_ifStatement','syntax_analyzer.py',135),
  ('ifStatement -> IF condiciones codigo else_statement END_LOWER','ifStatement',5,'p_ifStatement','syntax_analyzer.py',136),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','syntax_analyzer.py',140),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','syntax_analyzer.py',141),
  ('conectores -> AND','conectores',1,'p_conectores','syntax_analyzer.py',146),
  ('conectores -> OR','conectores',1,'p_conectores','syntax_analyzer.py',147),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',148),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','syntax_analyzer.py',149),
  ('conectores -> EQUAL','conectores',1,'p_conectores','syntax_analyzer.py',150),
  ('condicion -> num operComp num','condicion',3,'p_condicion','syntax_analyzer.py',155),
  ('condicion -> var operComp num','condicion',3,'p_condicion','syntax_analyzer.py',156),
  ('condicion -> num operComp var','condicion',3,'p_condicion','syntax_analyzer.py',157),
  ('operComp -> GREATER','operComp',1,'p_operComp','syntax_analyzer.py',162),
  ('operComp -> LESS','operComp',1,'p_operComp','syntax_analyzer.py',163),
  ('operComp -> GREATER_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',164),
  ('operComp -> LESS_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',165),
  ('operComp -> EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',166),
  ('operComp -> NOT_EQUAL','operComp',1,'p_operComp','syntax_analyzer.py',167),
  ('operComp -> COMPARE','operComp',1,'p_operComp','syntax_analyzer.py',168),
  ('else_statement -> ELSE codigo','else_statement',2,'p_else_statement','syntax_analyzer.py',172),
  ('to_string -> LOCAL_VAR DOT TO_S','to_string',3,'p_to_string','syntax_analyzer.py',176),
  ('concatenar_string -> STRING PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',189),
  ('concatenar_string -> STRING PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',190),
  ('concatenar_string -> LOCAL_VAR PLUS STRING','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',191),
  ('concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR','concatenar_string',3,'p_concatenar_string','syntax_analyzer.py',192),
  ('declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string','declaracion_concatenar_string',3,'p_declaracion_concatenar_string','syntax_analyzer.py',206),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE','hash_var',5,'p_hash_var','syntax_analyzer.py',226),
  ('hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE','hash_var',4,'p_hash_var','syntax_analyzer.py',227),
  ('hash_values -> STRING HASH_ROCKET value','hash_values',3,'p_hash_values','syntax_analyzer.py',239),
  ('hash_values -> STRING HASH_ROCKET value COMMA hash_values','hash_values',5,'p_hash_values','syntax_analyzer.py',240),
  ('hash_access -> var LBRACE value RBRACE','hash_access',4,'p_hash_access','syntax_analyzer.py',261),
  ('hash_operations -> hash_access ASSIGN value','hash_operations',3,'p_hash_operations','syntax_analyzer.py',265),
  ('variable_declaration -> LOCAL_VAR ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',270),
  ('variable_declaration -> LOCAL_VAR PLUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',271),
  ('variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',272),
  ('variable_declaration -> LOCAL_VAR MINUS_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',273),
  ('variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value','variable_declaration',3,'p_variable_declaration','syntax_analyzer.py',274),
  ('store_conditional_result -> LOCAL_VAR ASSIGN condiciones','store_conditional_result',3,'p_store_conditional_result','syntax_analyzer.py',282),
  ('declare_data_structures -> var_arreglo','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',287),
  ('declare_data_structures -> hash_var','declare_data_structures',1,'p_declare_data_structures','syntax_analyzer.py',288),
  ('while_statement -> WHILE condiciones codigo END_LOWER','while_statement',4,'p_while_statement','syntax_analyzer.py',293),
  ('condition_with_connectors -> condiciones conectores condiciones','condition_with_connectors',3,'p_condition_with_connectors','syntax_analyzer.py',298),
  ('method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR','method_call',4,'p_method_call','syntax_analyzer.py',303),
  ('method_call -> LOCAL_VAR LEFTPAR RIGHTPAR','method_call',3,'p_method_call','syntax_analyzer.py',304),
  ('print_statement -> PUT LEFTPAR values RIGHTPAR','print_statement',4,'p_print_statement','syntax_analyzer.py',308),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',313),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',314),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',315),
  ('boolean_expression -> expression LESS_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',316),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',317),
  ('boolean_expression -> expression NOT_EQUAL expression','boolean_expression',3,'p_boolean_expression','syntax_analyzer.py',318),
  ('boolean_expression -> boolean_value','boolean_expression',1,'p_boolean_expression','syntax_analyzer.py',319),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',323),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','syntax_analyzer.py',324),
  ('expression -> INTEGER','expression',1,'p_expression','syntax_analyzer.py',328),
  ('expression -> FLOAT','expression',1,'p_expression','syntax_analyzer.py',329),
  ('expression -> variable','expression',1,'p_expression','syntax_analyzer.py',330),
  ('expression -> STRING','expression',1,'p_expression','syntax_analyzer.py',331),
  ('variable -> LOCAL_VAR','variable',1,'p_variable','syntax_analyzer.py',334),
  ('variable -> INSTANCE_VAR','variable',1,'p_variable','syntax_analyzer.py',335),
  ('variable -> CLASS_VAR','variable',1,'p_variable','syntax_analyzer.py',336),
  ('variable -> GLOBAL_VAR','variable',1,'p_variable','syntax_analyzer.py',337),
  ('variable -> CONSTANT','variable',1,'p_variable','syntax_analyzer.py',338),
  ('declaraciones -> variable_declaration','declaraciones',1,'p_declaraciones','syntax_analyzer.py',342),
  ('declaraciones -> store_conditional_result','declaraciones',1,'p_declaraciones','syntax_analyzer.py',343),
  ('declaraciones -> declare_data_structures','declaraciones',1,'p_declaraciones','syntax_analyzer.py',344),
  ('declaraciones -> var_arreglo','declaraciones',1,'p_declaraciones','syntax_analyzer.py',345),
  ('declaraciones -> hash_var','declaraciones',1,'p_declaraciones','syntax_analyzer.py',346),
  ('declaraciones -> LOCAL_VAR ASSIGN arithmetic_production','declaraciones',3,'p_declaraciones','syntax_analyzer.py',347),
  ('declaraciones -> declaracion_concatenar_string','declaraciones',1,'p_declaraciones','syntax_analyzer.py',348),
  ('declaraciones -> proc_assignment','declaraciones',1,'p_declaraciones','syntax_analyzer.py',349),
  ('expresion -> puts','expresion',1,'p_expresion','syntax_analyzer.py',354),
  ('expresion -> gets','expresion',1,'p_expresion','syntax_analyzer.py',355),
  ('expresion -> print_statement','expresion',1,'p_expresion','syntax_analyzer.py',356),
  ('comparador -> value EQUAL value','comparador',3,'p_comparador','syntax_analyzer.py',363),
  ('comparador -> value COMPARE value','comparador',3,'p_comparador','syntax_analyzer.py',364),
  ('range_expression -> value RANGEIN value','range_expression',3,'p_range_expression','syntax_analyzer.py',405),
  ('range_expression -> value RANGEEX value','range_expression',3,'p_range_expression','syntax_analyzer.py',406),
  ('range_expression -> LEFTPAR value RANGEIN value RIGHTPAR','range_expression',5,'p_range_expression','syntax_analyzer.py',407),
  ('range_expression -> LEFTPAR value RANGEEX value RIGHTPAR','range_expression',5,'p_range_expression','syntax_analyzer.py',408),
  ('set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR','set_expression',8,'p_set_expression','syntax_analyzer.py',426),
  ('set_expression -> SET LEFT_COR values RIGHT_COR','set_expression',4,'p_set_expression','syntax_analyzer.py',427),
  ('set_operations -> set_expression','set_operations',1,'p_set_operations','syntax_analyzer.py',430),
  ('set_operations -> set_operations set_binary_operators set_expression','set_operations',3,'p_set_operations','syntax_analyzer.py',431),
  ('declare_data_structures -> LOCAL_VAR ASSIGN set_expression','declare_data_structures',3,'p_set_declaration','syntax_analyzer.py',434),
  ('set_binary_operators -> PLUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',438),
  ('set_binary_operators -> MINUS','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',439),
  ('set_binary_operators -> AMPERSAND','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',440),
  ('set_binary_operators -> PIPE','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',441),
  ('set_binary_operators -> CARET','set_binary_operators',1,'p_set_binary_operators','syntax_analyzer.py',442),
  ('unless_expression -> UNLESS boolean_expression THEN expresion END','unless_expression',5,'p_unless_expression','syntax_analyzer.py',445),
  ('unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END','unless_expression',7,'p_unless_expression','syntax_analyzer.py',446),
  ('arithmetic_production -> num','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',449),
  ('arithmetic_production -> LOCAL_VAR','arithmetic_production',1,'p_arithmetic_production','syntax_analyzer.py',450),
  ('arithmetic_production -> num arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',451),
  ('arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production','arithmetic_production',3,'p_arithmetic_production','syntax_analyzer.py',452),
  ('arithmetic_operators -> PLUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',478),
  ('arithmetic_operators -> MINUS','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',479),
  ('arithmetic_operators -> MULTIPLY','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',480),
  ('arithmetic_operators -> DIVIDE','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',481),
  ('arithmetic_operators -> MODULO','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',482),
  ('arithmetic_operators -> EXPONENT','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyzer.py',483),
  ('block_expression -> LBRACE expresion RBRACE','block_expression',3,'p_block_expression','syntax_analyzer.py',486),
  ('block_expression -> DO expresion END','block_expression',3,'p_block_expression','syntax_analyzer.py',487),
  ('block_expression -> DO expresion END_LOWER','block_expression',3,'p_block_expression','syntax_analyzer.py',488),
  ('block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE','block_expression',6,'p_block_expression','syntax_analyzer.py',489),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END','block_expression',6,'p_block_expression','syntax_analyzer.py',490),
  ('block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER','block_expression',6,'p_block_expression','syntax_analyzer.py',491),
  ('block_assignment -> method_call block_expression','block_assignment',2,'p_block_assignment','syntax_analyzer.py',494),
  ('proc_expression -> PROC DOT NEW block_expression','proc_expression',4,'p_proc_expression','syntax_analyzer.py',497),
  ('proc_assignment -> LOCAL_VAR ASSIGN proc_expression','proc_assignment',3,'p_proc_assignment','syntax_analyzer.py',501),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR','proc_call',6,'p_proc_call','syntax_analyzer.py',505),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',506),
  ('proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR','proc_call',5,'p_proc_call','syntax_analyzer.py',507),
  ('proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR','proc_call',4,'p_proc_call','syntax_analyzer.py',508),
  ('proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR','proc_call',4,'p_proc_call_cor','syntax_analyzer.py',516),
  ('proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR','proc_call',3,'p_proc_call_cor','syntax_analyzer.py',517),
  ('expresion -> condition_with_connectors','expresion',1,'p_condition_expr','syntax_analyzer.py',525),
]
