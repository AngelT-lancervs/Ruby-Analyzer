Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    BEGIN
    BIN_INTEGER
    BOOLEAN
    BREAK
    CASE
    CASE_EQUAL
    CLASS
    COLON
    DEF
    DEFINED
    DOUBLE_QUOTE
    ELSIF
    EXPONENT_ASSIGN
    FOR
    HEX_INTEGER
    IN
    MODULE
    MODULO_ASSIGN
    NEWLINE
    NMAP
    NOT
    OCT_INTEGER
    QUOTATION
    REDO
    RETURN
    SELF
    TAB
    UNTIL
    WHEN

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> sentencia
Rule 2     codigo -> codigo sentencia
Rule 3     sentencia -> puts
Rule 4     sentencia -> gets
Rule 5     sentencia -> estructurasDatos
Rule 6     sentencia -> estructurasControl
Rule 7     sentencia -> method_call
Rule 8     sentencia -> block_assignment
Rule 9     sentencia -> proc_call
Rule 10    sentencia -> declaraciones
Rule 11    sentencia -> expression
Rule 12    sentencia -> to_string
Rule 13    sentencia -> comparador
Rule 14    sentencia -> range_expression
Rule 15    estructurasDatos -> array
Rule 16    estructurasDatos -> acceder_arreglo
Rule 17    estructurasDatos -> hash_operations
Rule 18    estructurasDatos -> hash_var
Rule 19    estructurasDatos -> set_expression
Rule 20    estructurasDatos -> set_operations
Rule 21    estructurasControl -> ifStatement
Rule 22    estructurasControl -> while_statement
Rule 23    estructurasControl -> unless_expression
Rule 24    value -> num
Rule 25    value -> var
Rule 26    value -> STRING
Rule 27    value -> NIL
Rule 28    value -> SYMBOL
Rule 29    values_space -> value SPACE values_space
Rule 30    values_space -> value
Rule 31    values -> value
Rule 32    values -> value COMMA values
Rule 33    var -> LOCAL_VAR
Rule 34    var -> INSTANCE_VAR
Rule 35    var -> CLASS_VAR
Rule 36    var -> GLOBAL_VAR
Rule 37    num -> FLOAT
Rule 38    num -> INTEGER
Rule 39    gets -> GETS DOT CHOMP DOT TO_F
Rule 40    gets -> GETS DOT CHOMP DOT TO_I
Rule 41    gets -> GETS DOT CHOMP
Rule 42    puts -> PUT values
Rule 43    array -> array_explicito
Rule 44    array -> array_implicito
Rule 45    array -> array_creation
Rule 46    array -> newArray
Rule 47    var_arreglo -> LOCAL_VAR ASSIGN array
Rule 48    array_explicito -> LEFT_COR values RIGHT_COR
Rule 49    array_explicito -> LEFT_COR RIGHT_COR
Rule 50    array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR
Rule 51    array_implicito -> PERCENTW LEFT_COR RIGHT_COR
Rule 52    array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR
Rule 53    newArray -> ARRAY DOT NEW
Rule 54    newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
Rule 55    newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
Rule 56    acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR
Rule 57    ifStatement -> IF condiciones codigo END_LOWER
Rule 58    ifStatement -> IF condiciones codigo else_statement END_LOWER
Rule 59    condiciones -> condicion
Rule 60    condiciones -> condiciones conectores condiciones
Rule 61    conectores -> AND
Rule 62    conectores -> OR
Rule 63    conectores -> AND_RESERVED
Rule 64    conectores -> OR_RESERVED
Rule 65    conectores -> EQUAL
Rule 66    condicion -> num operComp num
Rule 67    condicion -> var operComp num
Rule 68    condicion -> num operComp var
Rule 69    operComp -> GREATER
Rule 70    operComp -> LESS
Rule 71    operComp -> GREATER_EQUAL
Rule 72    operComp -> LESS_EQUAL
Rule 73    operComp -> EQUAL
Rule 74    operComp -> NOT_EQUAL
Rule 75    operComp -> COMPARE
Rule 76    else_statement -> ELSE codigo
Rule 77    to_string -> LOCAL_VAR DOT TO_S
Rule 78    concatenar_string -> STRING PLUS STRING
Rule 79    concatenar_string -> STRING PLUS LOCAL_VAR
Rule 80    concatenar_string -> LOCAL_VAR PLUS STRING
Rule 81    concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR
Rule 82    declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string
Rule 83    hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
Rule 84    hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE
Rule 85    hash_values -> STRING HASH_ROCKET value
Rule 86    hash_values -> STRING HASH_ROCKET value COMMA hash_values
Rule 87    hash_access -> var LBRACE value RBRACE
Rule 88    hash_operations -> hash_access ASSIGN value
Rule 89    variable_declaration -> LOCAL_VAR ASSIGN value
Rule 90    variable_declaration -> LOCAL_VAR PLUS_ASSIGN value
Rule 91    variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value
Rule 92    variable_declaration -> LOCAL_VAR MINUS_ASSIGN value
Rule 93    variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value
Rule 94    store_conditional_result -> LOCAL_VAR ASSIGN condiciones
Rule 95    declare_data_structures -> var_arreglo
Rule 96    declare_data_structures -> hash_var
Rule 97    while_statement -> WHILE condiciones codigo END_LOWER
Rule 98    condition_with_connectors -> condiciones conectores condiciones
Rule 99    method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR
Rule 100   method_call -> LOCAL_VAR LEFTPAR RIGHTPAR
Rule 101   print_statement -> PUT LEFTPAR values RIGHTPAR
Rule 102   boolean_expression -> expression GREATER expression
Rule 103   boolean_expression -> expression LESS expression
Rule 104   boolean_expression -> expression GREATER_EQUAL expression
Rule 105   boolean_expression -> expression LESS_EQUAL expression
Rule 106   boolean_expression -> expression EQUAL expression
Rule 107   boolean_expression -> expression NOT_EQUAL expression
Rule 108   boolean_expression -> boolean_value
Rule 109   boolean_value -> TRUE
Rule 110   boolean_value -> FALSE
Rule 111   expression -> INTEGER
Rule 112   expression -> FLOAT
Rule 113   expression -> variable
Rule 114   expression -> STRING
Rule 115   variable -> LOCAL_VAR
Rule 116   variable -> INSTANCE_VAR
Rule 117   variable -> CLASS_VAR
Rule 118   variable -> GLOBAL_VAR
Rule 119   variable -> CONSTANT
Rule 120   declaraciones -> variable_declaration
Rule 121   declaraciones -> store_conditional_result
Rule 122   declaraciones -> declare_data_structures
Rule 123   declaraciones -> var_arreglo
Rule 124   declaraciones -> hash_var
Rule 125   declaraciones -> LOCAL_VAR ASSIGN arithmetic_production
Rule 126   declaraciones -> declaracion_concatenar_string
Rule 127   declaraciones -> proc_assignment
Rule 128   expresion -> puts
Rule 129   expresion -> gets
Rule 130   expresion -> print_statement
Rule 131   comparador -> value EQUAL value
Rule 132   comparador -> value COMPARE value
Rule 133   range_expression -> value RANGEIN value
Rule 134   range_expression -> value RANGEEX value
Rule 135   range_expression -> LEFTPAR value RANGEIN value RIGHTPAR
Rule 136   range_expression -> LEFTPAR value RANGEEX value RIGHTPAR
Rule 137   set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
Rule 138   set_expression -> SET LEFT_COR values RIGHT_COR
Rule 139   set_operations -> set_expression
Rule 140   set_operations -> set_operations set_binary_operators set_expression
Rule 141   declare_data_structures -> LOCAL_VAR ASSIGN set_expression
Rule 142   set_binary_operators -> PLUS
Rule 143   set_binary_operators -> MINUS
Rule 144   set_binary_operators -> AMPERSAND
Rule 145   set_binary_operators -> PIPE
Rule 146   set_binary_operators -> CARET
Rule 147   unless_expression -> UNLESS boolean_expression THEN expresion END
Rule 148   unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END
Rule 149   arithmetic_production -> num
Rule 150   arithmetic_production -> LOCAL_VAR
Rule 151   arithmetic_production -> num arithmetic_operators arithmetic_production
Rule 152   arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production
Rule 153   arithmetic_operators -> PLUS
Rule 154   arithmetic_operators -> MINUS
Rule 155   arithmetic_operators -> MULTIPLY
Rule 156   arithmetic_operators -> DIVIDE
Rule 157   arithmetic_operators -> MODULO
Rule 158   arithmetic_operators -> EXPONENT
Rule 159   block_expression -> LBRACE expresion RBRACE
Rule 160   block_expression -> DO expresion END
Rule 161   block_expression -> DO expresion END_LOWER
Rule 162   block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
Rule 163   block_expression -> DO PIPE LOCAL_VAR PIPE expresion END
Rule 164   block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER
Rule 165   block_assignment -> method_call block_expression
Rule 166   proc_expression -> PROC DOT NEW block_expression
Rule 167   proc_assignment -> LOCAL_VAR ASSIGN proc_expression
Rule 168   proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
Rule 169   proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR
Rule 170   proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
Rule 171   proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR
Rule 172   proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR
Rule 173   proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR
Rule 174   expresion -> condition_with_connectors

Terminals, with rules where they appear

AMPERSAND            : 144
AND                  : 61
AND_RESERVED         : 63
ARRAY                : 52 53 54 55
ASSIGN               : 47 82 83 84 88 89 94 125 141 167
BACKSLASH            : 
BEGIN                : 
BIN_INTEGER          : 
BOOLEAN              : 
BREAK                : 
CALL                 : 168 170
CARET                : 146
CASE                 : 
CASE_EQUAL           : 
CHOMP                : 39 40 41
CLASS                : 
CLASS_VAR            : 35 117
COLON                : 
COMMA                : 32 55 86
COMPARE              : 75 132
CONSTANT             : 119
DEF                  : 
DEFINED              : 
DIVIDE               : 156
DIVIDE_ASSIGN        : 93
DO                   : 160 161 163 164
DOT                  : 39 39 40 40 41 53 54 55 77 137 166 168 169 170 171
DOUBLE_QUOTE         : 
ELSE                 : 76 148
ELSIF                : 
END                  : 147 148 160 163
END_LOWER            : 57 58 97 161 164
EQUAL                : 65 73 106 131
EXPONENT             : 158
EXPONENT_ASSIGN      : 
FALSE                : 110
FLOAT                : 37 112
FOR                  : 
GETS                 : 39 40 41
GLOBAL_VAR           : 36 118
GREATER              : 69 102
GREATER_EQUAL        : 71 104
HASH_ROCKET          : 85 86
HEX_INTEGER          : 
IF                   : 57 58
IN                   : 
INSTANCE_VAR         : 34 116
INTEGER              : 38 54 55 56 111
LBRACE               : 83 84 87 159 162
LEFTPAR              : 52 54 55 99 100 101 135 136 137 168 169 170 171
LEFT_COR             : 48 49 50 51 56 137 138 172 173
LESS                 : 70 103
LESS_EQUAL           : 72 105
LOCAL_VAR            : 33 47 77 79 80 81 81 82 83 84 89 90 91 92 93 94 99 100 115 125 141 150 152 162 163 164 167 168 169 170 171 172 173
MINUS                : 143 154
MINUS_ASSIGN         : 92
MODULE               : 
MODULO               : 157
MODULO_ASSIGN        : 
MULTIPLY             : 155
MULTIPLY_ASSIGN      : 91
NEW                  : 53 54 55 137 166
NEWLINE              : 
NIL                  : 27
NMAP                 : 
NOT                  : 
NOT_EQUAL            : 74 107
OCT_INTEGER          : 
OR                   : 62
OR_RESERVED          : 64
PERCENTW             : 50 51
PIPE                 : 145 162 162 163 163 164 164
PLUS                 : 78 79 80 81 142 153
PLUS_ASSIGN          : 90
PROC                 : 166
PUT                  : 42 101
QUOTATION            : 
RANGEEX              : 134 136
RANGEIN              : 133 135
RBRACE               : 83 84 87 159 162
REDO                 : 
RETURN               : 
RIGHTPAR             : 52 54 55 99 100 101 135 136 137 168 169 170 171
RIGHT_COR            : 48 49 50 51 56 137 138 172 173
SELF                 : 
SET                  : 137 138
SPACE                : 29
STRING               : 26 78 78 79 80 85 86 114
SYMBOL               : 28
TAB                  : 
THEN                 : 147 148
TO_F                 : 39
TO_I                 : 40
TO_S                 : 77
TRUE                 : 109
UNLESS               : 147 148
UNTIL                : 
WHEN                 : 
WHILE                : 97
error                : 

Nonterminals, with rules where they appear

acceder_arreglo      : 16
arithmetic_operators : 151 152
arithmetic_production : 125 151 152
array                : 15 47
array_creation       : 45
array_explicito      : 43 52
array_implicito      : 44
block_assignment     : 8
block_expression     : 165 166
boolean_expression   : 147 148
boolean_value        : 108
codigo               : 2 57 58 76 97 0
comparador           : 13
concatenar_string    : 82
condicion            : 59
condiciones          : 57 58 60 60 94 97 98 98
condition_with_connectors : 174
conectores           : 60 98
declaracion_concatenar_string : 126
declaraciones        : 10
declare_data_structures : 122
else_statement       : 58
estructurasControl   : 6
estructurasDatos     : 5
expresion            : 147 148 148 159 160 161 162 163 164
expression           : 11 102 102 103 103 104 104 105 105 106 106 107 107
gets                 : 4 129
hash_access          : 88
hash_operations      : 17
hash_values          : 83 86
hash_var             : 18 96 124
ifStatement          : 21
method_call          : 7 165
newArray             : 46
num                  : 24 66 66 67 68 149 151
operComp             : 66 67 68
print_statement      : 130
proc_assignment      : 127
proc_call            : 9
proc_expression      : 167
puts                 : 3 128
range_expression     : 14
sentencia            : 1 2
set_binary_operators : 140
set_expression       : 19 139 140 141
set_operations       : 20 140
store_conditional_result : 121
to_string            : 12
unless_expression    : 23
value                : 29 30 31 32 85 86 87 88 89 90 91 92 93 131 131 132 132 133 133 134 134 135 135 136 136
values               : 32 42 48 55 99 101 137 138 168 169 172
values_space         : 29 50
var                  : 25 67 68 87
var_arreglo          : 56 95 123
variable             : 113
variable_declaration : 120
while_statement      : 22

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    codigo                         shift and go to state 1
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 1

    (0) S' -> codigo .
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    sentencia                      shift and go to state 59
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 2

    (1) codigo -> sentencia .

    PUT             reduce using rule 1 (codigo -> sentencia .)
    GETS            reduce using rule 1 (codigo -> sentencia .)
    LOCAL_VAR       reduce using rule 1 (codigo -> sentencia .)
    INTEGER         reduce using rule 1 (codigo -> sentencia .)
    FLOAT           reduce using rule 1 (codigo -> sentencia .)
    STRING          reduce using rule 1 (codigo -> sentencia .)
    LEFTPAR         reduce using rule 1 (codigo -> sentencia .)
    SET             reduce using rule 1 (codigo -> sentencia .)
    IF              reduce using rule 1 (codigo -> sentencia .)
    WHILE           reduce using rule 1 (codigo -> sentencia .)
    UNLESS          reduce using rule 1 (codigo -> sentencia .)
    INSTANCE_VAR    reduce using rule 1 (codigo -> sentencia .)
    CLASS_VAR       reduce using rule 1 (codigo -> sentencia .)
    GLOBAL_VAR      reduce using rule 1 (codigo -> sentencia .)
    CONSTANT        reduce using rule 1 (codigo -> sentencia .)
    NIL             reduce using rule 1 (codigo -> sentencia .)
    SYMBOL          reduce using rule 1 (codigo -> sentencia .)
    LEFT_COR        reduce using rule 1 (codigo -> sentencia .)
    PERCENTW        reduce using rule 1 (codigo -> sentencia .)
    ARRAY           reduce using rule 1 (codigo -> sentencia .)
    $end            reduce using rule 1 (codigo -> sentencia .)
    END_LOWER       reduce using rule 1 (codigo -> sentencia .)
    ELSE            reduce using rule 1 (codigo -> sentencia .)


state 3

    (3) sentencia -> puts .

    PUT             reduce using rule 3 (sentencia -> puts .)
    GETS            reduce using rule 3 (sentencia -> puts .)
    LOCAL_VAR       reduce using rule 3 (sentencia -> puts .)
    INTEGER         reduce using rule 3 (sentencia -> puts .)
    FLOAT           reduce using rule 3 (sentencia -> puts .)
    STRING          reduce using rule 3 (sentencia -> puts .)
    LEFTPAR         reduce using rule 3 (sentencia -> puts .)
    SET             reduce using rule 3 (sentencia -> puts .)
    IF              reduce using rule 3 (sentencia -> puts .)
    WHILE           reduce using rule 3 (sentencia -> puts .)
    UNLESS          reduce using rule 3 (sentencia -> puts .)
    INSTANCE_VAR    reduce using rule 3 (sentencia -> puts .)
    CLASS_VAR       reduce using rule 3 (sentencia -> puts .)
    GLOBAL_VAR      reduce using rule 3 (sentencia -> puts .)
    CONSTANT        reduce using rule 3 (sentencia -> puts .)
    NIL             reduce using rule 3 (sentencia -> puts .)
    SYMBOL          reduce using rule 3 (sentencia -> puts .)
    LEFT_COR        reduce using rule 3 (sentencia -> puts .)
    PERCENTW        reduce using rule 3 (sentencia -> puts .)
    ARRAY           reduce using rule 3 (sentencia -> puts .)
    $end            reduce using rule 3 (sentencia -> puts .)
    END_LOWER       reduce using rule 3 (sentencia -> puts .)
    ELSE            reduce using rule 3 (sentencia -> puts .)


state 4

    (4) sentencia -> gets .

    PUT             reduce using rule 4 (sentencia -> gets .)
    GETS            reduce using rule 4 (sentencia -> gets .)
    LOCAL_VAR       reduce using rule 4 (sentencia -> gets .)
    INTEGER         reduce using rule 4 (sentencia -> gets .)
    FLOAT           reduce using rule 4 (sentencia -> gets .)
    STRING          reduce using rule 4 (sentencia -> gets .)
    LEFTPAR         reduce using rule 4 (sentencia -> gets .)
    SET             reduce using rule 4 (sentencia -> gets .)
    IF              reduce using rule 4 (sentencia -> gets .)
    WHILE           reduce using rule 4 (sentencia -> gets .)
    UNLESS          reduce using rule 4 (sentencia -> gets .)
    INSTANCE_VAR    reduce using rule 4 (sentencia -> gets .)
    CLASS_VAR       reduce using rule 4 (sentencia -> gets .)
    GLOBAL_VAR      reduce using rule 4 (sentencia -> gets .)
    CONSTANT        reduce using rule 4 (sentencia -> gets .)
    NIL             reduce using rule 4 (sentencia -> gets .)
    SYMBOL          reduce using rule 4 (sentencia -> gets .)
    LEFT_COR        reduce using rule 4 (sentencia -> gets .)
    PERCENTW        reduce using rule 4 (sentencia -> gets .)
    ARRAY           reduce using rule 4 (sentencia -> gets .)
    $end            reduce using rule 4 (sentencia -> gets .)
    END_LOWER       reduce using rule 4 (sentencia -> gets .)
    ELSE            reduce using rule 4 (sentencia -> gets .)


state 5

    (5) sentencia -> estructurasDatos .

    PUT             reduce using rule 5 (sentencia -> estructurasDatos .)
    GETS            reduce using rule 5 (sentencia -> estructurasDatos .)
    LOCAL_VAR       reduce using rule 5 (sentencia -> estructurasDatos .)
    INTEGER         reduce using rule 5 (sentencia -> estructurasDatos .)
    FLOAT           reduce using rule 5 (sentencia -> estructurasDatos .)
    STRING          reduce using rule 5 (sentencia -> estructurasDatos .)
    LEFTPAR         reduce using rule 5 (sentencia -> estructurasDatos .)
    SET             reduce using rule 5 (sentencia -> estructurasDatos .)
    IF              reduce using rule 5 (sentencia -> estructurasDatos .)
    WHILE           reduce using rule 5 (sentencia -> estructurasDatos .)
    UNLESS          reduce using rule 5 (sentencia -> estructurasDatos .)
    INSTANCE_VAR    reduce using rule 5 (sentencia -> estructurasDatos .)
    CLASS_VAR       reduce using rule 5 (sentencia -> estructurasDatos .)
    GLOBAL_VAR      reduce using rule 5 (sentencia -> estructurasDatos .)
    CONSTANT        reduce using rule 5 (sentencia -> estructurasDatos .)
    NIL             reduce using rule 5 (sentencia -> estructurasDatos .)
    SYMBOL          reduce using rule 5 (sentencia -> estructurasDatos .)
    LEFT_COR        reduce using rule 5 (sentencia -> estructurasDatos .)
    PERCENTW        reduce using rule 5 (sentencia -> estructurasDatos .)
    ARRAY           reduce using rule 5 (sentencia -> estructurasDatos .)
    $end            reduce using rule 5 (sentencia -> estructurasDatos .)
    END_LOWER       reduce using rule 5 (sentencia -> estructurasDatos .)
    ELSE            reduce using rule 5 (sentencia -> estructurasDatos .)


state 6

    (6) sentencia -> estructurasControl .

    PUT             reduce using rule 6 (sentencia -> estructurasControl .)
    GETS            reduce using rule 6 (sentencia -> estructurasControl .)
    LOCAL_VAR       reduce using rule 6 (sentencia -> estructurasControl .)
    INTEGER         reduce using rule 6 (sentencia -> estructurasControl .)
    FLOAT           reduce using rule 6 (sentencia -> estructurasControl .)
    STRING          reduce using rule 6 (sentencia -> estructurasControl .)
    LEFTPAR         reduce using rule 6 (sentencia -> estructurasControl .)
    SET             reduce using rule 6 (sentencia -> estructurasControl .)
    IF              reduce using rule 6 (sentencia -> estructurasControl .)
    WHILE           reduce using rule 6 (sentencia -> estructurasControl .)
    UNLESS          reduce using rule 6 (sentencia -> estructurasControl .)
    INSTANCE_VAR    reduce using rule 6 (sentencia -> estructurasControl .)
    CLASS_VAR       reduce using rule 6 (sentencia -> estructurasControl .)
    GLOBAL_VAR      reduce using rule 6 (sentencia -> estructurasControl .)
    CONSTANT        reduce using rule 6 (sentencia -> estructurasControl .)
    NIL             reduce using rule 6 (sentencia -> estructurasControl .)
    SYMBOL          reduce using rule 6 (sentencia -> estructurasControl .)
    LEFT_COR        reduce using rule 6 (sentencia -> estructurasControl .)
    PERCENTW        reduce using rule 6 (sentencia -> estructurasControl .)
    ARRAY           reduce using rule 6 (sentencia -> estructurasControl .)
    $end            reduce using rule 6 (sentencia -> estructurasControl .)
    END_LOWER       reduce using rule 6 (sentencia -> estructurasControl .)
    ELSE            reduce using rule 6 (sentencia -> estructurasControl .)


state 7

    (7) sentencia -> method_call .
    (165) block_assignment -> method_call . block_expression
    (159) block_expression -> . LBRACE expresion RBRACE
    (160) block_expression -> . DO expresion END
    (161) block_expression -> . DO expresion END_LOWER
    (162) block_expression -> . LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
    (163) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END
    (164) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END_LOWER

    PUT             reduce using rule 7 (sentencia -> method_call .)
    GETS            reduce using rule 7 (sentencia -> method_call .)
    LOCAL_VAR       reduce using rule 7 (sentencia -> method_call .)
    INTEGER         reduce using rule 7 (sentencia -> method_call .)
    FLOAT           reduce using rule 7 (sentencia -> method_call .)
    STRING          reduce using rule 7 (sentencia -> method_call .)
    LEFTPAR         reduce using rule 7 (sentencia -> method_call .)
    SET             reduce using rule 7 (sentencia -> method_call .)
    IF              reduce using rule 7 (sentencia -> method_call .)
    WHILE           reduce using rule 7 (sentencia -> method_call .)
    UNLESS          reduce using rule 7 (sentencia -> method_call .)
    INSTANCE_VAR    reduce using rule 7 (sentencia -> method_call .)
    CLASS_VAR       reduce using rule 7 (sentencia -> method_call .)
    GLOBAL_VAR      reduce using rule 7 (sentencia -> method_call .)
    CONSTANT        reduce using rule 7 (sentencia -> method_call .)
    NIL             reduce using rule 7 (sentencia -> method_call .)
    SYMBOL          reduce using rule 7 (sentencia -> method_call .)
    LEFT_COR        reduce using rule 7 (sentencia -> method_call .)
    PERCENTW        reduce using rule 7 (sentencia -> method_call .)
    ARRAY           reduce using rule 7 (sentencia -> method_call .)
    $end            reduce using rule 7 (sentencia -> method_call .)
    END_LOWER       reduce using rule 7 (sentencia -> method_call .)
    ELSE            reduce using rule 7 (sentencia -> method_call .)
    LBRACE          shift and go to state 61
    DO              shift and go to state 62

    block_expression               shift and go to state 60

state 8

    (8) sentencia -> block_assignment .

    PUT             reduce using rule 8 (sentencia -> block_assignment .)
    GETS            reduce using rule 8 (sentencia -> block_assignment .)
    LOCAL_VAR       reduce using rule 8 (sentencia -> block_assignment .)
    INTEGER         reduce using rule 8 (sentencia -> block_assignment .)
    FLOAT           reduce using rule 8 (sentencia -> block_assignment .)
    STRING          reduce using rule 8 (sentencia -> block_assignment .)
    LEFTPAR         reduce using rule 8 (sentencia -> block_assignment .)
    SET             reduce using rule 8 (sentencia -> block_assignment .)
    IF              reduce using rule 8 (sentencia -> block_assignment .)
    WHILE           reduce using rule 8 (sentencia -> block_assignment .)
    UNLESS          reduce using rule 8 (sentencia -> block_assignment .)
    INSTANCE_VAR    reduce using rule 8 (sentencia -> block_assignment .)
    CLASS_VAR       reduce using rule 8 (sentencia -> block_assignment .)
    GLOBAL_VAR      reduce using rule 8 (sentencia -> block_assignment .)
    CONSTANT        reduce using rule 8 (sentencia -> block_assignment .)
    NIL             reduce using rule 8 (sentencia -> block_assignment .)
    SYMBOL          reduce using rule 8 (sentencia -> block_assignment .)
    LEFT_COR        reduce using rule 8 (sentencia -> block_assignment .)
    PERCENTW        reduce using rule 8 (sentencia -> block_assignment .)
    ARRAY           reduce using rule 8 (sentencia -> block_assignment .)
    $end            reduce using rule 8 (sentencia -> block_assignment .)
    END_LOWER       reduce using rule 8 (sentencia -> block_assignment .)
    ELSE            reduce using rule 8 (sentencia -> block_assignment .)


state 9

    (9) sentencia -> proc_call .

    PUT             reduce using rule 9 (sentencia -> proc_call .)
    GETS            reduce using rule 9 (sentencia -> proc_call .)
    LOCAL_VAR       reduce using rule 9 (sentencia -> proc_call .)
    INTEGER         reduce using rule 9 (sentencia -> proc_call .)
    FLOAT           reduce using rule 9 (sentencia -> proc_call .)
    STRING          reduce using rule 9 (sentencia -> proc_call .)
    LEFTPAR         reduce using rule 9 (sentencia -> proc_call .)
    SET             reduce using rule 9 (sentencia -> proc_call .)
    IF              reduce using rule 9 (sentencia -> proc_call .)
    WHILE           reduce using rule 9 (sentencia -> proc_call .)
    UNLESS          reduce using rule 9 (sentencia -> proc_call .)
    INSTANCE_VAR    reduce using rule 9 (sentencia -> proc_call .)
    CLASS_VAR       reduce using rule 9 (sentencia -> proc_call .)
    GLOBAL_VAR      reduce using rule 9 (sentencia -> proc_call .)
    CONSTANT        reduce using rule 9 (sentencia -> proc_call .)
    NIL             reduce using rule 9 (sentencia -> proc_call .)
    SYMBOL          reduce using rule 9 (sentencia -> proc_call .)
    LEFT_COR        reduce using rule 9 (sentencia -> proc_call .)
    PERCENTW        reduce using rule 9 (sentencia -> proc_call .)
    ARRAY           reduce using rule 9 (sentencia -> proc_call .)
    $end            reduce using rule 9 (sentencia -> proc_call .)
    END_LOWER       reduce using rule 9 (sentencia -> proc_call .)
    ELSE            reduce using rule 9 (sentencia -> proc_call .)


state 10

    (10) sentencia -> declaraciones .

    PUT             reduce using rule 10 (sentencia -> declaraciones .)
    GETS            reduce using rule 10 (sentencia -> declaraciones .)
    LOCAL_VAR       reduce using rule 10 (sentencia -> declaraciones .)
    INTEGER         reduce using rule 10 (sentencia -> declaraciones .)
    FLOAT           reduce using rule 10 (sentencia -> declaraciones .)
    STRING          reduce using rule 10 (sentencia -> declaraciones .)
    LEFTPAR         reduce using rule 10 (sentencia -> declaraciones .)
    SET             reduce using rule 10 (sentencia -> declaraciones .)
    IF              reduce using rule 10 (sentencia -> declaraciones .)
    WHILE           reduce using rule 10 (sentencia -> declaraciones .)
    UNLESS          reduce using rule 10 (sentencia -> declaraciones .)
    INSTANCE_VAR    reduce using rule 10 (sentencia -> declaraciones .)
    CLASS_VAR       reduce using rule 10 (sentencia -> declaraciones .)
    GLOBAL_VAR      reduce using rule 10 (sentencia -> declaraciones .)
    CONSTANT        reduce using rule 10 (sentencia -> declaraciones .)
    NIL             reduce using rule 10 (sentencia -> declaraciones .)
    SYMBOL          reduce using rule 10 (sentencia -> declaraciones .)
    LEFT_COR        reduce using rule 10 (sentencia -> declaraciones .)
    PERCENTW        reduce using rule 10 (sentencia -> declaraciones .)
    ARRAY           reduce using rule 10 (sentencia -> declaraciones .)
    $end            reduce using rule 10 (sentencia -> declaraciones .)
    END_LOWER       reduce using rule 10 (sentencia -> declaraciones .)
    ELSE            reduce using rule 10 (sentencia -> declaraciones .)


state 11

    (11) sentencia -> expression .

    PUT             reduce using rule 11 (sentencia -> expression .)
    GETS            reduce using rule 11 (sentencia -> expression .)
    LOCAL_VAR       reduce using rule 11 (sentencia -> expression .)
    INTEGER         reduce using rule 11 (sentencia -> expression .)
    FLOAT           reduce using rule 11 (sentencia -> expression .)
    STRING          reduce using rule 11 (sentencia -> expression .)
    LEFTPAR         reduce using rule 11 (sentencia -> expression .)
    SET             reduce using rule 11 (sentencia -> expression .)
    IF              reduce using rule 11 (sentencia -> expression .)
    WHILE           reduce using rule 11 (sentencia -> expression .)
    UNLESS          reduce using rule 11 (sentencia -> expression .)
    INSTANCE_VAR    reduce using rule 11 (sentencia -> expression .)
    CLASS_VAR       reduce using rule 11 (sentencia -> expression .)
    GLOBAL_VAR      reduce using rule 11 (sentencia -> expression .)
    CONSTANT        reduce using rule 11 (sentencia -> expression .)
    NIL             reduce using rule 11 (sentencia -> expression .)
    SYMBOL          reduce using rule 11 (sentencia -> expression .)
    LEFT_COR        reduce using rule 11 (sentencia -> expression .)
    PERCENTW        reduce using rule 11 (sentencia -> expression .)
    ARRAY           reduce using rule 11 (sentencia -> expression .)
    $end            reduce using rule 11 (sentencia -> expression .)
    END_LOWER       reduce using rule 11 (sentencia -> expression .)
    ELSE            reduce using rule 11 (sentencia -> expression .)


state 12

    (12) sentencia -> to_string .

    PUT             reduce using rule 12 (sentencia -> to_string .)
    GETS            reduce using rule 12 (sentencia -> to_string .)
    LOCAL_VAR       reduce using rule 12 (sentencia -> to_string .)
    INTEGER         reduce using rule 12 (sentencia -> to_string .)
    FLOAT           reduce using rule 12 (sentencia -> to_string .)
    STRING          reduce using rule 12 (sentencia -> to_string .)
    LEFTPAR         reduce using rule 12 (sentencia -> to_string .)
    SET             reduce using rule 12 (sentencia -> to_string .)
    IF              reduce using rule 12 (sentencia -> to_string .)
    WHILE           reduce using rule 12 (sentencia -> to_string .)
    UNLESS          reduce using rule 12 (sentencia -> to_string .)
    INSTANCE_VAR    reduce using rule 12 (sentencia -> to_string .)
    CLASS_VAR       reduce using rule 12 (sentencia -> to_string .)
    GLOBAL_VAR      reduce using rule 12 (sentencia -> to_string .)
    CONSTANT        reduce using rule 12 (sentencia -> to_string .)
    NIL             reduce using rule 12 (sentencia -> to_string .)
    SYMBOL          reduce using rule 12 (sentencia -> to_string .)
    LEFT_COR        reduce using rule 12 (sentencia -> to_string .)
    PERCENTW        reduce using rule 12 (sentencia -> to_string .)
    ARRAY           reduce using rule 12 (sentencia -> to_string .)
    $end            reduce using rule 12 (sentencia -> to_string .)
    END_LOWER       reduce using rule 12 (sentencia -> to_string .)
    ELSE            reduce using rule 12 (sentencia -> to_string .)


state 13

    (13) sentencia -> comparador .

    PUT             reduce using rule 13 (sentencia -> comparador .)
    GETS            reduce using rule 13 (sentencia -> comparador .)
    LOCAL_VAR       reduce using rule 13 (sentencia -> comparador .)
    INTEGER         reduce using rule 13 (sentencia -> comparador .)
    FLOAT           reduce using rule 13 (sentencia -> comparador .)
    STRING          reduce using rule 13 (sentencia -> comparador .)
    LEFTPAR         reduce using rule 13 (sentencia -> comparador .)
    SET             reduce using rule 13 (sentencia -> comparador .)
    IF              reduce using rule 13 (sentencia -> comparador .)
    WHILE           reduce using rule 13 (sentencia -> comparador .)
    UNLESS          reduce using rule 13 (sentencia -> comparador .)
    INSTANCE_VAR    reduce using rule 13 (sentencia -> comparador .)
    CLASS_VAR       reduce using rule 13 (sentencia -> comparador .)
    GLOBAL_VAR      reduce using rule 13 (sentencia -> comparador .)
    CONSTANT        reduce using rule 13 (sentencia -> comparador .)
    NIL             reduce using rule 13 (sentencia -> comparador .)
    SYMBOL          reduce using rule 13 (sentencia -> comparador .)
    LEFT_COR        reduce using rule 13 (sentencia -> comparador .)
    PERCENTW        reduce using rule 13 (sentencia -> comparador .)
    ARRAY           reduce using rule 13 (sentencia -> comparador .)
    $end            reduce using rule 13 (sentencia -> comparador .)
    END_LOWER       reduce using rule 13 (sentencia -> comparador .)
    ELSE            reduce using rule 13 (sentencia -> comparador .)


state 14

    (14) sentencia -> range_expression .

    PUT             reduce using rule 14 (sentencia -> range_expression .)
    GETS            reduce using rule 14 (sentencia -> range_expression .)
    LOCAL_VAR       reduce using rule 14 (sentencia -> range_expression .)
    INTEGER         reduce using rule 14 (sentencia -> range_expression .)
    FLOAT           reduce using rule 14 (sentencia -> range_expression .)
    STRING          reduce using rule 14 (sentencia -> range_expression .)
    LEFTPAR         reduce using rule 14 (sentencia -> range_expression .)
    SET             reduce using rule 14 (sentencia -> range_expression .)
    IF              reduce using rule 14 (sentencia -> range_expression .)
    WHILE           reduce using rule 14 (sentencia -> range_expression .)
    UNLESS          reduce using rule 14 (sentencia -> range_expression .)
    INSTANCE_VAR    reduce using rule 14 (sentencia -> range_expression .)
    CLASS_VAR       reduce using rule 14 (sentencia -> range_expression .)
    GLOBAL_VAR      reduce using rule 14 (sentencia -> range_expression .)
    CONSTANT        reduce using rule 14 (sentencia -> range_expression .)
    NIL             reduce using rule 14 (sentencia -> range_expression .)
    SYMBOL          reduce using rule 14 (sentencia -> range_expression .)
    LEFT_COR        reduce using rule 14 (sentencia -> range_expression .)
    PERCENTW        reduce using rule 14 (sentencia -> range_expression .)
    ARRAY           reduce using rule 14 (sentencia -> range_expression .)
    $end            reduce using rule 14 (sentencia -> range_expression .)
    END_LOWER       reduce using rule 14 (sentencia -> range_expression .)
    ELSE            reduce using rule 14 (sentencia -> range_expression .)


state 15

    (42) puts -> PUT . values
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 63
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 16

    (39) gets -> GETS . DOT CHOMP DOT TO_F
    (40) gets -> GETS . DOT CHOMP DOT TO_I
    (41) gets -> GETS . DOT CHOMP

    DOT             shift and go to state 73


state 17

    (15) estructurasDatos -> array .

    PUT             reduce using rule 15 (estructurasDatos -> array .)
    GETS            reduce using rule 15 (estructurasDatos -> array .)
    LOCAL_VAR       reduce using rule 15 (estructurasDatos -> array .)
    INTEGER         reduce using rule 15 (estructurasDatos -> array .)
    FLOAT           reduce using rule 15 (estructurasDatos -> array .)
    STRING          reduce using rule 15 (estructurasDatos -> array .)
    LEFTPAR         reduce using rule 15 (estructurasDatos -> array .)
    SET             reduce using rule 15 (estructurasDatos -> array .)
    IF              reduce using rule 15 (estructurasDatos -> array .)
    WHILE           reduce using rule 15 (estructurasDatos -> array .)
    UNLESS          reduce using rule 15 (estructurasDatos -> array .)
    INSTANCE_VAR    reduce using rule 15 (estructurasDatos -> array .)
    CLASS_VAR       reduce using rule 15 (estructurasDatos -> array .)
    GLOBAL_VAR      reduce using rule 15 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 15 (estructurasDatos -> array .)
    NIL             reduce using rule 15 (estructurasDatos -> array .)
    SYMBOL          reduce using rule 15 (estructurasDatos -> array .)
    LEFT_COR        reduce using rule 15 (estructurasDatos -> array .)
    PERCENTW        reduce using rule 15 (estructurasDatos -> array .)
    ARRAY           reduce using rule 15 (estructurasDatos -> array .)
    $end            reduce using rule 15 (estructurasDatos -> array .)
    END_LOWER       reduce using rule 15 (estructurasDatos -> array .)
    ELSE            reduce using rule 15 (estructurasDatos -> array .)


state 18

    (16) estructurasDatos -> acceder_arreglo .

    PUT             reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    GETS            reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    LOCAL_VAR       reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    INTEGER         reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    FLOAT           reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    STRING          reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    LEFTPAR         reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    SET             reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    IF              reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    WHILE           reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    UNLESS          reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    INSTANCE_VAR    reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    CLASS_VAR       reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    GLOBAL_VAR      reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    CONSTANT        reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    NIL             reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    SYMBOL          reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    LEFT_COR        reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    PERCENTW        reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    ARRAY           reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    $end            reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    END_LOWER       reduce using rule 16 (estructurasDatos -> acceder_arreglo .)
    ELSE            reduce using rule 16 (estructurasDatos -> acceder_arreglo .)


state 19

    (17) estructurasDatos -> hash_operations .

    PUT             reduce using rule 17 (estructurasDatos -> hash_operations .)
    GETS            reduce using rule 17 (estructurasDatos -> hash_operations .)
    LOCAL_VAR       reduce using rule 17 (estructurasDatos -> hash_operations .)
    INTEGER         reduce using rule 17 (estructurasDatos -> hash_operations .)
    FLOAT           reduce using rule 17 (estructurasDatos -> hash_operations .)
    STRING          reduce using rule 17 (estructurasDatos -> hash_operations .)
    LEFTPAR         reduce using rule 17 (estructurasDatos -> hash_operations .)
    SET             reduce using rule 17 (estructurasDatos -> hash_operations .)
    IF              reduce using rule 17 (estructurasDatos -> hash_operations .)
    WHILE           reduce using rule 17 (estructurasDatos -> hash_operations .)
    UNLESS          reduce using rule 17 (estructurasDatos -> hash_operations .)
    INSTANCE_VAR    reduce using rule 17 (estructurasDatos -> hash_operations .)
    CLASS_VAR       reduce using rule 17 (estructurasDatos -> hash_operations .)
    GLOBAL_VAR      reduce using rule 17 (estructurasDatos -> hash_operations .)
    CONSTANT        reduce using rule 17 (estructurasDatos -> hash_operations .)
    NIL             reduce using rule 17 (estructurasDatos -> hash_operations .)
    SYMBOL          reduce using rule 17 (estructurasDatos -> hash_operations .)
    LEFT_COR        reduce using rule 17 (estructurasDatos -> hash_operations .)
    PERCENTW        reduce using rule 17 (estructurasDatos -> hash_operations .)
    ARRAY           reduce using rule 17 (estructurasDatos -> hash_operations .)
    $end            reduce using rule 17 (estructurasDatos -> hash_operations .)
    END_LOWER       reduce using rule 17 (estructurasDatos -> hash_operations .)
    ELSE            reduce using rule 17 (estructurasDatos -> hash_operations .)


state 20

    (18) estructurasDatos -> hash_var .
    (124) declaraciones -> hash_var .
    (96) declare_data_structures -> hash_var .

  ! reduce/reduce conflict for PUT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GETS resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INTEGER resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for FLOAT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SET resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for IF resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for UNLESS resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NIL resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ARRAY resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for $end resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ELSE resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PUT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GETS resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INTEGER resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for FLOAT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SET resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for IF resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for UNLESS resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NIL resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ARRAY resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for $end resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 18 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ELSE resolved using rule 18 (estructurasDatos -> hash_var .)
    PUT             reduce using rule 18 (estructurasDatos -> hash_var .)
    GETS            reduce using rule 18 (estructurasDatos -> hash_var .)
    LOCAL_VAR       reduce using rule 18 (estructurasDatos -> hash_var .)
    INTEGER         reduce using rule 18 (estructurasDatos -> hash_var .)
    FLOAT           reduce using rule 18 (estructurasDatos -> hash_var .)
    STRING          reduce using rule 18 (estructurasDatos -> hash_var .)
    LEFTPAR         reduce using rule 18 (estructurasDatos -> hash_var .)
    SET             reduce using rule 18 (estructurasDatos -> hash_var .)
    IF              reduce using rule 18 (estructurasDatos -> hash_var .)
    WHILE           reduce using rule 18 (estructurasDatos -> hash_var .)
    UNLESS          reduce using rule 18 (estructurasDatos -> hash_var .)
    INSTANCE_VAR    reduce using rule 18 (estructurasDatos -> hash_var .)
    CLASS_VAR       reduce using rule 18 (estructurasDatos -> hash_var .)
    GLOBAL_VAR      reduce using rule 18 (estructurasDatos -> hash_var .)
    CONSTANT        reduce using rule 18 (estructurasDatos -> hash_var .)
    NIL             reduce using rule 18 (estructurasDatos -> hash_var .)
    SYMBOL          reduce using rule 18 (estructurasDatos -> hash_var .)
    LEFT_COR        reduce using rule 18 (estructurasDatos -> hash_var .)
    PERCENTW        reduce using rule 18 (estructurasDatos -> hash_var .)
    ARRAY           reduce using rule 18 (estructurasDatos -> hash_var .)
    $end            reduce using rule 18 (estructurasDatos -> hash_var .)
    END_LOWER       reduce using rule 18 (estructurasDatos -> hash_var .)
    ELSE            reduce using rule 18 (estructurasDatos -> hash_var .)

  ! PUT             [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! GETS            [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! LOCAL_VAR       [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! INTEGER         [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! FLOAT           [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! STRING          [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! LEFTPAR         [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! SET             [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! IF              [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! WHILE           [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! UNLESS          [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! INSTANCE_VAR    [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! CLASS_VAR       [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! GLOBAL_VAR      [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! CONSTANT        [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! NIL             [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! SYMBOL          [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! LEFT_COR        [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! PERCENTW        [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! ARRAY           [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! $end            [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! END_LOWER       [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! ELSE            [ reduce using rule 124 (declaraciones -> hash_var .) ]
  ! PUT             [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! GETS            [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! LOCAL_VAR       [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! INTEGER         [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! FLOAT           [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! STRING          [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! LEFTPAR         [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! SET             [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! IF              [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! WHILE           [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! UNLESS          [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! INSTANCE_VAR    [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! CLASS_VAR       [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! GLOBAL_VAR      [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! CONSTANT        [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! NIL             [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! SYMBOL          [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! LEFT_COR        [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! PERCENTW        [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! ARRAY           [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! $end            [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! END_LOWER       [ reduce using rule 96 (declare_data_structures -> hash_var .) ]
  ! ELSE            [ reduce using rule 96 (declare_data_structures -> hash_var .) ]


state 21

    (19) estructurasDatos -> set_expression .
    (139) set_operations -> set_expression .

  ! reduce/reduce conflict for PUT resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for GETS resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for STRING resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for SET resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for IF resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for UNLESS resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for NIL resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for $end resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 19 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 19 (estructurasDatos -> set_expression .)
    PUT             reduce using rule 19 (estructurasDatos -> set_expression .)
    GETS            reduce using rule 19 (estructurasDatos -> set_expression .)
    LOCAL_VAR       reduce using rule 19 (estructurasDatos -> set_expression .)
    INTEGER         reduce using rule 19 (estructurasDatos -> set_expression .)
    FLOAT           reduce using rule 19 (estructurasDatos -> set_expression .)
    STRING          reduce using rule 19 (estructurasDatos -> set_expression .)
    LEFTPAR         reduce using rule 19 (estructurasDatos -> set_expression .)
    SET             reduce using rule 19 (estructurasDatos -> set_expression .)
    IF              reduce using rule 19 (estructurasDatos -> set_expression .)
    WHILE           reduce using rule 19 (estructurasDatos -> set_expression .)
    UNLESS          reduce using rule 19 (estructurasDatos -> set_expression .)
    INSTANCE_VAR    reduce using rule 19 (estructurasDatos -> set_expression .)
    CLASS_VAR       reduce using rule 19 (estructurasDatos -> set_expression .)
    GLOBAL_VAR      reduce using rule 19 (estructurasDatos -> set_expression .)
    CONSTANT        reduce using rule 19 (estructurasDatos -> set_expression .)
    NIL             reduce using rule 19 (estructurasDatos -> set_expression .)
    SYMBOL          reduce using rule 19 (estructurasDatos -> set_expression .)
    LEFT_COR        reduce using rule 19 (estructurasDatos -> set_expression .)
    PERCENTW        reduce using rule 19 (estructurasDatos -> set_expression .)
    ARRAY           reduce using rule 19 (estructurasDatos -> set_expression .)
    $end            reduce using rule 19 (estructurasDatos -> set_expression .)
    END_LOWER       reduce using rule 19 (estructurasDatos -> set_expression .)
    ELSE            reduce using rule 19 (estructurasDatos -> set_expression .)
    PLUS            reduce using rule 139 (set_operations -> set_expression .)
    MINUS           reduce using rule 139 (set_operations -> set_expression .)
    AMPERSAND       reduce using rule 139 (set_operations -> set_expression .)
    PIPE            reduce using rule 139 (set_operations -> set_expression .)
    CARET           reduce using rule 139 (set_operations -> set_expression .)

  ! PUT             [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! GETS            [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! LOCAL_VAR       [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! INTEGER         [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! FLOAT           [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! STRING          [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! LEFTPAR         [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! SET             [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! IF              [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! WHILE           [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! UNLESS          [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! INSTANCE_VAR    [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! CLASS_VAR       [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! GLOBAL_VAR      [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! CONSTANT        [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! NIL             [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! SYMBOL          [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! LEFT_COR        [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! PERCENTW        [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! ARRAY           [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! $end            [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! END_LOWER       [ reduce using rule 139 (set_operations -> set_expression .) ]
  ! ELSE            [ reduce using rule 139 (set_operations -> set_expression .) ]


state 22

    (20) estructurasDatos -> set_operations .
    (140) set_operations -> set_operations . set_binary_operators set_expression
    (142) set_binary_operators -> . PLUS
    (143) set_binary_operators -> . MINUS
    (144) set_binary_operators -> . AMPERSAND
    (145) set_binary_operators -> . PIPE
    (146) set_binary_operators -> . CARET

    PUT             reduce using rule 20 (estructurasDatos -> set_operations .)
    GETS            reduce using rule 20 (estructurasDatos -> set_operations .)
    LOCAL_VAR       reduce using rule 20 (estructurasDatos -> set_operations .)
    INTEGER         reduce using rule 20 (estructurasDatos -> set_operations .)
    FLOAT           reduce using rule 20 (estructurasDatos -> set_operations .)
    STRING          reduce using rule 20 (estructurasDatos -> set_operations .)
    LEFTPAR         reduce using rule 20 (estructurasDatos -> set_operations .)
    SET             reduce using rule 20 (estructurasDatos -> set_operations .)
    IF              reduce using rule 20 (estructurasDatos -> set_operations .)
    WHILE           reduce using rule 20 (estructurasDatos -> set_operations .)
    UNLESS          reduce using rule 20 (estructurasDatos -> set_operations .)
    INSTANCE_VAR    reduce using rule 20 (estructurasDatos -> set_operations .)
    CLASS_VAR       reduce using rule 20 (estructurasDatos -> set_operations .)
    GLOBAL_VAR      reduce using rule 20 (estructurasDatos -> set_operations .)
    CONSTANT        reduce using rule 20 (estructurasDatos -> set_operations .)
    NIL             reduce using rule 20 (estructurasDatos -> set_operations .)
    SYMBOL          reduce using rule 20 (estructurasDatos -> set_operations .)
    LEFT_COR        reduce using rule 20 (estructurasDatos -> set_operations .)
    PERCENTW        reduce using rule 20 (estructurasDatos -> set_operations .)
    ARRAY           reduce using rule 20 (estructurasDatos -> set_operations .)
    $end            reduce using rule 20 (estructurasDatos -> set_operations .)
    END_LOWER       reduce using rule 20 (estructurasDatos -> set_operations .)
    ELSE            reduce using rule 20 (estructurasDatos -> set_operations .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    AMPERSAND       shift and go to state 77
    PIPE            shift and go to state 78
    CARET           shift and go to state 79

    set_binary_operators           shift and go to state 74

state 23

    (21) estructurasControl -> ifStatement .

    PUT             reduce using rule 21 (estructurasControl -> ifStatement .)
    GETS            reduce using rule 21 (estructurasControl -> ifStatement .)
    LOCAL_VAR       reduce using rule 21 (estructurasControl -> ifStatement .)
    INTEGER         reduce using rule 21 (estructurasControl -> ifStatement .)
    FLOAT           reduce using rule 21 (estructurasControl -> ifStatement .)
    STRING          reduce using rule 21 (estructurasControl -> ifStatement .)
    LEFTPAR         reduce using rule 21 (estructurasControl -> ifStatement .)
    SET             reduce using rule 21 (estructurasControl -> ifStatement .)
    IF              reduce using rule 21 (estructurasControl -> ifStatement .)
    WHILE           reduce using rule 21 (estructurasControl -> ifStatement .)
    UNLESS          reduce using rule 21 (estructurasControl -> ifStatement .)
    INSTANCE_VAR    reduce using rule 21 (estructurasControl -> ifStatement .)
    CLASS_VAR       reduce using rule 21 (estructurasControl -> ifStatement .)
    GLOBAL_VAR      reduce using rule 21 (estructurasControl -> ifStatement .)
    CONSTANT        reduce using rule 21 (estructurasControl -> ifStatement .)
    NIL             reduce using rule 21 (estructurasControl -> ifStatement .)
    SYMBOL          reduce using rule 21 (estructurasControl -> ifStatement .)
    LEFT_COR        reduce using rule 21 (estructurasControl -> ifStatement .)
    PERCENTW        reduce using rule 21 (estructurasControl -> ifStatement .)
    ARRAY           reduce using rule 21 (estructurasControl -> ifStatement .)
    $end            reduce using rule 21 (estructurasControl -> ifStatement .)
    END_LOWER       reduce using rule 21 (estructurasControl -> ifStatement .)
    ELSE            reduce using rule 21 (estructurasControl -> ifStatement .)


state 24

    (22) estructurasControl -> while_statement .

    PUT             reduce using rule 22 (estructurasControl -> while_statement .)
    GETS            reduce using rule 22 (estructurasControl -> while_statement .)
    LOCAL_VAR       reduce using rule 22 (estructurasControl -> while_statement .)
    INTEGER         reduce using rule 22 (estructurasControl -> while_statement .)
    FLOAT           reduce using rule 22 (estructurasControl -> while_statement .)
    STRING          reduce using rule 22 (estructurasControl -> while_statement .)
    LEFTPAR         reduce using rule 22 (estructurasControl -> while_statement .)
    SET             reduce using rule 22 (estructurasControl -> while_statement .)
    IF              reduce using rule 22 (estructurasControl -> while_statement .)
    WHILE           reduce using rule 22 (estructurasControl -> while_statement .)
    UNLESS          reduce using rule 22 (estructurasControl -> while_statement .)
    INSTANCE_VAR    reduce using rule 22 (estructurasControl -> while_statement .)
    CLASS_VAR       reduce using rule 22 (estructurasControl -> while_statement .)
    GLOBAL_VAR      reduce using rule 22 (estructurasControl -> while_statement .)
    CONSTANT        reduce using rule 22 (estructurasControl -> while_statement .)
    NIL             reduce using rule 22 (estructurasControl -> while_statement .)
    SYMBOL          reduce using rule 22 (estructurasControl -> while_statement .)
    LEFT_COR        reduce using rule 22 (estructurasControl -> while_statement .)
    PERCENTW        reduce using rule 22 (estructurasControl -> while_statement .)
    ARRAY           reduce using rule 22 (estructurasControl -> while_statement .)
    $end            reduce using rule 22 (estructurasControl -> while_statement .)
    END_LOWER       reduce using rule 22 (estructurasControl -> while_statement .)
    ELSE            reduce using rule 22 (estructurasControl -> while_statement .)


state 25

    (23) estructurasControl -> unless_expression .

    PUT             reduce using rule 23 (estructurasControl -> unless_expression .)
    GETS            reduce using rule 23 (estructurasControl -> unless_expression .)
    LOCAL_VAR       reduce using rule 23 (estructurasControl -> unless_expression .)
    INTEGER         reduce using rule 23 (estructurasControl -> unless_expression .)
    FLOAT           reduce using rule 23 (estructurasControl -> unless_expression .)
    STRING          reduce using rule 23 (estructurasControl -> unless_expression .)
    LEFTPAR         reduce using rule 23 (estructurasControl -> unless_expression .)
    SET             reduce using rule 23 (estructurasControl -> unless_expression .)
    IF              reduce using rule 23 (estructurasControl -> unless_expression .)
    WHILE           reduce using rule 23 (estructurasControl -> unless_expression .)
    UNLESS          reduce using rule 23 (estructurasControl -> unless_expression .)
    INSTANCE_VAR    reduce using rule 23 (estructurasControl -> unless_expression .)
    CLASS_VAR       reduce using rule 23 (estructurasControl -> unless_expression .)
    GLOBAL_VAR      reduce using rule 23 (estructurasControl -> unless_expression .)
    CONSTANT        reduce using rule 23 (estructurasControl -> unless_expression .)
    NIL             reduce using rule 23 (estructurasControl -> unless_expression .)
    SYMBOL          reduce using rule 23 (estructurasControl -> unless_expression .)
    LEFT_COR        reduce using rule 23 (estructurasControl -> unless_expression .)
    PERCENTW        reduce using rule 23 (estructurasControl -> unless_expression .)
    ARRAY           reduce using rule 23 (estructurasControl -> unless_expression .)
    $end            reduce using rule 23 (estructurasControl -> unless_expression .)
    END_LOWER       reduce using rule 23 (estructurasControl -> unless_expression .)
    ELSE            reduce using rule 23 (estructurasControl -> unless_expression .)


state 26

    (99) method_call -> LOCAL_VAR . LEFTPAR values RIGHTPAR
    (100) method_call -> LOCAL_VAR . LEFTPAR RIGHTPAR
    (168) proc_call -> LOCAL_VAR . DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> LOCAL_VAR . DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> LOCAL_VAR . DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> LOCAL_VAR . DOT LEFTPAR RIGHTPAR
    (172) proc_call -> LOCAL_VAR . LEFT_COR values RIGHT_COR
    (173) proc_call -> LOCAL_VAR . LEFT_COR RIGHT_COR
    (125) declaraciones -> LOCAL_VAR . ASSIGN arithmetic_production
    (77) to_string -> LOCAL_VAR . DOT TO_S
    (83) hash_var -> LOCAL_VAR . ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> LOCAL_VAR . ASSIGN LBRACE RBRACE
    (89) variable_declaration -> LOCAL_VAR . ASSIGN value
    (90) variable_declaration -> LOCAL_VAR . PLUS_ASSIGN value
    (91) variable_declaration -> LOCAL_VAR . MULTIPLY_ASSIGN value
    (92) variable_declaration -> LOCAL_VAR . MINUS_ASSIGN value
    (93) variable_declaration -> LOCAL_VAR . DIVIDE_ASSIGN value
    (94) store_conditional_result -> LOCAL_VAR . ASSIGN condiciones
    (141) declare_data_structures -> LOCAL_VAR . ASSIGN set_expression
    (47) var_arreglo -> LOCAL_VAR . ASSIGN array
    (82) declaracion_concatenar_string -> LOCAL_VAR . ASSIGN concatenar_string
    (167) proc_assignment -> LOCAL_VAR . ASSIGN proc_expression
    (115) variable -> LOCAL_VAR .
    (33) var -> LOCAL_VAR .

  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for LEFT_COR resolved as shift
    LEFTPAR         shift and go to state 80
    DOT             shift and go to state 81
    LEFT_COR        shift and go to state 82
    ASSIGN          shift and go to state 83
    PLUS_ASSIGN     shift and go to state 84
    MULTIPLY_ASSIGN shift and go to state 85
    MINUS_ASSIGN    shift and go to state 86
    DIVIDE_ASSIGN   shift and go to state 87
    PUT             reduce using rule 115 (variable -> LOCAL_VAR .)
    GETS            reduce using rule 115 (variable -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 115 (variable -> LOCAL_VAR .)
    INTEGER         reduce using rule 115 (variable -> LOCAL_VAR .)
    FLOAT           reduce using rule 115 (variable -> LOCAL_VAR .)
    STRING          reduce using rule 115 (variable -> LOCAL_VAR .)
    SET             reduce using rule 115 (variable -> LOCAL_VAR .)
    IF              reduce using rule 115 (variable -> LOCAL_VAR .)
    WHILE           reduce using rule 115 (variable -> LOCAL_VAR .)
    UNLESS          reduce using rule 115 (variable -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 115 (variable -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 115 (variable -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 115 (variable -> LOCAL_VAR .)
    CONSTANT        reduce using rule 115 (variable -> LOCAL_VAR .)
    NIL             reduce using rule 115 (variable -> LOCAL_VAR .)
    SYMBOL          reduce using rule 115 (variable -> LOCAL_VAR .)
    PERCENTW        reduce using rule 115 (variable -> LOCAL_VAR .)
    ARRAY           reduce using rule 115 (variable -> LOCAL_VAR .)
    $end            reduce using rule 115 (variable -> LOCAL_VAR .)
    END_LOWER       reduce using rule 115 (variable -> LOCAL_VAR .)
    ELSE            reduce using rule 115 (variable -> LOCAL_VAR .)
    LBRACE          reduce using rule 33 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 33 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 33 (var -> LOCAL_VAR .)
    RANGEIN         reduce using rule 33 (var -> LOCAL_VAR .)
    RANGEEX         reduce using rule 33 (var -> LOCAL_VAR .)

  ! LEFTPAR         [ reduce using rule 115 (variable -> LOCAL_VAR .) ]
  ! LEFT_COR        [ reduce using rule 115 (variable -> LOCAL_VAR .) ]


state 27

    (135) range_expression -> LEFTPAR . value RANGEIN value RIGHTPAR
    (136) range_expression -> LEFTPAR . value RANGEEX value RIGHTPAR
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 88
    num                            shift and go to state 53
    var                            shift and go to state 65

state 28

    (48) array_explicito -> LEFT_COR . values RIGHT_COR
    (49) array_explicito -> LEFT_COR . RIGHT_COR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 90
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 89
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 29

    (120) declaraciones -> variable_declaration .

    PUT             reduce using rule 120 (declaraciones -> variable_declaration .)
    GETS            reduce using rule 120 (declaraciones -> variable_declaration .)
    LOCAL_VAR       reduce using rule 120 (declaraciones -> variable_declaration .)
    INTEGER         reduce using rule 120 (declaraciones -> variable_declaration .)
    FLOAT           reduce using rule 120 (declaraciones -> variable_declaration .)
    STRING          reduce using rule 120 (declaraciones -> variable_declaration .)
    LEFTPAR         reduce using rule 120 (declaraciones -> variable_declaration .)
    SET             reduce using rule 120 (declaraciones -> variable_declaration .)
    IF              reduce using rule 120 (declaraciones -> variable_declaration .)
    WHILE           reduce using rule 120 (declaraciones -> variable_declaration .)
    UNLESS          reduce using rule 120 (declaraciones -> variable_declaration .)
    INSTANCE_VAR    reduce using rule 120 (declaraciones -> variable_declaration .)
    CLASS_VAR       reduce using rule 120 (declaraciones -> variable_declaration .)
    GLOBAL_VAR      reduce using rule 120 (declaraciones -> variable_declaration .)
    CONSTANT        reduce using rule 120 (declaraciones -> variable_declaration .)
    NIL             reduce using rule 120 (declaraciones -> variable_declaration .)
    SYMBOL          reduce using rule 120 (declaraciones -> variable_declaration .)
    LEFT_COR        reduce using rule 120 (declaraciones -> variable_declaration .)
    PERCENTW        reduce using rule 120 (declaraciones -> variable_declaration .)
    ARRAY           reduce using rule 120 (declaraciones -> variable_declaration .)
    $end            reduce using rule 120 (declaraciones -> variable_declaration .)
    END_LOWER       reduce using rule 120 (declaraciones -> variable_declaration .)
    ELSE            reduce using rule 120 (declaraciones -> variable_declaration .)


state 30

    (121) declaraciones -> store_conditional_result .

    PUT             reduce using rule 121 (declaraciones -> store_conditional_result .)
    GETS            reduce using rule 121 (declaraciones -> store_conditional_result .)
    LOCAL_VAR       reduce using rule 121 (declaraciones -> store_conditional_result .)
    INTEGER         reduce using rule 121 (declaraciones -> store_conditional_result .)
    FLOAT           reduce using rule 121 (declaraciones -> store_conditional_result .)
    STRING          reduce using rule 121 (declaraciones -> store_conditional_result .)
    LEFTPAR         reduce using rule 121 (declaraciones -> store_conditional_result .)
    SET             reduce using rule 121 (declaraciones -> store_conditional_result .)
    IF              reduce using rule 121 (declaraciones -> store_conditional_result .)
    WHILE           reduce using rule 121 (declaraciones -> store_conditional_result .)
    UNLESS          reduce using rule 121 (declaraciones -> store_conditional_result .)
    INSTANCE_VAR    reduce using rule 121 (declaraciones -> store_conditional_result .)
    CLASS_VAR       reduce using rule 121 (declaraciones -> store_conditional_result .)
    GLOBAL_VAR      reduce using rule 121 (declaraciones -> store_conditional_result .)
    CONSTANT        reduce using rule 121 (declaraciones -> store_conditional_result .)
    NIL             reduce using rule 121 (declaraciones -> store_conditional_result .)
    SYMBOL          reduce using rule 121 (declaraciones -> store_conditional_result .)
    LEFT_COR        reduce using rule 121 (declaraciones -> store_conditional_result .)
    PERCENTW        reduce using rule 121 (declaraciones -> store_conditional_result .)
    ARRAY           reduce using rule 121 (declaraciones -> store_conditional_result .)
    $end            reduce using rule 121 (declaraciones -> store_conditional_result .)
    END_LOWER       reduce using rule 121 (declaraciones -> store_conditional_result .)
    ELSE            reduce using rule 121 (declaraciones -> store_conditional_result .)


state 31

    (122) declaraciones -> declare_data_structures .

    PUT             reduce using rule 122 (declaraciones -> declare_data_structures .)
    GETS            reduce using rule 122 (declaraciones -> declare_data_structures .)
    LOCAL_VAR       reduce using rule 122 (declaraciones -> declare_data_structures .)
    INTEGER         reduce using rule 122 (declaraciones -> declare_data_structures .)
    FLOAT           reduce using rule 122 (declaraciones -> declare_data_structures .)
    STRING          reduce using rule 122 (declaraciones -> declare_data_structures .)
    LEFTPAR         reduce using rule 122 (declaraciones -> declare_data_structures .)
    SET             reduce using rule 122 (declaraciones -> declare_data_structures .)
    IF              reduce using rule 122 (declaraciones -> declare_data_structures .)
    WHILE           reduce using rule 122 (declaraciones -> declare_data_structures .)
    UNLESS          reduce using rule 122 (declaraciones -> declare_data_structures .)
    INSTANCE_VAR    reduce using rule 122 (declaraciones -> declare_data_structures .)
    CLASS_VAR       reduce using rule 122 (declaraciones -> declare_data_structures .)
    GLOBAL_VAR      reduce using rule 122 (declaraciones -> declare_data_structures .)
    CONSTANT        reduce using rule 122 (declaraciones -> declare_data_structures .)
    NIL             reduce using rule 122 (declaraciones -> declare_data_structures .)
    SYMBOL          reduce using rule 122 (declaraciones -> declare_data_structures .)
    LEFT_COR        reduce using rule 122 (declaraciones -> declare_data_structures .)
    PERCENTW        reduce using rule 122 (declaraciones -> declare_data_structures .)
    ARRAY           reduce using rule 122 (declaraciones -> declare_data_structures .)
    $end            reduce using rule 122 (declaraciones -> declare_data_structures .)
    END_LOWER       reduce using rule 122 (declaraciones -> declare_data_structures .)
    ELSE            reduce using rule 122 (declaraciones -> declare_data_structures .)


state 32

    (123) declaraciones -> var_arreglo .
    (56) acceder_arreglo -> var_arreglo . LEFT_COR INTEGER RIGHT_COR
    (95) declare_data_structures -> var_arreglo .

  ! shift/reduce conflict for LEFT_COR resolved as shift
  ! reduce/reduce conflict for PUT resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for GETS resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for INTEGER resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for FLOAT resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for STRING resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for SET resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for IF resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for UNLESS resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for NIL resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! shift/reduce conflict for LEFT_COR resolved as shift
  ! reduce/reduce conflict for PERCENTW resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for ARRAY resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for $end resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 95 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for ELSE resolved using rule 95 (declare_data_structures -> var_arreglo .)
    LEFT_COR        shift and go to state 91
    PUT             reduce using rule 95 (declare_data_structures -> var_arreglo .)
    GETS            reduce using rule 95 (declare_data_structures -> var_arreglo .)
    LOCAL_VAR       reduce using rule 95 (declare_data_structures -> var_arreglo .)
    INTEGER         reduce using rule 95 (declare_data_structures -> var_arreglo .)
    FLOAT           reduce using rule 95 (declare_data_structures -> var_arreglo .)
    STRING          reduce using rule 95 (declare_data_structures -> var_arreglo .)
    LEFTPAR         reduce using rule 95 (declare_data_structures -> var_arreglo .)
    SET             reduce using rule 95 (declare_data_structures -> var_arreglo .)
    IF              reduce using rule 95 (declare_data_structures -> var_arreglo .)
    WHILE           reduce using rule 95 (declare_data_structures -> var_arreglo .)
    UNLESS          reduce using rule 95 (declare_data_structures -> var_arreglo .)
    INSTANCE_VAR    reduce using rule 95 (declare_data_structures -> var_arreglo .)
    CLASS_VAR       reduce using rule 95 (declare_data_structures -> var_arreglo .)
    GLOBAL_VAR      reduce using rule 95 (declare_data_structures -> var_arreglo .)
    CONSTANT        reduce using rule 95 (declare_data_structures -> var_arreglo .)
    NIL             reduce using rule 95 (declare_data_structures -> var_arreglo .)
    SYMBOL          reduce using rule 95 (declare_data_structures -> var_arreglo .)
    PERCENTW        reduce using rule 95 (declare_data_structures -> var_arreglo .)
    ARRAY           reduce using rule 95 (declare_data_structures -> var_arreglo .)
    $end            reduce using rule 95 (declare_data_structures -> var_arreglo .)
    END_LOWER       reduce using rule 95 (declare_data_structures -> var_arreglo .)
    ELSE            reduce using rule 95 (declare_data_structures -> var_arreglo .)

  ! PUT             [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! GETS            [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! LOCAL_VAR       [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! INTEGER         [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! FLOAT           [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! STRING          [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! LEFTPAR         [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! SET             [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! IF              [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! WHILE           [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! UNLESS          [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! INSTANCE_VAR    [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! CLASS_VAR       [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! GLOBAL_VAR      [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! CONSTANT        [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! NIL             [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! SYMBOL          [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! LEFT_COR        [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! PERCENTW        [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! ARRAY           [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! $end            [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! END_LOWER       [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! ELSE            [ reduce using rule 123 (declaraciones -> var_arreglo .) ]
  ! LEFT_COR        [ reduce using rule 95 (declare_data_structures -> var_arreglo .) ]


state 33

    (126) declaraciones -> declaracion_concatenar_string .

    PUT             reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    GETS            reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    LOCAL_VAR       reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    INTEGER         reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    FLOAT           reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    STRING          reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    LEFTPAR         reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    SET             reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    IF              reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    WHILE           reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    UNLESS          reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    INSTANCE_VAR    reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    CLASS_VAR       reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    GLOBAL_VAR      reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    CONSTANT        reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    NIL             reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    SYMBOL          reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    LEFT_COR        reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    PERCENTW        reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    ARRAY           reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    $end            reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    END_LOWER       reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)
    ELSE            reduce using rule 126 (declaraciones -> declaracion_concatenar_string .)


state 34

    (127) declaraciones -> proc_assignment .

    PUT             reduce using rule 127 (declaraciones -> proc_assignment .)
    GETS            reduce using rule 127 (declaraciones -> proc_assignment .)
    LOCAL_VAR       reduce using rule 127 (declaraciones -> proc_assignment .)
    INTEGER         reduce using rule 127 (declaraciones -> proc_assignment .)
    FLOAT           reduce using rule 127 (declaraciones -> proc_assignment .)
    STRING          reduce using rule 127 (declaraciones -> proc_assignment .)
    LEFTPAR         reduce using rule 127 (declaraciones -> proc_assignment .)
    SET             reduce using rule 127 (declaraciones -> proc_assignment .)
    IF              reduce using rule 127 (declaraciones -> proc_assignment .)
    WHILE           reduce using rule 127 (declaraciones -> proc_assignment .)
    UNLESS          reduce using rule 127 (declaraciones -> proc_assignment .)
    INSTANCE_VAR    reduce using rule 127 (declaraciones -> proc_assignment .)
    CLASS_VAR       reduce using rule 127 (declaraciones -> proc_assignment .)
    GLOBAL_VAR      reduce using rule 127 (declaraciones -> proc_assignment .)
    CONSTANT        reduce using rule 127 (declaraciones -> proc_assignment .)
    NIL             reduce using rule 127 (declaraciones -> proc_assignment .)
    SYMBOL          reduce using rule 127 (declaraciones -> proc_assignment .)
    LEFT_COR        reduce using rule 127 (declaraciones -> proc_assignment .)
    PERCENTW        reduce using rule 127 (declaraciones -> proc_assignment .)
    ARRAY           reduce using rule 127 (declaraciones -> proc_assignment .)
    $end            reduce using rule 127 (declaraciones -> proc_assignment .)
    END_LOWER       reduce using rule 127 (declaraciones -> proc_assignment .)
    ELSE            reduce using rule 127 (declaraciones -> proc_assignment .)


state 35

    (111) expression -> INTEGER .
    (38) num -> INTEGER .

    PUT             reduce using rule 111 (expression -> INTEGER .)
    GETS            reduce using rule 111 (expression -> INTEGER .)
    LOCAL_VAR       reduce using rule 111 (expression -> INTEGER .)
    INTEGER         reduce using rule 111 (expression -> INTEGER .)
    FLOAT           reduce using rule 111 (expression -> INTEGER .)
    STRING          reduce using rule 111 (expression -> INTEGER .)
    LEFTPAR         reduce using rule 111 (expression -> INTEGER .)
    SET             reduce using rule 111 (expression -> INTEGER .)
    IF              reduce using rule 111 (expression -> INTEGER .)
    WHILE           reduce using rule 111 (expression -> INTEGER .)
    UNLESS          reduce using rule 111 (expression -> INTEGER .)
    INSTANCE_VAR    reduce using rule 111 (expression -> INTEGER .)
    CLASS_VAR       reduce using rule 111 (expression -> INTEGER .)
    GLOBAL_VAR      reduce using rule 111 (expression -> INTEGER .)
    CONSTANT        reduce using rule 111 (expression -> INTEGER .)
    NIL             reduce using rule 111 (expression -> INTEGER .)
    SYMBOL          reduce using rule 111 (expression -> INTEGER .)
    LEFT_COR        reduce using rule 111 (expression -> INTEGER .)
    PERCENTW        reduce using rule 111 (expression -> INTEGER .)
    ARRAY           reduce using rule 111 (expression -> INTEGER .)
    $end            reduce using rule 111 (expression -> INTEGER .)
    END_LOWER       reduce using rule 111 (expression -> INTEGER .)
    ELSE            reduce using rule 111 (expression -> INTEGER .)
    EQUAL           reduce using rule 38 (num -> INTEGER .)
    COMPARE         reduce using rule 38 (num -> INTEGER .)
    RANGEIN         reduce using rule 38 (num -> INTEGER .)
    RANGEEX         reduce using rule 38 (num -> INTEGER .)


state 36

    (112) expression -> FLOAT .
    (37) num -> FLOAT .

    PUT             reduce using rule 112 (expression -> FLOAT .)
    GETS            reduce using rule 112 (expression -> FLOAT .)
    LOCAL_VAR       reduce using rule 112 (expression -> FLOAT .)
    INTEGER         reduce using rule 112 (expression -> FLOAT .)
    FLOAT           reduce using rule 112 (expression -> FLOAT .)
    STRING          reduce using rule 112 (expression -> FLOAT .)
    LEFTPAR         reduce using rule 112 (expression -> FLOAT .)
    SET             reduce using rule 112 (expression -> FLOAT .)
    IF              reduce using rule 112 (expression -> FLOAT .)
    WHILE           reduce using rule 112 (expression -> FLOAT .)
    UNLESS          reduce using rule 112 (expression -> FLOAT .)
    INSTANCE_VAR    reduce using rule 112 (expression -> FLOAT .)
    CLASS_VAR       reduce using rule 112 (expression -> FLOAT .)
    GLOBAL_VAR      reduce using rule 112 (expression -> FLOAT .)
    CONSTANT        reduce using rule 112 (expression -> FLOAT .)
    NIL             reduce using rule 112 (expression -> FLOAT .)
    SYMBOL          reduce using rule 112 (expression -> FLOAT .)
    LEFT_COR        reduce using rule 112 (expression -> FLOAT .)
    PERCENTW        reduce using rule 112 (expression -> FLOAT .)
    ARRAY           reduce using rule 112 (expression -> FLOAT .)
    $end            reduce using rule 112 (expression -> FLOAT .)
    END_LOWER       reduce using rule 112 (expression -> FLOAT .)
    ELSE            reduce using rule 112 (expression -> FLOAT .)
    EQUAL           reduce using rule 37 (num -> FLOAT .)
    COMPARE         reduce using rule 37 (num -> FLOAT .)
    RANGEIN         reduce using rule 37 (num -> FLOAT .)
    RANGEEX         reduce using rule 37 (num -> FLOAT .)


state 37

    (113) expression -> variable .

    PUT             reduce using rule 113 (expression -> variable .)
    GETS            reduce using rule 113 (expression -> variable .)
    LOCAL_VAR       reduce using rule 113 (expression -> variable .)
    INTEGER         reduce using rule 113 (expression -> variable .)
    FLOAT           reduce using rule 113 (expression -> variable .)
    STRING          reduce using rule 113 (expression -> variable .)
    LEFTPAR         reduce using rule 113 (expression -> variable .)
    SET             reduce using rule 113 (expression -> variable .)
    IF              reduce using rule 113 (expression -> variable .)
    WHILE           reduce using rule 113 (expression -> variable .)
    UNLESS          reduce using rule 113 (expression -> variable .)
    INSTANCE_VAR    reduce using rule 113 (expression -> variable .)
    CLASS_VAR       reduce using rule 113 (expression -> variable .)
    GLOBAL_VAR      reduce using rule 113 (expression -> variable .)
    CONSTANT        reduce using rule 113 (expression -> variable .)
    NIL             reduce using rule 113 (expression -> variable .)
    SYMBOL          reduce using rule 113 (expression -> variable .)
    LEFT_COR        reduce using rule 113 (expression -> variable .)
    PERCENTW        reduce using rule 113 (expression -> variable .)
    ARRAY           reduce using rule 113 (expression -> variable .)
    $end            reduce using rule 113 (expression -> variable .)
    GREATER         reduce using rule 113 (expression -> variable .)
    LESS            reduce using rule 113 (expression -> variable .)
    GREATER_EQUAL   reduce using rule 113 (expression -> variable .)
    LESS_EQUAL      reduce using rule 113 (expression -> variable .)
    EQUAL           reduce using rule 113 (expression -> variable .)
    NOT_EQUAL       reduce using rule 113 (expression -> variable .)
    END_LOWER       reduce using rule 113 (expression -> variable .)
    ELSE            reduce using rule 113 (expression -> variable .)
    THEN            reduce using rule 113 (expression -> variable .)


state 38

    (114) expression -> STRING .
    (26) value -> STRING .

    PUT             reduce using rule 114 (expression -> STRING .)
    GETS            reduce using rule 114 (expression -> STRING .)
    LOCAL_VAR       reduce using rule 114 (expression -> STRING .)
    INTEGER         reduce using rule 114 (expression -> STRING .)
    FLOAT           reduce using rule 114 (expression -> STRING .)
    STRING          reduce using rule 114 (expression -> STRING .)
    LEFTPAR         reduce using rule 114 (expression -> STRING .)
    SET             reduce using rule 114 (expression -> STRING .)
    IF              reduce using rule 114 (expression -> STRING .)
    WHILE           reduce using rule 114 (expression -> STRING .)
    UNLESS          reduce using rule 114 (expression -> STRING .)
    INSTANCE_VAR    reduce using rule 114 (expression -> STRING .)
    CLASS_VAR       reduce using rule 114 (expression -> STRING .)
    GLOBAL_VAR      reduce using rule 114 (expression -> STRING .)
    CONSTANT        reduce using rule 114 (expression -> STRING .)
    NIL             reduce using rule 114 (expression -> STRING .)
    SYMBOL          reduce using rule 114 (expression -> STRING .)
    LEFT_COR        reduce using rule 114 (expression -> STRING .)
    PERCENTW        reduce using rule 114 (expression -> STRING .)
    ARRAY           reduce using rule 114 (expression -> STRING .)
    $end            reduce using rule 114 (expression -> STRING .)
    END_LOWER       reduce using rule 114 (expression -> STRING .)
    ELSE            reduce using rule 114 (expression -> STRING .)
    EQUAL           reduce using rule 26 (value -> STRING .)
    COMPARE         reduce using rule 26 (value -> STRING .)
    RANGEIN         reduce using rule 26 (value -> STRING .)
    RANGEEX         reduce using rule 26 (value -> STRING .)


state 39

    (131) comparador -> value . EQUAL value
    (132) comparador -> value . COMPARE value
    (133) range_expression -> value . RANGEIN value
    (134) range_expression -> value . RANGEEX value

    EQUAL           shift and go to state 92
    COMPARE         shift and go to state 93
    RANGEIN         shift and go to state 94
    RANGEEX         shift and go to state 95


state 40

    (43) array -> array_explicito .

    PUT             reduce using rule 43 (array -> array_explicito .)
    GETS            reduce using rule 43 (array -> array_explicito .)
    LOCAL_VAR       reduce using rule 43 (array -> array_explicito .)
    INTEGER         reduce using rule 43 (array -> array_explicito .)
    FLOAT           reduce using rule 43 (array -> array_explicito .)
    STRING          reduce using rule 43 (array -> array_explicito .)
    LEFTPAR         reduce using rule 43 (array -> array_explicito .)
    SET             reduce using rule 43 (array -> array_explicito .)
    IF              reduce using rule 43 (array -> array_explicito .)
    WHILE           reduce using rule 43 (array -> array_explicito .)
    UNLESS          reduce using rule 43 (array -> array_explicito .)
    INSTANCE_VAR    reduce using rule 43 (array -> array_explicito .)
    CLASS_VAR       reduce using rule 43 (array -> array_explicito .)
    GLOBAL_VAR      reduce using rule 43 (array -> array_explicito .)
    CONSTANT        reduce using rule 43 (array -> array_explicito .)
    NIL             reduce using rule 43 (array -> array_explicito .)
    SYMBOL          reduce using rule 43 (array -> array_explicito .)
    LEFT_COR        reduce using rule 43 (array -> array_explicito .)
    PERCENTW        reduce using rule 43 (array -> array_explicito .)
    ARRAY           reduce using rule 43 (array -> array_explicito .)
    $end            reduce using rule 43 (array -> array_explicito .)
    END_LOWER       reduce using rule 43 (array -> array_explicito .)
    ELSE            reduce using rule 43 (array -> array_explicito .)


state 41

    (44) array -> array_implicito .

    PUT             reduce using rule 44 (array -> array_implicito .)
    GETS            reduce using rule 44 (array -> array_implicito .)
    LOCAL_VAR       reduce using rule 44 (array -> array_implicito .)
    INTEGER         reduce using rule 44 (array -> array_implicito .)
    FLOAT           reduce using rule 44 (array -> array_implicito .)
    STRING          reduce using rule 44 (array -> array_implicito .)
    LEFTPAR         reduce using rule 44 (array -> array_implicito .)
    SET             reduce using rule 44 (array -> array_implicito .)
    IF              reduce using rule 44 (array -> array_implicito .)
    WHILE           reduce using rule 44 (array -> array_implicito .)
    UNLESS          reduce using rule 44 (array -> array_implicito .)
    INSTANCE_VAR    reduce using rule 44 (array -> array_implicito .)
    CLASS_VAR       reduce using rule 44 (array -> array_implicito .)
    GLOBAL_VAR      reduce using rule 44 (array -> array_implicito .)
    CONSTANT        reduce using rule 44 (array -> array_implicito .)
    NIL             reduce using rule 44 (array -> array_implicito .)
    SYMBOL          reduce using rule 44 (array -> array_implicito .)
    LEFT_COR        reduce using rule 44 (array -> array_implicito .)
    PERCENTW        reduce using rule 44 (array -> array_implicito .)
    ARRAY           reduce using rule 44 (array -> array_implicito .)
    $end            reduce using rule 44 (array -> array_implicito .)
    END_LOWER       reduce using rule 44 (array -> array_implicito .)
    ELSE            reduce using rule 44 (array -> array_implicito .)


state 42

    (45) array -> array_creation .

    PUT             reduce using rule 45 (array -> array_creation .)
    GETS            reduce using rule 45 (array -> array_creation .)
    LOCAL_VAR       reduce using rule 45 (array -> array_creation .)
    INTEGER         reduce using rule 45 (array -> array_creation .)
    FLOAT           reduce using rule 45 (array -> array_creation .)
    STRING          reduce using rule 45 (array -> array_creation .)
    LEFTPAR         reduce using rule 45 (array -> array_creation .)
    SET             reduce using rule 45 (array -> array_creation .)
    IF              reduce using rule 45 (array -> array_creation .)
    WHILE           reduce using rule 45 (array -> array_creation .)
    UNLESS          reduce using rule 45 (array -> array_creation .)
    INSTANCE_VAR    reduce using rule 45 (array -> array_creation .)
    CLASS_VAR       reduce using rule 45 (array -> array_creation .)
    GLOBAL_VAR      reduce using rule 45 (array -> array_creation .)
    CONSTANT        reduce using rule 45 (array -> array_creation .)
    NIL             reduce using rule 45 (array -> array_creation .)
    SYMBOL          reduce using rule 45 (array -> array_creation .)
    LEFT_COR        reduce using rule 45 (array -> array_creation .)
    PERCENTW        reduce using rule 45 (array -> array_creation .)
    ARRAY           reduce using rule 45 (array -> array_creation .)
    $end            reduce using rule 45 (array -> array_creation .)
    END_LOWER       reduce using rule 45 (array -> array_creation .)
    ELSE            reduce using rule 45 (array -> array_creation .)


state 43

    (46) array -> newArray .

    PUT             reduce using rule 46 (array -> newArray .)
    GETS            reduce using rule 46 (array -> newArray .)
    LOCAL_VAR       reduce using rule 46 (array -> newArray .)
    INTEGER         reduce using rule 46 (array -> newArray .)
    FLOAT           reduce using rule 46 (array -> newArray .)
    STRING          reduce using rule 46 (array -> newArray .)
    LEFTPAR         reduce using rule 46 (array -> newArray .)
    SET             reduce using rule 46 (array -> newArray .)
    IF              reduce using rule 46 (array -> newArray .)
    WHILE           reduce using rule 46 (array -> newArray .)
    UNLESS          reduce using rule 46 (array -> newArray .)
    INSTANCE_VAR    reduce using rule 46 (array -> newArray .)
    CLASS_VAR       reduce using rule 46 (array -> newArray .)
    GLOBAL_VAR      reduce using rule 46 (array -> newArray .)
    CONSTANT        reduce using rule 46 (array -> newArray .)
    NIL             reduce using rule 46 (array -> newArray .)
    SYMBOL          reduce using rule 46 (array -> newArray .)
    LEFT_COR        reduce using rule 46 (array -> newArray .)
    PERCENTW        reduce using rule 46 (array -> newArray .)
    ARRAY           reduce using rule 46 (array -> newArray .)
    $end            reduce using rule 46 (array -> newArray .)
    END_LOWER       reduce using rule 46 (array -> newArray .)
    ELSE            reduce using rule 46 (array -> newArray .)


state 44

    (88) hash_operations -> hash_access . ASSIGN value

    ASSIGN          shift and go to state 96


state 45

    (137) set_expression -> SET . DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> SET . LEFT_COR values RIGHT_COR

    DOT             shift and go to state 97
    LEFT_COR        shift and go to state 98


state 46

    (57) ifStatement -> IF . condiciones codigo END_LOWER
    (58) ifStatement -> IF . condiciones codigo else_statement END_LOWER
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    condiciones                    shift and go to state 99
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 47

    (97) while_statement -> WHILE . condiciones codigo END_LOWER
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    condiciones                    shift and go to state 103
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 48

    (147) unless_expression -> UNLESS . boolean_expression THEN expresion END
    (148) unless_expression -> UNLESS . boolean_expression THEN expresion ELSE expresion END
    (102) boolean_expression -> . expression GREATER expression
    (103) boolean_expression -> . expression LESS expression
    (104) boolean_expression -> . expression GREATER_EQUAL expression
    (105) boolean_expression -> . expression LESS_EQUAL expression
    (106) boolean_expression -> . expression EQUAL expression
    (107) boolean_expression -> . expression NOT_EQUAL expression
    (108) boolean_expression -> . boolean_value
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (109) boolean_value -> . TRUE
    (110) boolean_value -> . FALSE
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    boolean_expression             shift and go to state 104
    expression                     shift and go to state 105
    boolean_value                  shift and go to state 106
    variable                       shift and go to state 37

state 49

    (116) variable -> INSTANCE_VAR .
    (34) var -> INSTANCE_VAR .

    PUT             reduce using rule 116 (variable -> INSTANCE_VAR .)
    GETS            reduce using rule 116 (variable -> INSTANCE_VAR .)
    LOCAL_VAR       reduce using rule 116 (variable -> INSTANCE_VAR .)
    INTEGER         reduce using rule 116 (variable -> INSTANCE_VAR .)
    FLOAT           reduce using rule 116 (variable -> INSTANCE_VAR .)
    STRING          reduce using rule 116 (variable -> INSTANCE_VAR .)
    LEFTPAR         reduce using rule 116 (variable -> INSTANCE_VAR .)
    SET             reduce using rule 116 (variable -> INSTANCE_VAR .)
    IF              reduce using rule 116 (variable -> INSTANCE_VAR .)
    WHILE           reduce using rule 116 (variable -> INSTANCE_VAR .)
    UNLESS          reduce using rule 116 (variable -> INSTANCE_VAR .)
    INSTANCE_VAR    reduce using rule 116 (variable -> INSTANCE_VAR .)
    CLASS_VAR       reduce using rule 116 (variable -> INSTANCE_VAR .)
    GLOBAL_VAR      reduce using rule 116 (variable -> INSTANCE_VAR .)
    CONSTANT        reduce using rule 116 (variable -> INSTANCE_VAR .)
    NIL             reduce using rule 116 (variable -> INSTANCE_VAR .)
    SYMBOL          reduce using rule 116 (variable -> INSTANCE_VAR .)
    LEFT_COR        reduce using rule 116 (variable -> INSTANCE_VAR .)
    PERCENTW        reduce using rule 116 (variable -> INSTANCE_VAR .)
    ARRAY           reduce using rule 116 (variable -> INSTANCE_VAR .)
    $end            reduce using rule 116 (variable -> INSTANCE_VAR .)
    END_LOWER       reduce using rule 116 (variable -> INSTANCE_VAR .)
    ELSE            reduce using rule 116 (variable -> INSTANCE_VAR .)
    LBRACE          reduce using rule 34 (var -> INSTANCE_VAR .)
    EQUAL           reduce using rule 34 (var -> INSTANCE_VAR .)
    COMPARE         reduce using rule 34 (var -> INSTANCE_VAR .)
    RANGEIN         reduce using rule 34 (var -> INSTANCE_VAR .)
    RANGEEX         reduce using rule 34 (var -> INSTANCE_VAR .)


state 50

    (117) variable -> CLASS_VAR .
    (35) var -> CLASS_VAR .

    PUT             reduce using rule 117 (variable -> CLASS_VAR .)
    GETS            reduce using rule 117 (variable -> CLASS_VAR .)
    LOCAL_VAR       reduce using rule 117 (variable -> CLASS_VAR .)
    INTEGER         reduce using rule 117 (variable -> CLASS_VAR .)
    FLOAT           reduce using rule 117 (variable -> CLASS_VAR .)
    STRING          reduce using rule 117 (variable -> CLASS_VAR .)
    LEFTPAR         reduce using rule 117 (variable -> CLASS_VAR .)
    SET             reduce using rule 117 (variable -> CLASS_VAR .)
    IF              reduce using rule 117 (variable -> CLASS_VAR .)
    WHILE           reduce using rule 117 (variable -> CLASS_VAR .)
    UNLESS          reduce using rule 117 (variable -> CLASS_VAR .)
    INSTANCE_VAR    reduce using rule 117 (variable -> CLASS_VAR .)
    CLASS_VAR       reduce using rule 117 (variable -> CLASS_VAR .)
    GLOBAL_VAR      reduce using rule 117 (variable -> CLASS_VAR .)
    CONSTANT        reduce using rule 117 (variable -> CLASS_VAR .)
    NIL             reduce using rule 117 (variable -> CLASS_VAR .)
    SYMBOL          reduce using rule 117 (variable -> CLASS_VAR .)
    LEFT_COR        reduce using rule 117 (variable -> CLASS_VAR .)
    PERCENTW        reduce using rule 117 (variable -> CLASS_VAR .)
    ARRAY           reduce using rule 117 (variable -> CLASS_VAR .)
    $end            reduce using rule 117 (variable -> CLASS_VAR .)
    END_LOWER       reduce using rule 117 (variable -> CLASS_VAR .)
    ELSE            reduce using rule 117 (variable -> CLASS_VAR .)
    LBRACE          reduce using rule 35 (var -> CLASS_VAR .)
    EQUAL           reduce using rule 35 (var -> CLASS_VAR .)
    COMPARE         reduce using rule 35 (var -> CLASS_VAR .)
    RANGEIN         reduce using rule 35 (var -> CLASS_VAR .)
    RANGEEX         reduce using rule 35 (var -> CLASS_VAR .)


state 51

    (118) variable -> GLOBAL_VAR .
    (36) var -> GLOBAL_VAR .

    PUT             reduce using rule 118 (variable -> GLOBAL_VAR .)
    GETS            reduce using rule 118 (variable -> GLOBAL_VAR .)
    LOCAL_VAR       reduce using rule 118 (variable -> GLOBAL_VAR .)
    INTEGER         reduce using rule 118 (variable -> GLOBAL_VAR .)
    FLOAT           reduce using rule 118 (variable -> GLOBAL_VAR .)
    STRING          reduce using rule 118 (variable -> GLOBAL_VAR .)
    LEFTPAR         reduce using rule 118 (variable -> GLOBAL_VAR .)
    SET             reduce using rule 118 (variable -> GLOBAL_VAR .)
    IF              reduce using rule 118 (variable -> GLOBAL_VAR .)
    WHILE           reduce using rule 118 (variable -> GLOBAL_VAR .)
    UNLESS          reduce using rule 118 (variable -> GLOBAL_VAR .)
    INSTANCE_VAR    reduce using rule 118 (variable -> GLOBAL_VAR .)
    CLASS_VAR       reduce using rule 118 (variable -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 118 (variable -> GLOBAL_VAR .)
    CONSTANT        reduce using rule 118 (variable -> GLOBAL_VAR .)
    NIL             reduce using rule 118 (variable -> GLOBAL_VAR .)
    SYMBOL          reduce using rule 118 (variable -> GLOBAL_VAR .)
    LEFT_COR        reduce using rule 118 (variable -> GLOBAL_VAR .)
    PERCENTW        reduce using rule 118 (variable -> GLOBAL_VAR .)
    ARRAY           reduce using rule 118 (variable -> GLOBAL_VAR .)
    $end            reduce using rule 118 (variable -> GLOBAL_VAR .)
    END_LOWER       reduce using rule 118 (variable -> GLOBAL_VAR .)
    ELSE            reduce using rule 118 (variable -> GLOBAL_VAR .)
    LBRACE          reduce using rule 36 (var -> GLOBAL_VAR .)
    EQUAL           reduce using rule 36 (var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 36 (var -> GLOBAL_VAR .)
    RANGEIN         reduce using rule 36 (var -> GLOBAL_VAR .)
    RANGEEX         reduce using rule 36 (var -> GLOBAL_VAR .)


state 52

    (119) variable -> CONSTANT .

    PUT             reduce using rule 119 (variable -> CONSTANT .)
    GETS            reduce using rule 119 (variable -> CONSTANT .)
    LOCAL_VAR       reduce using rule 119 (variable -> CONSTANT .)
    INTEGER         reduce using rule 119 (variable -> CONSTANT .)
    FLOAT           reduce using rule 119 (variable -> CONSTANT .)
    STRING          reduce using rule 119 (variable -> CONSTANT .)
    LEFTPAR         reduce using rule 119 (variable -> CONSTANT .)
    SET             reduce using rule 119 (variable -> CONSTANT .)
    IF              reduce using rule 119 (variable -> CONSTANT .)
    WHILE           reduce using rule 119 (variable -> CONSTANT .)
    UNLESS          reduce using rule 119 (variable -> CONSTANT .)
    INSTANCE_VAR    reduce using rule 119 (variable -> CONSTANT .)
    CLASS_VAR       reduce using rule 119 (variable -> CONSTANT .)
    GLOBAL_VAR      reduce using rule 119 (variable -> CONSTANT .)
    CONSTANT        reduce using rule 119 (variable -> CONSTANT .)
    NIL             reduce using rule 119 (variable -> CONSTANT .)
    SYMBOL          reduce using rule 119 (variable -> CONSTANT .)
    LEFT_COR        reduce using rule 119 (variable -> CONSTANT .)
    PERCENTW        reduce using rule 119 (variable -> CONSTANT .)
    ARRAY           reduce using rule 119 (variable -> CONSTANT .)
    $end            reduce using rule 119 (variable -> CONSTANT .)
    GREATER         reduce using rule 119 (variable -> CONSTANT .)
    LESS            reduce using rule 119 (variable -> CONSTANT .)
    GREATER_EQUAL   reduce using rule 119 (variable -> CONSTANT .)
    LESS_EQUAL      reduce using rule 119 (variable -> CONSTANT .)
    EQUAL           reduce using rule 119 (variable -> CONSTANT .)
    NOT_EQUAL       reduce using rule 119 (variable -> CONSTANT .)
    END_LOWER       reduce using rule 119 (variable -> CONSTANT .)
    ELSE            reduce using rule 119 (variable -> CONSTANT .)
    THEN            reduce using rule 119 (variable -> CONSTANT .)


state 53

    (24) value -> num .

    EQUAL           reduce using rule 24 (value -> num .)
    COMPARE         reduce using rule 24 (value -> num .)
    RANGEIN         reduce using rule 24 (value -> num .)
    RANGEEX         reduce using rule 24 (value -> num .)
    COMMA           reduce using rule 24 (value -> num .)
    PUT             reduce using rule 24 (value -> num .)
    GETS            reduce using rule 24 (value -> num .)
    LOCAL_VAR       reduce using rule 24 (value -> num .)
    INTEGER         reduce using rule 24 (value -> num .)
    FLOAT           reduce using rule 24 (value -> num .)
    STRING          reduce using rule 24 (value -> num .)
    LEFTPAR         reduce using rule 24 (value -> num .)
    SET             reduce using rule 24 (value -> num .)
    IF              reduce using rule 24 (value -> num .)
    WHILE           reduce using rule 24 (value -> num .)
    UNLESS          reduce using rule 24 (value -> num .)
    INSTANCE_VAR    reduce using rule 24 (value -> num .)
    CLASS_VAR       reduce using rule 24 (value -> num .)
    GLOBAL_VAR      reduce using rule 24 (value -> num .)
    CONSTANT        reduce using rule 24 (value -> num .)
    NIL             reduce using rule 24 (value -> num .)
    SYMBOL          reduce using rule 24 (value -> num .)
    LEFT_COR        reduce using rule 24 (value -> num .)
    PERCENTW        reduce using rule 24 (value -> num .)
    ARRAY           reduce using rule 24 (value -> num .)
    $end            reduce using rule 24 (value -> num .)
    END_LOWER       reduce using rule 24 (value -> num .)
    ELSE            reduce using rule 24 (value -> num .)
    RIGHT_COR       reduce using rule 24 (value -> num .)
    RIGHTPAR        reduce using rule 24 (value -> num .)
    RBRACE          reduce using rule 24 (value -> num .)
    SPACE           reduce using rule 24 (value -> num .)
    END             reduce using rule 24 (value -> num .)


state 54

    (25) value -> var .
    (87) hash_access -> var . LBRACE value RBRACE

    EQUAL           reduce using rule 25 (value -> var .)
    COMPARE         reduce using rule 25 (value -> var .)
    RANGEIN         reduce using rule 25 (value -> var .)
    RANGEEX         reduce using rule 25 (value -> var .)
    LBRACE          shift and go to state 116


state 55

    (27) value -> NIL .

    EQUAL           reduce using rule 27 (value -> NIL .)
    COMPARE         reduce using rule 27 (value -> NIL .)
    RANGEIN         reduce using rule 27 (value -> NIL .)
    RANGEEX         reduce using rule 27 (value -> NIL .)
    COMMA           reduce using rule 27 (value -> NIL .)
    PUT             reduce using rule 27 (value -> NIL .)
    GETS            reduce using rule 27 (value -> NIL .)
    LOCAL_VAR       reduce using rule 27 (value -> NIL .)
    INTEGER         reduce using rule 27 (value -> NIL .)
    FLOAT           reduce using rule 27 (value -> NIL .)
    STRING          reduce using rule 27 (value -> NIL .)
    LEFTPAR         reduce using rule 27 (value -> NIL .)
    SET             reduce using rule 27 (value -> NIL .)
    IF              reduce using rule 27 (value -> NIL .)
    WHILE           reduce using rule 27 (value -> NIL .)
    UNLESS          reduce using rule 27 (value -> NIL .)
    INSTANCE_VAR    reduce using rule 27 (value -> NIL .)
    CLASS_VAR       reduce using rule 27 (value -> NIL .)
    GLOBAL_VAR      reduce using rule 27 (value -> NIL .)
    CONSTANT        reduce using rule 27 (value -> NIL .)
    NIL             reduce using rule 27 (value -> NIL .)
    SYMBOL          reduce using rule 27 (value -> NIL .)
    LEFT_COR        reduce using rule 27 (value -> NIL .)
    PERCENTW        reduce using rule 27 (value -> NIL .)
    ARRAY           reduce using rule 27 (value -> NIL .)
    $end            reduce using rule 27 (value -> NIL .)
    END_LOWER       reduce using rule 27 (value -> NIL .)
    ELSE            reduce using rule 27 (value -> NIL .)
    RIGHT_COR       reduce using rule 27 (value -> NIL .)
    RIGHTPAR        reduce using rule 27 (value -> NIL .)
    RBRACE          reduce using rule 27 (value -> NIL .)
    SPACE           reduce using rule 27 (value -> NIL .)
    END             reduce using rule 27 (value -> NIL .)


state 56

    (28) value -> SYMBOL .

    EQUAL           reduce using rule 28 (value -> SYMBOL .)
    COMPARE         reduce using rule 28 (value -> SYMBOL .)
    RANGEIN         reduce using rule 28 (value -> SYMBOL .)
    RANGEEX         reduce using rule 28 (value -> SYMBOL .)
    COMMA           reduce using rule 28 (value -> SYMBOL .)
    PUT             reduce using rule 28 (value -> SYMBOL .)
    GETS            reduce using rule 28 (value -> SYMBOL .)
    LOCAL_VAR       reduce using rule 28 (value -> SYMBOL .)
    INTEGER         reduce using rule 28 (value -> SYMBOL .)
    FLOAT           reduce using rule 28 (value -> SYMBOL .)
    STRING          reduce using rule 28 (value -> SYMBOL .)
    LEFTPAR         reduce using rule 28 (value -> SYMBOL .)
    SET             reduce using rule 28 (value -> SYMBOL .)
    IF              reduce using rule 28 (value -> SYMBOL .)
    WHILE           reduce using rule 28 (value -> SYMBOL .)
    UNLESS          reduce using rule 28 (value -> SYMBOL .)
    INSTANCE_VAR    reduce using rule 28 (value -> SYMBOL .)
    CLASS_VAR       reduce using rule 28 (value -> SYMBOL .)
    GLOBAL_VAR      reduce using rule 28 (value -> SYMBOL .)
    CONSTANT        reduce using rule 28 (value -> SYMBOL .)
    NIL             reduce using rule 28 (value -> SYMBOL .)
    SYMBOL          reduce using rule 28 (value -> SYMBOL .)
    LEFT_COR        reduce using rule 28 (value -> SYMBOL .)
    PERCENTW        reduce using rule 28 (value -> SYMBOL .)
    ARRAY           reduce using rule 28 (value -> SYMBOL .)
    $end            reduce using rule 28 (value -> SYMBOL .)
    END_LOWER       reduce using rule 28 (value -> SYMBOL .)
    ELSE            reduce using rule 28 (value -> SYMBOL .)
    RIGHT_COR       reduce using rule 28 (value -> SYMBOL .)
    RIGHTPAR        reduce using rule 28 (value -> SYMBOL .)
    RBRACE          reduce using rule 28 (value -> SYMBOL .)
    SPACE           reduce using rule 28 (value -> SYMBOL .)
    END             reduce using rule 28 (value -> SYMBOL .)


state 57

    (50) array_implicito -> PERCENTW . LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> PERCENTW . LEFT_COR RIGHT_COR

    LEFT_COR        shift and go to state 117


state 58

    (52) array_creation -> ARRAY . LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> ARRAY . DOT NEW
    (54) newArray -> ARRAY . DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> ARRAY . DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    LEFTPAR         shift and go to state 118
    DOT             shift and go to state 119


state 59

    (2) codigo -> codigo sentencia .

    PUT             reduce using rule 2 (codigo -> codigo sentencia .)
    GETS            reduce using rule 2 (codigo -> codigo sentencia .)
    LOCAL_VAR       reduce using rule 2 (codigo -> codigo sentencia .)
    INTEGER         reduce using rule 2 (codigo -> codigo sentencia .)
    FLOAT           reduce using rule 2 (codigo -> codigo sentencia .)
    STRING          reduce using rule 2 (codigo -> codigo sentencia .)
    LEFTPAR         reduce using rule 2 (codigo -> codigo sentencia .)
    SET             reduce using rule 2 (codigo -> codigo sentencia .)
    IF              reduce using rule 2 (codigo -> codigo sentencia .)
    WHILE           reduce using rule 2 (codigo -> codigo sentencia .)
    UNLESS          reduce using rule 2 (codigo -> codigo sentencia .)
    INSTANCE_VAR    reduce using rule 2 (codigo -> codigo sentencia .)
    CLASS_VAR       reduce using rule 2 (codigo -> codigo sentencia .)
    GLOBAL_VAR      reduce using rule 2 (codigo -> codigo sentencia .)
    CONSTANT        reduce using rule 2 (codigo -> codigo sentencia .)
    NIL             reduce using rule 2 (codigo -> codigo sentencia .)
    SYMBOL          reduce using rule 2 (codigo -> codigo sentencia .)
    LEFT_COR        reduce using rule 2 (codigo -> codigo sentencia .)
    PERCENTW        reduce using rule 2 (codigo -> codigo sentencia .)
    ARRAY           reduce using rule 2 (codigo -> codigo sentencia .)
    $end            reduce using rule 2 (codigo -> codigo sentencia .)
    END_LOWER       reduce using rule 2 (codigo -> codigo sentencia .)
    ELSE            reduce using rule 2 (codigo -> codigo sentencia .)


state 60

    (165) block_assignment -> method_call block_expression .

    PUT             reduce using rule 165 (block_assignment -> method_call block_expression .)
    GETS            reduce using rule 165 (block_assignment -> method_call block_expression .)
    LOCAL_VAR       reduce using rule 165 (block_assignment -> method_call block_expression .)
    INTEGER         reduce using rule 165 (block_assignment -> method_call block_expression .)
    FLOAT           reduce using rule 165 (block_assignment -> method_call block_expression .)
    STRING          reduce using rule 165 (block_assignment -> method_call block_expression .)
    LEFTPAR         reduce using rule 165 (block_assignment -> method_call block_expression .)
    SET             reduce using rule 165 (block_assignment -> method_call block_expression .)
    IF              reduce using rule 165 (block_assignment -> method_call block_expression .)
    WHILE           reduce using rule 165 (block_assignment -> method_call block_expression .)
    UNLESS          reduce using rule 165 (block_assignment -> method_call block_expression .)
    INSTANCE_VAR    reduce using rule 165 (block_assignment -> method_call block_expression .)
    CLASS_VAR       reduce using rule 165 (block_assignment -> method_call block_expression .)
    GLOBAL_VAR      reduce using rule 165 (block_assignment -> method_call block_expression .)
    CONSTANT        reduce using rule 165 (block_assignment -> method_call block_expression .)
    NIL             reduce using rule 165 (block_assignment -> method_call block_expression .)
    SYMBOL          reduce using rule 165 (block_assignment -> method_call block_expression .)
    LEFT_COR        reduce using rule 165 (block_assignment -> method_call block_expression .)
    PERCENTW        reduce using rule 165 (block_assignment -> method_call block_expression .)
    ARRAY           reduce using rule 165 (block_assignment -> method_call block_expression .)
    $end            reduce using rule 165 (block_assignment -> method_call block_expression .)
    END_LOWER       reduce using rule 165 (block_assignment -> method_call block_expression .)
    ELSE            reduce using rule 165 (block_assignment -> method_call block_expression .)


state 61

    (159) block_expression -> LBRACE . expresion RBRACE
    (162) block_expression -> LBRACE . PIPE LOCAL_VAR PIPE expresion RBRACE
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PIPE            shift and go to state 121
    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 120
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 62

    (160) block_expression -> DO . expresion END
    (161) block_expression -> DO . expresion END_LOWER
    (163) block_expression -> DO . PIPE LOCAL_VAR PIPE expresion END
    (164) block_expression -> DO . PIPE LOCAL_VAR PIPE expresion END_LOWER
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PIPE            shift and go to state 129
    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 128
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 63

    (42) puts -> PUT values .

    PUT             reduce using rule 42 (puts -> PUT values .)
    GETS            reduce using rule 42 (puts -> PUT values .)
    LOCAL_VAR       reduce using rule 42 (puts -> PUT values .)
    INTEGER         reduce using rule 42 (puts -> PUT values .)
    FLOAT           reduce using rule 42 (puts -> PUT values .)
    STRING          reduce using rule 42 (puts -> PUT values .)
    LEFTPAR         reduce using rule 42 (puts -> PUT values .)
    SET             reduce using rule 42 (puts -> PUT values .)
    IF              reduce using rule 42 (puts -> PUT values .)
    WHILE           reduce using rule 42 (puts -> PUT values .)
    UNLESS          reduce using rule 42 (puts -> PUT values .)
    INSTANCE_VAR    reduce using rule 42 (puts -> PUT values .)
    CLASS_VAR       reduce using rule 42 (puts -> PUT values .)
    GLOBAL_VAR      reduce using rule 42 (puts -> PUT values .)
    CONSTANT        reduce using rule 42 (puts -> PUT values .)
    NIL             reduce using rule 42 (puts -> PUT values .)
    SYMBOL          reduce using rule 42 (puts -> PUT values .)
    LEFT_COR        reduce using rule 42 (puts -> PUT values .)
    PERCENTW        reduce using rule 42 (puts -> PUT values .)
    ARRAY           reduce using rule 42 (puts -> PUT values .)
    $end            reduce using rule 42 (puts -> PUT values .)
    RBRACE          reduce using rule 42 (puts -> PUT values .)
    END             reduce using rule 42 (puts -> PUT values .)
    END_LOWER       reduce using rule 42 (puts -> PUT values .)
    ELSE            reduce using rule 42 (puts -> PUT values .)


state 64

    (31) values -> value .
    (32) values -> value . COMMA values

    PUT             reduce using rule 31 (values -> value .)
    GETS            reduce using rule 31 (values -> value .)
    LOCAL_VAR       reduce using rule 31 (values -> value .)
    INTEGER         reduce using rule 31 (values -> value .)
    FLOAT           reduce using rule 31 (values -> value .)
    STRING          reduce using rule 31 (values -> value .)
    LEFTPAR         reduce using rule 31 (values -> value .)
    SET             reduce using rule 31 (values -> value .)
    IF              reduce using rule 31 (values -> value .)
    WHILE           reduce using rule 31 (values -> value .)
    UNLESS          reduce using rule 31 (values -> value .)
    INSTANCE_VAR    reduce using rule 31 (values -> value .)
    CLASS_VAR       reduce using rule 31 (values -> value .)
    GLOBAL_VAR      reduce using rule 31 (values -> value .)
    CONSTANT        reduce using rule 31 (values -> value .)
    NIL             reduce using rule 31 (values -> value .)
    SYMBOL          reduce using rule 31 (values -> value .)
    LEFT_COR        reduce using rule 31 (values -> value .)
    PERCENTW        reduce using rule 31 (values -> value .)
    ARRAY           reduce using rule 31 (values -> value .)
    $end            reduce using rule 31 (values -> value .)
    END_LOWER       reduce using rule 31 (values -> value .)
    ELSE            reduce using rule 31 (values -> value .)
    RIGHT_COR       reduce using rule 31 (values -> value .)
    RIGHTPAR        reduce using rule 31 (values -> value .)
    RBRACE          reduce using rule 31 (values -> value .)
    END             reduce using rule 31 (values -> value .)
    COMMA           shift and go to state 130


state 65

    (25) value -> var .

    COMMA           reduce using rule 25 (value -> var .)
    PUT             reduce using rule 25 (value -> var .)
    GETS            reduce using rule 25 (value -> var .)
    LOCAL_VAR       reduce using rule 25 (value -> var .)
    INTEGER         reduce using rule 25 (value -> var .)
    FLOAT           reduce using rule 25 (value -> var .)
    STRING          reduce using rule 25 (value -> var .)
    LEFTPAR         reduce using rule 25 (value -> var .)
    SET             reduce using rule 25 (value -> var .)
    IF              reduce using rule 25 (value -> var .)
    WHILE           reduce using rule 25 (value -> var .)
    UNLESS          reduce using rule 25 (value -> var .)
    INSTANCE_VAR    reduce using rule 25 (value -> var .)
    CLASS_VAR       reduce using rule 25 (value -> var .)
    GLOBAL_VAR      reduce using rule 25 (value -> var .)
    CONSTANT        reduce using rule 25 (value -> var .)
    NIL             reduce using rule 25 (value -> var .)
    SYMBOL          reduce using rule 25 (value -> var .)
    LEFT_COR        reduce using rule 25 (value -> var .)
    PERCENTW        reduce using rule 25 (value -> var .)
    ARRAY           reduce using rule 25 (value -> var .)
    $end            reduce using rule 25 (value -> var .)
    END_LOWER       reduce using rule 25 (value -> var .)
    ELSE            reduce using rule 25 (value -> var .)
    RANGEIN         reduce using rule 25 (value -> var .)
    RANGEEX         reduce using rule 25 (value -> var .)
    RIGHT_COR       reduce using rule 25 (value -> var .)
    RIGHTPAR        reduce using rule 25 (value -> var .)
    RBRACE          reduce using rule 25 (value -> var .)
    SPACE           reduce using rule 25 (value -> var .)
    END             reduce using rule 25 (value -> var .)


state 66

    (26) value -> STRING .

    COMMA           reduce using rule 26 (value -> STRING .)
    PUT             reduce using rule 26 (value -> STRING .)
    GETS            reduce using rule 26 (value -> STRING .)
    LOCAL_VAR       reduce using rule 26 (value -> STRING .)
    INTEGER         reduce using rule 26 (value -> STRING .)
    FLOAT           reduce using rule 26 (value -> STRING .)
    STRING          reduce using rule 26 (value -> STRING .)
    LEFTPAR         reduce using rule 26 (value -> STRING .)
    SET             reduce using rule 26 (value -> STRING .)
    IF              reduce using rule 26 (value -> STRING .)
    WHILE           reduce using rule 26 (value -> STRING .)
    UNLESS          reduce using rule 26 (value -> STRING .)
    INSTANCE_VAR    reduce using rule 26 (value -> STRING .)
    CLASS_VAR       reduce using rule 26 (value -> STRING .)
    GLOBAL_VAR      reduce using rule 26 (value -> STRING .)
    CONSTANT        reduce using rule 26 (value -> STRING .)
    NIL             reduce using rule 26 (value -> STRING .)
    SYMBOL          reduce using rule 26 (value -> STRING .)
    LEFT_COR        reduce using rule 26 (value -> STRING .)
    PERCENTW        reduce using rule 26 (value -> STRING .)
    ARRAY           reduce using rule 26 (value -> STRING .)
    $end            reduce using rule 26 (value -> STRING .)
    END_LOWER       reduce using rule 26 (value -> STRING .)
    ELSE            reduce using rule 26 (value -> STRING .)
    RANGEIN         reduce using rule 26 (value -> STRING .)
    RANGEEX         reduce using rule 26 (value -> STRING .)
    RIGHT_COR       reduce using rule 26 (value -> STRING .)
    RIGHTPAR        reduce using rule 26 (value -> STRING .)
    RBRACE          reduce using rule 26 (value -> STRING .)
    SPACE           reduce using rule 26 (value -> STRING .)
    END             reduce using rule 26 (value -> STRING .)


state 67

    (37) num -> FLOAT .

    COMMA           reduce using rule 37 (num -> FLOAT .)
    PUT             reduce using rule 37 (num -> FLOAT .)
    GETS            reduce using rule 37 (num -> FLOAT .)
    LOCAL_VAR       reduce using rule 37 (num -> FLOAT .)
    INTEGER         reduce using rule 37 (num -> FLOAT .)
    FLOAT           reduce using rule 37 (num -> FLOAT .)
    STRING          reduce using rule 37 (num -> FLOAT .)
    LEFTPAR         reduce using rule 37 (num -> FLOAT .)
    SET             reduce using rule 37 (num -> FLOAT .)
    IF              reduce using rule 37 (num -> FLOAT .)
    WHILE           reduce using rule 37 (num -> FLOAT .)
    UNLESS          reduce using rule 37 (num -> FLOAT .)
    INSTANCE_VAR    reduce using rule 37 (num -> FLOAT .)
    CLASS_VAR       reduce using rule 37 (num -> FLOAT .)
    GLOBAL_VAR      reduce using rule 37 (num -> FLOAT .)
    CONSTANT        reduce using rule 37 (num -> FLOAT .)
    NIL             reduce using rule 37 (num -> FLOAT .)
    SYMBOL          reduce using rule 37 (num -> FLOAT .)
    LEFT_COR        reduce using rule 37 (num -> FLOAT .)
    PERCENTW        reduce using rule 37 (num -> FLOAT .)
    ARRAY           reduce using rule 37 (num -> FLOAT .)
    $end            reduce using rule 37 (num -> FLOAT .)
    END_LOWER       reduce using rule 37 (num -> FLOAT .)
    ELSE            reduce using rule 37 (num -> FLOAT .)
    RANGEIN         reduce using rule 37 (num -> FLOAT .)
    RANGEEX         reduce using rule 37 (num -> FLOAT .)
    RIGHT_COR       reduce using rule 37 (num -> FLOAT .)
    GREATER         reduce using rule 37 (num -> FLOAT .)
    LESS            reduce using rule 37 (num -> FLOAT .)
    GREATER_EQUAL   reduce using rule 37 (num -> FLOAT .)
    LESS_EQUAL      reduce using rule 37 (num -> FLOAT .)
    EQUAL           reduce using rule 37 (num -> FLOAT .)
    NOT_EQUAL       reduce using rule 37 (num -> FLOAT .)
    COMPARE         reduce using rule 37 (num -> FLOAT .)
    RIGHTPAR        reduce using rule 37 (num -> FLOAT .)
    PLUS            reduce using rule 37 (num -> FLOAT .)
    MINUS           reduce using rule 37 (num -> FLOAT .)
    MULTIPLY        reduce using rule 37 (num -> FLOAT .)
    DIVIDE          reduce using rule 37 (num -> FLOAT .)
    MODULO          reduce using rule 37 (num -> FLOAT .)
    EXPONENT        reduce using rule 37 (num -> FLOAT .)
    RBRACE          reduce using rule 37 (num -> FLOAT .)
    SPACE           reduce using rule 37 (num -> FLOAT .)
    END             reduce using rule 37 (num -> FLOAT .)
    AND             reduce using rule 37 (num -> FLOAT .)
    OR              reduce using rule 37 (num -> FLOAT .)
    AND_RESERVED    reduce using rule 37 (num -> FLOAT .)
    OR_RESERVED     reduce using rule 37 (num -> FLOAT .)


state 68

    (38) num -> INTEGER .

    COMMA           reduce using rule 38 (num -> INTEGER .)
    PUT             reduce using rule 38 (num -> INTEGER .)
    GETS            reduce using rule 38 (num -> INTEGER .)
    LOCAL_VAR       reduce using rule 38 (num -> INTEGER .)
    INTEGER         reduce using rule 38 (num -> INTEGER .)
    FLOAT           reduce using rule 38 (num -> INTEGER .)
    STRING          reduce using rule 38 (num -> INTEGER .)
    LEFTPAR         reduce using rule 38 (num -> INTEGER .)
    SET             reduce using rule 38 (num -> INTEGER .)
    IF              reduce using rule 38 (num -> INTEGER .)
    WHILE           reduce using rule 38 (num -> INTEGER .)
    UNLESS          reduce using rule 38 (num -> INTEGER .)
    INSTANCE_VAR    reduce using rule 38 (num -> INTEGER .)
    CLASS_VAR       reduce using rule 38 (num -> INTEGER .)
    GLOBAL_VAR      reduce using rule 38 (num -> INTEGER .)
    CONSTANT        reduce using rule 38 (num -> INTEGER .)
    NIL             reduce using rule 38 (num -> INTEGER .)
    SYMBOL          reduce using rule 38 (num -> INTEGER .)
    LEFT_COR        reduce using rule 38 (num -> INTEGER .)
    PERCENTW        reduce using rule 38 (num -> INTEGER .)
    ARRAY           reduce using rule 38 (num -> INTEGER .)
    $end            reduce using rule 38 (num -> INTEGER .)
    END_LOWER       reduce using rule 38 (num -> INTEGER .)
    ELSE            reduce using rule 38 (num -> INTEGER .)
    RANGEIN         reduce using rule 38 (num -> INTEGER .)
    RANGEEX         reduce using rule 38 (num -> INTEGER .)
    RIGHT_COR       reduce using rule 38 (num -> INTEGER .)
    GREATER         reduce using rule 38 (num -> INTEGER .)
    LESS            reduce using rule 38 (num -> INTEGER .)
    GREATER_EQUAL   reduce using rule 38 (num -> INTEGER .)
    LESS_EQUAL      reduce using rule 38 (num -> INTEGER .)
    EQUAL           reduce using rule 38 (num -> INTEGER .)
    NOT_EQUAL       reduce using rule 38 (num -> INTEGER .)
    COMPARE         reduce using rule 38 (num -> INTEGER .)
    RIGHTPAR        reduce using rule 38 (num -> INTEGER .)
    PLUS            reduce using rule 38 (num -> INTEGER .)
    MINUS           reduce using rule 38 (num -> INTEGER .)
    MULTIPLY        reduce using rule 38 (num -> INTEGER .)
    DIVIDE          reduce using rule 38 (num -> INTEGER .)
    MODULO          reduce using rule 38 (num -> INTEGER .)
    EXPONENT        reduce using rule 38 (num -> INTEGER .)
    RBRACE          reduce using rule 38 (num -> INTEGER .)
    SPACE           reduce using rule 38 (num -> INTEGER .)
    END             reduce using rule 38 (num -> INTEGER .)
    AND             reduce using rule 38 (num -> INTEGER .)
    OR              reduce using rule 38 (num -> INTEGER .)
    AND_RESERVED    reduce using rule 38 (num -> INTEGER .)
    OR_RESERVED     reduce using rule 38 (num -> INTEGER .)


state 69

    (33) var -> LOCAL_VAR .

    COMMA           reduce using rule 33 (var -> LOCAL_VAR .)
    PUT             reduce using rule 33 (var -> LOCAL_VAR .)
    GETS            reduce using rule 33 (var -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 33 (var -> LOCAL_VAR .)
    INTEGER         reduce using rule 33 (var -> LOCAL_VAR .)
    FLOAT           reduce using rule 33 (var -> LOCAL_VAR .)
    STRING          reduce using rule 33 (var -> LOCAL_VAR .)
    LEFTPAR         reduce using rule 33 (var -> LOCAL_VAR .)
    SET             reduce using rule 33 (var -> LOCAL_VAR .)
    IF              reduce using rule 33 (var -> LOCAL_VAR .)
    WHILE           reduce using rule 33 (var -> LOCAL_VAR .)
    UNLESS          reduce using rule 33 (var -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 33 (var -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 33 (var -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 33 (var -> LOCAL_VAR .)
    CONSTANT        reduce using rule 33 (var -> LOCAL_VAR .)
    NIL             reduce using rule 33 (var -> LOCAL_VAR .)
    SYMBOL          reduce using rule 33 (var -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 33 (var -> LOCAL_VAR .)
    PERCENTW        reduce using rule 33 (var -> LOCAL_VAR .)
    ARRAY           reduce using rule 33 (var -> LOCAL_VAR .)
    $end            reduce using rule 33 (var -> LOCAL_VAR .)
    END_LOWER       reduce using rule 33 (var -> LOCAL_VAR .)
    ELSE            reduce using rule 33 (var -> LOCAL_VAR .)
    RANGEIN         reduce using rule 33 (var -> LOCAL_VAR .)
    RANGEEX         reduce using rule 33 (var -> LOCAL_VAR .)
    RIGHT_COR       reduce using rule 33 (var -> LOCAL_VAR .)
    GREATER         reduce using rule 33 (var -> LOCAL_VAR .)
    LESS            reduce using rule 33 (var -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 33 (var -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 33 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 33 (var -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 33 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 33 (var -> LOCAL_VAR .)
    RIGHTPAR        reduce using rule 33 (var -> LOCAL_VAR .)
    RBRACE          reduce using rule 33 (var -> LOCAL_VAR .)
    SPACE           reduce using rule 33 (var -> LOCAL_VAR .)
    END             reduce using rule 33 (var -> LOCAL_VAR .)
    AND             reduce using rule 33 (var -> LOCAL_VAR .)
    OR              reduce using rule 33 (var -> LOCAL_VAR .)
    AND_RESERVED    reduce using rule 33 (var -> LOCAL_VAR .)
    OR_RESERVED     reduce using rule 33 (var -> LOCAL_VAR .)


state 70

    (34) var -> INSTANCE_VAR .

    COMMA           reduce using rule 34 (var -> INSTANCE_VAR .)
    PUT             reduce using rule 34 (var -> INSTANCE_VAR .)
    GETS            reduce using rule 34 (var -> INSTANCE_VAR .)
    LOCAL_VAR       reduce using rule 34 (var -> INSTANCE_VAR .)
    INTEGER         reduce using rule 34 (var -> INSTANCE_VAR .)
    FLOAT           reduce using rule 34 (var -> INSTANCE_VAR .)
    STRING          reduce using rule 34 (var -> INSTANCE_VAR .)
    LEFTPAR         reduce using rule 34 (var -> INSTANCE_VAR .)
    SET             reduce using rule 34 (var -> INSTANCE_VAR .)
    IF              reduce using rule 34 (var -> INSTANCE_VAR .)
    WHILE           reduce using rule 34 (var -> INSTANCE_VAR .)
    UNLESS          reduce using rule 34 (var -> INSTANCE_VAR .)
    INSTANCE_VAR    reduce using rule 34 (var -> INSTANCE_VAR .)
    CLASS_VAR       reduce using rule 34 (var -> INSTANCE_VAR .)
    GLOBAL_VAR      reduce using rule 34 (var -> INSTANCE_VAR .)
    CONSTANT        reduce using rule 34 (var -> INSTANCE_VAR .)
    NIL             reduce using rule 34 (var -> INSTANCE_VAR .)
    SYMBOL          reduce using rule 34 (var -> INSTANCE_VAR .)
    LEFT_COR        reduce using rule 34 (var -> INSTANCE_VAR .)
    PERCENTW        reduce using rule 34 (var -> INSTANCE_VAR .)
    ARRAY           reduce using rule 34 (var -> INSTANCE_VAR .)
    $end            reduce using rule 34 (var -> INSTANCE_VAR .)
    END_LOWER       reduce using rule 34 (var -> INSTANCE_VAR .)
    ELSE            reduce using rule 34 (var -> INSTANCE_VAR .)
    RANGEIN         reduce using rule 34 (var -> INSTANCE_VAR .)
    RANGEEX         reduce using rule 34 (var -> INSTANCE_VAR .)
    RIGHT_COR       reduce using rule 34 (var -> INSTANCE_VAR .)
    GREATER         reduce using rule 34 (var -> INSTANCE_VAR .)
    LESS            reduce using rule 34 (var -> INSTANCE_VAR .)
    GREATER_EQUAL   reduce using rule 34 (var -> INSTANCE_VAR .)
    LESS_EQUAL      reduce using rule 34 (var -> INSTANCE_VAR .)
    EQUAL           reduce using rule 34 (var -> INSTANCE_VAR .)
    NOT_EQUAL       reduce using rule 34 (var -> INSTANCE_VAR .)
    COMPARE         reduce using rule 34 (var -> INSTANCE_VAR .)
    RIGHTPAR        reduce using rule 34 (var -> INSTANCE_VAR .)
    RBRACE          reduce using rule 34 (var -> INSTANCE_VAR .)
    SPACE           reduce using rule 34 (var -> INSTANCE_VAR .)
    END             reduce using rule 34 (var -> INSTANCE_VAR .)
    AND             reduce using rule 34 (var -> INSTANCE_VAR .)
    OR              reduce using rule 34 (var -> INSTANCE_VAR .)
    AND_RESERVED    reduce using rule 34 (var -> INSTANCE_VAR .)
    OR_RESERVED     reduce using rule 34 (var -> INSTANCE_VAR .)


state 71

    (35) var -> CLASS_VAR .

    COMMA           reduce using rule 35 (var -> CLASS_VAR .)
    PUT             reduce using rule 35 (var -> CLASS_VAR .)
    GETS            reduce using rule 35 (var -> CLASS_VAR .)
    LOCAL_VAR       reduce using rule 35 (var -> CLASS_VAR .)
    INTEGER         reduce using rule 35 (var -> CLASS_VAR .)
    FLOAT           reduce using rule 35 (var -> CLASS_VAR .)
    STRING          reduce using rule 35 (var -> CLASS_VAR .)
    LEFTPAR         reduce using rule 35 (var -> CLASS_VAR .)
    SET             reduce using rule 35 (var -> CLASS_VAR .)
    IF              reduce using rule 35 (var -> CLASS_VAR .)
    WHILE           reduce using rule 35 (var -> CLASS_VAR .)
    UNLESS          reduce using rule 35 (var -> CLASS_VAR .)
    INSTANCE_VAR    reduce using rule 35 (var -> CLASS_VAR .)
    CLASS_VAR       reduce using rule 35 (var -> CLASS_VAR .)
    GLOBAL_VAR      reduce using rule 35 (var -> CLASS_VAR .)
    CONSTANT        reduce using rule 35 (var -> CLASS_VAR .)
    NIL             reduce using rule 35 (var -> CLASS_VAR .)
    SYMBOL          reduce using rule 35 (var -> CLASS_VAR .)
    LEFT_COR        reduce using rule 35 (var -> CLASS_VAR .)
    PERCENTW        reduce using rule 35 (var -> CLASS_VAR .)
    ARRAY           reduce using rule 35 (var -> CLASS_VAR .)
    $end            reduce using rule 35 (var -> CLASS_VAR .)
    END_LOWER       reduce using rule 35 (var -> CLASS_VAR .)
    ELSE            reduce using rule 35 (var -> CLASS_VAR .)
    RANGEIN         reduce using rule 35 (var -> CLASS_VAR .)
    RANGEEX         reduce using rule 35 (var -> CLASS_VAR .)
    RIGHT_COR       reduce using rule 35 (var -> CLASS_VAR .)
    GREATER         reduce using rule 35 (var -> CLASS_VAR .)
    LESS            reduce using rule 35 (var -> CLASS_VAR .)
    GREATER_EQUAL   reduce using rule 35 (var -> CLASS_VAR .)
    LESS_EQUAL      reduce using rule 35 (var -> CLASS_VAR .)
    EQUAL           reduce using rule 35 (var -> CLASS_VAR .)
    NOT_EQUAL       reduce using rule 35 (var -> CLASS_VAR .)
    COMPARE         reduce using rule 35 (var -> CLASS_VAR .)
    RIGHTPAR        reduce using rule 35 (var -> CLASS_VAR .)
    RBRACE          reduce using rule 35 (var -> CLASS_VAR .)
    SPACE           reduce using rule 35 (var -> CLASS_VAR .)
    END             reduce using rule 35 (var -> CLASS_VAR .)
    AND             reduce using rule 35 (var -> CLASS_VAR .)
    OR              reduce using rule 35 (var -> CLASS_VAR .)
    AND_RESERVED    reduce using rule 35 (var -> CLASS_VAR .)
    OR_RESERVED     reduce using rule 35 (var -> CLASS_VAR .)


state 72

    (36) var -> GLOBAL_VAR .

    COMMA           reduce using rule 36 (var -> GLOBAL_VAR .)
    PUT             reduce using rule 36 (var -> GLOBAL_VAR .)
    GETS            reduce using rule 36 (var -> GLOBAL_VAR .)
    LOCAL_VAR       reduce using rule 36 (var -> GLOBAL_VAR .)
    INTEGER         reduce using rule 36 (var -> GLOBAL_VAR .)
    FLOAT           reduce using rule 36 (var -> GLOBAL_VAR .)
    STRING          reduce using rule 36 (var -> GLOBAL_VAR .)
    LEFTPAR         reduce using rule 36 (var -> GLOBAL_VAR .)
    SET             reduce using rule 36 (var -> GLOBAL_VAR .)
    IF              reduce using rule 36 (var -> GLOBAL_VAR .)
    WHILE           reduce using rule 36 (var -> GLOBAL_VAR .)
    UNLESS          reduce using rule 36 (var -> GLOBAL_VAR .)
    INSTANCE_VAR    reduce using rule 36 (var -> GLOBAL_VAR .)
    CLASS_VAR       reduce using rule 36 (var -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 36 (var -> GLOBAL_VAR .)
    CONSTANT        reduce using rule 36 (var -> GLOBAL_VAR .)
    NIL             reduce using rule 36 (var -> GLOBAL_VAR .)
    SYMBOL          reduce using rule 36 (var -> GLOBAL_VAR .)
    LEFT_COR        reduce using rule 36 (var -> GLOBAL_VAR .)
    PERCENTW        reduce using rule 36 (var -> GLOBAL_VAR .)
    ARRAY           reduce using rule 36 (var -> GLOBAL_VAR .)
    $end            reduce using rule 36 (var -> GLOBAL_VAR .)
    END_LOWER       reduce using rule 36 (var -> GLOBAL_VAR .)
    ELSE            reduce using rule 36 (var -> GLOBAL_VAR .)
    RANGEIN         reduce using rule 36 (var -> GLOBAL_VAR .)
    RANGEEX         reduce using rule 36 (var -> GLOBAL_VAR .)
    RIGHT_COR       reduce using rule 36 (var -> GLOBAL_VAR .)
    GREATER         reduce using rule 36 (var -> GLOBAL_VAR .)
    LESS            reduce using rule 36 (var -> GLOBAL_VAR .)
    GREATER_EQUAL   reduce using rule 36 (var -> GLOBAL_VAR .)
    LESS_EQUAL      reduce using rule 36 (var -> GLOBAL_VAR .)
    EQUAL           reduce using rule 36 (var -> GLOBAL_VAR .)
    NOT_EQUAL       reduce using rule 36 (var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 36 (var -> GLOBAL_VAR .)
    RIGHTPAR        reduce using rule 36 (var -> GLOBAL_VAR .)
    RBRACE          reduce using rule 36 (var -> GLOBAL_VAR .)
    SPACE           reduce using rule 36 (var -> GLOBAL_VAR .)
    END             reduce using rule 36 (var -> GLOBAL_VAR .)
    AND             reduce using rule 36 (var -> GLOBAL_VAR .)
    OR              reduce using rule 36 (var -> GLOBAL_VAR .)
    AND_RESERVED    reduce using rule 36 (var -> GLOBAL_VAR .)
    OR_RESERVED     reduce using rule 36 (var -> GLOBAL_VAR .)


state 73

    (39) gets -> GETS DOT . CHOMP DOT TO_F
    (40) gets -> GETS DOT . CHOMP DOT TO_I
    (41) gets -> GETS DOT . CHOMP

    CHOMP           shift and go to state 131


state 74

    (140) set_operations -> set_operations set_binary_operators . set_expression
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR

    SET             shift and go to state 45

    set_expression                 shift and go to state 132

state 75

    (142) set_binary_operators -> PLUS .

    SET             reduce using rule 142 (set_binary_operators -> PLUS .)


state 76

    (143) set_binary_operators -> MINUS .

    SET             reduce using rule 143 (set_binary_operators -> MINUS .)


state 77

    (144) set_binary_operators -> AMPERSAND .

    SET             reduce using rule 144 (set_binary_operators -> AMPERSAND .)


state 78

    (145) set_binary_operators -> PIPE .

    SET             reduce using rule 145 (set_binary_operators -> PIPE .)


state 79

    (146) set_binary_operators -> CARET .

    SET             reduce using rule 146 (set_binary_operators -> CARET .)


state 80

    (99) method_call -> LOCAL_VAR LEFTPAR . values RIGHTPAR
    (100) method_call -> LOCAL_VAR LEFTPAR . RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 134
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 133
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 81

    (168) proc_call -> LOCAL_VAR DOT . CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> LOCAL_VAR DOT . LEFTPAR values RIGHTPAR
    (170) proc_call -> LOCAL_VAR DOT . CALL LEFTPAR RIGHTPAR
    (171) proc_call -> LOCAL_VAR DOT . LEFTPAR RIGHTPAR
    (77) to_string -> LOCAL_VAR DOT . TO_S

    CALL            shift and go to state 135
    LEFTPAR         shift and go to state 136
    TO_S            shift and go to state 137


state 82

    (172) proc_call -> LOCAL_VAR LEFT_COR . values RIGHT_COR
    (173) proc_call -> LOCAL_VAR LEFT_COR . RIGHT_COR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 139
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 138
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 83

    (125) declaraciones -> LOCAL_VAR ASSIGN . arithmetic_production
    (83) hash_var -> LOCAL_VAR ASSIGN . LBRACE hash_values RBRACE
    (84) hash_var -> LOCAL_VAR ASSIGN . LBRACE RBRACE
    (89) variable_declaration -> LOCAL_VAR ASSIGN . value
    (94) store_conditional_result -> LOCAL_VAR ASSIGN . condiciones
    (141) declare_data_structures -> LOCAL_VAR ASSIGN . set_expression
    (47) var_arreglo -> LOCAL_VAR ASSIGN . array
    (82) declaracion_concatenar_string -> LOCAL_VAR ASSIGN . concatenar_string
    (167) proc_assignment -> LOCAL_VAR ASSIGN . proc_expression
    (149) arithmetic_production -> . num
    (150) arithmetic_production -> . LOCAL_VAR
    (151) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (152) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (78) concatenar_string -> . STRING PLUS STRING
    (79) concatenar_string -> . STRING PLUS LOCAL_VAR
    (80) concatenar_string -> . LOCAL_VAR PLUS STRING
    (81) concatenar_string -> . LOCAL_VAR PLUS LOCAL_VAR
    (166) proc_expression -> . PROC DOT NEW block_expression
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    LBRACE          shift and go to state 142
    LOCAL_VAR       shift and go to state 140
    STRING          shift and go to state 151
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    SET             shift and go to state 45
    PROC            shift and go to state 152
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    arithmetic_production          shift and go to state 141
    value                          shift and go to state 143
    condiciones                    shift and go to state 144
    set_expression                 shift and go to state 145
    array                          shift and go to state 146
    concatenar_string              shift and go to state 147
    proc_expression                shift and go to state 148
    num                            shift and go to state 149
    var                            shift and go to state 150
    condicion                      shift and go to state 100
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43

state 84

    (90) variable_declaration -> LOCAL_VAR PLUS_ASSIGN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 153
    num                            shift and go to state 53
    var                            shift and go to state 65

state 85

    (91) variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 154
    num                            shift and go to state 53
    var                            shift and go to state 65

state 86

    (92) variable_declaration -> LOCAL_VAR MINUS_ASSIGN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 155
    num                            shift and go to state 53
    var                            shift and go to state 65

state 87

    (93) variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 156
    num                            shift and go to state 53
    var                            shift and go to state 65

state 88

    (135) range_expression -> LEFTPAR value . RANGEIN value RIGHTPAR
    (136) range_expression -> LEFTPAR value . RANGEEX value RIGHTPAR

    RANGEIN         shift and go to state 157
    RANGEEX         shift and go to state 158


state 89

    (48) array_explicito -> LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 159


state 90

    (49) array_explicito -> LEFT_COR RIGHT_COR .

    PUT             reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    LEFTPAR         reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    SET             reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    IF              reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    $end            reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    ELSE            reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)
    RIGHTPAR        reduce using rule 49 (array_explicito -> LEFT_COR RIGHT_COR .)


state 91

    (56) acceder_arreglo -> var_arreglo LEFT_COR . INTEGER RIGHT_COR

    INTEGER         shift and go to state 160


state 92

    (131) comparador -> value EQUAL . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 161
    num                            shift and go to state 53
    var                            shift and go to state 65

state 93

    (132) comparador -> value COMPARE . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 162
    num                            shift and go to state 53
    var                            shift and go to state 65

state 94

    (133) range_expression -> value RANGEIN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 163
    num                            shift and go to state 53
    var                            shift and go to state 65

state 95

    (134) range_expression -> value RANGEEX . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 164
    num                            shift and go to state 53
    var                            shift and go to state 65

state 96

    (88) hash_operations -> hash_access ASSIGN . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 165
    num                            shift and go to state 53
    var                            shift and go to state 65

state 97

    (137) set_expression -> SET DOT . NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR

    NEW             shift and go to state 166


state 98

    (138) set_expression -> SET LEFT_COR . values RIGHT_COR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 167
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 99

    (57) ifStatement -> IF condiciones . codigo END_LOWER
    (58) ifStatement -> IF condiciones . codigo else_statement END_LOWER
    (60) condiciones -> condiciones . conectores condiciones
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174
    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    codigo                         shift and go to state 168
    conectores                     shift and go to state 169
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 100

    (59) condiciones -> condicion .

    AND             reduce using rule 59 (condiciones -> condicion .)
    OR              reduce using rule 59 (condiciones -> condicion .)
    AND_RESERVED    reduce using rule 59 (condiciones -> condicion .)
    OR_RESERVED     reduce using rule 59 (condiciones -> condicion .)
    EQUAL           reduce using rule 59 (condiciones -> condicion .)
    PUT             reduce using rule 59 (condiciones -> condicion .)
    GETS            reduce using rule 59 (condiciones -> condicion .)
    LOCAL_VAR       reduce using rule 59 (condiciones -> condicion .)
    INTEGER         reduce using rule 59 (condiciones -> condicion .)
    FLOAT           reduce using rule 59 (condiciones -> condicion .)
    STRING          reduce using rule 59 (condiciones -> condicion .)
    LEFTPAR         reduce using rule 59 (condiciones -> condicion .)
    SET             reduce using rule 59 (condiciones -> condicion .)
    IF              reduce using rule 59 (condiciones -> condicion .)
    WHILE           reduce using rule 59 (condiciones -> condicion .)
    UNLESS          reduce using rule 59 (condiciones -> condicion .)
    INSTANCE_VAR    reduce using rule 59 (condiciones -> condicion .)
    CLASS_VAR       reduce using rule 59 (condiciones -> condicion .)
    GLOBAL_VAR      reduce using rule 59 (condiciones -> condicion .)
    CONSTANT        reduce using rule 59 (condiciones -> condicion .)
    NIL             reduce using rule 59 (condiciones -> condicion .)
    SYMBOL          reduce using rule 59 (condiciones -> condicion .)
    LEFT_COR        reduce using rule 59 (condiciones -> condicion .)
    PERCENTW        reduce using rule 59 (condiciones -> condicion .)
    ARRAY           reduce using rule 59 (condiciones -> condicion .)
    $end            reduce using rule 59 (condiciones -> condicion .)
    END_LOWER       reduce using rule 59 (condiciones -> condicion .)
    ELSE            reduce using rule 59 (condiciones -> condicion .)
    RBRACE          reduce using rule 59 (condiciones -> condicion .)
    END             reduce using rule 59 (condiciones -> condicion .)


state 101

    (66) condicion -> num . operComp num
    (68) condicion -> num . operComp var
    (69) operComp -> . GREATER
    (70) operComp -> . LESS
    (71) operComp -> . GREATER_EQUAL
    (72) operComp -> . LESS_EQUAL
    (73) operComp -> . EQUAL
    (74) operComp -> . NOT_EQUAL
    (75) operComp -> . COMPARE

    GREATER         shift and go to state 176
    LESS            shift and go to state 177
    GREATER_EQUAL   shift and go to state 178
    LESS_EQUAL      shift and go to state 179
    EQUAL           shift and go to state 180
    NOT_EQUAL       shift and go to state 181
    COMPARE         shift and go to state 182

    operComp                       shift and go to state 175

state 102

    (67) condicion -> var . operComp num
    (69) operComp -> . GREATER
    (70) operComp -> . LESS
    (71) operComp -> . GREATER_EQUAL
    (72) operComp -> . LESS_EQUAL
    (73) operComp -> . EQUAL
    (74) operComp -> . NOT_EQUAL
    (75) operComp -> . COMPARE

    GREATER         shift and go to state 176
    LESS            shift and go to state 177
    GREATER_EQUAL   shift and go to state 178
    LESS_EQUAL      shift and go to state 179
    EQUAL           shift and go to state 180
    NOT_EQUAL       shift and go to state 181
    COMPARE         shift and go to state 182

    operComp                       shift and go to state 183

state 103

    (97) while_statement -> WHILE condiciones . codigo END_LOWER
    (60) condiciones -> condiciones . conectores condiciones
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174
    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    codigo                         shift and go to state 184
    conectores                     shift and go to state 169
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 104

    (147) unless_expression -> UNLESS boolean_expression . THEN expresion END
    (148) unless_expression -> UNLESS boolean_expression . THEN expresion ELSE expresion END

    THEN            shift and go to state 185


state 105

    (102) boolean_expression -> expression . GREATER expression
    (103) boolean_expression -> expression . LESS expression
    (104) boolean_expression -> expression . GREATER_EQUAL expression
    (105) boolean_expression -> expression . LESS_EQUAL expression
    (106) boolean_expression -> expression . EQUAL expression
    (107) boolean_expression -> expression . NOT_EQUAL expression

    GREATER         shift and go to state 186
    LESS            shift and go to state 187
    GREATER_EQUAL   shift and go to state 188
    LESS_EQUAL      shift and go to state 189
    EQUAL           shift and go to state 190
    NOT_EQUAL       shift and go to state 191


state 106

    (108) boolean_expression -> boolean_value .

    THEN            reduce using rule 108 (boolean_expression -> boolean_value .)


state 107

    (111) expression -> INTEGER .

    GREATER         reduce using rule 111 (expression -> INTEGER .)
    LESS            reduce using rule 111 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 111 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 111 (expression -> INTEGER .)
    EQUAL           reduce using rule 111 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 111 (expression -> INTEGER .)
    THEN            reduce using rule 111 (expression -> INTEGER .)


state 108

    (112) expression -> FLOAT .

    GREATER         reduce using rule 112 (expression -> FLOAT .)
    LESS            reduce using rule 112 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 112 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 112 (expression -> FLOAT .)
    EQUAL           reduce using rule 112 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 112 (expression -> FLOAT .)
    THEN            reduce using rule 112 (expression -> FLOAT .)


state 109

    (114) expression -> STRING .

    GREATER         reduce using rule 114 (expression -> STRING .)
    LESS            reduce using rule 114 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 114 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 114 (expression -> STRING .)
    EQUAL           reduce using rule 114 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 114 (expression -> STRING .)
    THEN            reduce using rule 114 (expression -> STRING .)


state 110

    (109) boolean_value -> TRUE .

    THEN            reduce using rule 109 (boolean_value -> TRUE .)


state 111

    (110) boolean_value -> FALSE .

    THEN            reduce using rule 110 (boolean_value -> FALSE .)


state 112

    (115) variable -> LOCAL_VAR .

    GREATER         reduce using rule 115 (variable -> LOCAL_VAR .)
    LESS            reduce using rule 115 (variable -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 115 (variable -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 115 (variable -> LOCAL_VAR .)
    EQUAL           reduce using rule 115 (variable -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 115 (variable -> LOCAL_VAR .)
    THEN            reduce using rule 115 (variable -> LOCAL_VAR .)


state 113

    (116) variable -> INSTANCE_VAR .

    GREATER         reduce using rule 116 (variable -> INSTANCE_VAR .)
    LESS            reduce using rule 116 (variable -> INSTANCE_VAR .)
    GREATER_EQUAL   reduce using rule 116 (variable -> INSTANCE_VAR .)
    LESS_EQUAL      reduce using rule 116 (variable -> INSTANCE_VAR .)
    EQUAL           reduce using rule 116 (variable -> INSTANCE_VAR .)
    NOT_EQUAL       reduce using rule 116 (variable -> INSTANCE_VAR .)
    THEN            reduce using rule 116 (variable -> INSTANCE_VAR .)


state 114

    (117) variable -> CLASS_VAR .

    GREATER         reduce using rule 117 (variable -> CLASS_VAR .)
    LESS            reduce using rule 117 (variable -> CLASS_VAR .)
    GREATER_EQUAL   reduce using rule 117 (variable -> CLASS_VAR .)
    LESS_EQUAL      reduce using rule 117 (variable -> CLASS_VAR .)
    EQUAL           reduce using rule 117 (variable -> CLASS_VAR .)
    NOT_EQUAL       reduce using rule 117 (variable -> CLASS_VAR .)
    THEN            reduce using rule 117 (variable -> CLASS_VAR .)


state 115

    (118) variable -> GLOBAL_VAR .

    GREATER         reduce using rule 118 (variable -> GLOBAL_VAR .)
    LESS            reduce using rule 118 (variable -> GLOBAL_VAR .)
    GREATER_EQUAL   reduce using rule 118 (variable -> GLOBAL_VAR .)
    LESS_EQUAL      reduce using rule 118 (variable -> GLOBAL_VAR .)
    EQUAL           reduce using rule 118 (variable -> GLOBAL_VAR .)
    NOT_EQUAL       reduce using rule 118 (variable -> GLOBAL_VAR .)
    THEN            reduce using rule 118 (variable -> GLOBAL_VAR .)


state 116

    (87) hash_access -> var LBRACE . value RBRACE
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    var                            shift and go to state 65
    value                          shift and go to state 192
    num                            shift and go to state 53

state 117

    (50) array_implicito -> PERCENTW LEFT_COR . values_space RIGHT_COR
    (51) array_implicito -> PERCENTW LEFT_COR . RIGHT_COR
    (29) values_space -> . value SPACE values_space
    (30) values_space -> . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 194
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values_space                   shift and go to state 193
    value                          shift and go to state 195
    num                            shift and go to state 53
    var                            shift and go to state 65

state 118

    (52) array_creation -> ARRAY LEFTPAR . array_explicito RIGHTPAR
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR

    LEFT_COR        shift and go to state 28

    array_explicito                shift and go to state 196

state 119

    (53) newArray -> ARRAY DOT . NEW
    (54) newArray -> ARRAY DOT . NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> ARRAY DOT . NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    NEW             shift and go to state 197


state 120

    (159) block_expression -> LBRACE expresion . RBRACE

    RBRACE          shift and go to state 198


state 121

    (162) block_expression -> LBRACE PIPE . LOCAL_VAR PIPE expresion RBRACE

    LOCAL_VAR       shift and go to state 199


state 122

    (128) expresion -> puts .

    RBRACE          reduce using rule 128 (expresion -> puts .)
    END             reduce using rule 128 (expresion -> puts .)
    END_LOWER       reduce using rule 128 (expresion -> puts .)
    ELSE            reduce using rule 128 (expresion -> puts .)


state 123

    (129) expresion -> gets .

    RBRACE          reduce using rule 129 (expresion -> gets .)
    END             reduce using rule 129 (expresion -> gets .)
    END_LOWER       reduce using rule 129 (expresion -> gets .)
    ELSE            reduce using rule 129 (expresion -> gets .)


state 124

    (130) expresion -> print_statement .

    RBRACE          reduce using rule 130 (expresion -> print_statement .)
    END             reduce using rule 130 (expresion -> print_statement .)
    END_LOWER       reduce using rule 130 (expresion -> print_statement .)
    ELSE            reduce using rule 130 (expresion -> print_statement .)


state 125

    (174) expresion -> condition_with_connectors .

    RBRACE          reduce using rule 174 (expresion -> condition_with_connectors .)
    END             reduce using rule 174 (expresion -> condition_with_connectors .)
    END_LOWER       reduce using rule 174 (expresion -> condition_with_connectors .)
    ELSE            reduce using rule 174 (expresion -> condition_with_connectors .)


state 126

    (42) puts -> PUT . values
    (101) print_statement -> PUT . LEFTPAR values RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    LEFTPAR         shift and go to state 200
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 63
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 127

    (98) condition_with_connectors -> condiciones . conectores condiciones
    (60) condiciones -> condiciones . conectores condiciones
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL

    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174

    conectores                     shift and go to state 201

state 128

    (160) block_expression -> DO expresion . END
    (161) block_expression -> DO expresion . END_LOWER

    END             shift and go to state 202
    END_LOWER       shift and go to state 203


state 129

    (163) block_expression -> DO PIPE . LOCAL_VAR PIPE expresion END
    (164) block_expression -> DO PIPE . LOCAL_VAR PIPE expresion END_LOWER

    LOCAL_VAR       shift and go to state 204


state 130

    (32) values -> value COMMA . values
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 64
    values                         shift and go to state 205
    num                            shift and go to state 53
    var                            shift and go to state 65

state 131

    (39) gets -> GETS DOT CHOMP . DOT TO_F
    (40) gets -> GETS DOT CHOMP . DOT TO_I
    (41) gets -> GETS DOT CHOMP .

    DOT             shift and go to state 206
    PUT             reduce using rule 41 (gets -> GETS DOT CHOMP .)
    GETS            reduce using rule 41 (gets -> GETS DOT CHOMP .)
    LOCAL_VAR       reduce using rule 41 (gets -> GETS DOT CHOMP .)
    INTEGER         reduce using rule 41 (gets -> GETS DOT CHOMP .)
    FLOAT           reduce using rule 41 (gets -> GETS DOT CHOMP .)
    STRING          reduce using rule 41 (gets -> GETS DOT CHOMP .)
    LEFTPAR         reduce using rule 41 (gets -> GETS DOT CHOMP .)
    SET             reduce using rule 41 (gets -> GETS DOT CHOMP .)
    IF              reduce using rule 41 (gets -> GETS DOT CHOMP .)
    WHILE           reduce using rule 41 (gets -> GETS DOT CHOMP .)
    UNLESS          reduce using rule 41 (gets -> GETS DOT CHOMP .)
    INSTANCE_VAR    reduce using rule 41 (gets -> GETS DOT CHOMP .)
    CLASS_VAR       reduce using rule 41 (gets -> GETS DOT CHOMP .)
    GLOBAL_VAR      reduce using rule 41 (gets -> GETS DOT CHOMP .)
    CONSTANT        reduce using rule 41 (gets -> GETS DOT CHOMP .)
    NIL             reduce using rule 41 (gets -> GETS DOT CHOMP .)
    SYMBOL          reduce using rule 41 (gets -> GETS DOT CHOMP .)
    LEFT_COR        reduce using rule 41 (gets -> GETS DOT CHOMP .)
    PERCENTW        reduce using rule 41 (gets -> GETS DOT CHOMP .)
    ARRAY           reduce using rule 41 (gets -> GETS DOT CHOMP .)
    $end            reduce using rule 41 (gets -> GETS DOT CHOMP .)
    RBRACE          reduce using rule 41 (gets -> GETS DOT CHOMP .)
    END             reduce using rule 41 (gets -> GETS DOT CHOMP .)
    END_LOWER       reduce using rule 41 (gets -> GETS DOT CHOMP .)
    ELSE            reduce using rule 41 (gets -> GETS DOT CHOMP .)


state 132

    (140) set_operations -> set_operations set_binary_operators set_expression .

    PLUS            reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    MINUS           reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    AMPERSAND       reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    PIPE            reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    CARET           reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    PUT             reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    GETS            reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    LOCAL_VAR       reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    INTEGER         reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    FLOAT           reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    STRING          reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    LEFTPAR         reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    SET             reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    IF              reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    WHILE           reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    UNLESS          reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    INSTANCE_VAR    reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    CLASS_VAR       reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    GLOBAL_VAR      reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    CONSTANT        reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    NIL             reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    SYMBOL          reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    LEFT_COR        reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    PERCENTW        reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    ARRAY           reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    $end            reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    END_LOWER       reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)
    ELSE            reduce using rule 140 (set_operations -> set_operations set_binary_operators set_expression .)


state 133

    (99) method_call -> LOCAL_VAR LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 207


state 134

    (100) method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .

    LBRACE          reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    DO              reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    PUT             reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    LEFTPAR         reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    SET             reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    IF              reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    $end            reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    ELSE            reduce using rule 100 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)


state 135

    (168) proc_call -> LOCAL_VAR DOT CALL . LEFTPAR values RIGHTPAR
    (170) proc_call -> LOCAL_VAR DOT CALL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 208


state 136

    (169) proc_call -> LOCAL_VAR DOT LEFTPAR . values RIGHTPAR
    (171) proc_call -> LOCAL_VAR DOT LEFTPAR . RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 210
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 209
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 137

    (77) to_string -> LOCAL_VAR DOT TO_S .

    PUT             reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    GETS            reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    LOCAL_VAR       reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    INTEGER         reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    FLOAT           reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    STRING          reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    LEFTPAR         reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    SET             reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    IF              reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    WHILE           reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    UNLESS          reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    INSTANCE_VAR    reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    CLASS_VAR       reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    GLOBAL_VAR      reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    CONSTANT        reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    NIL             reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    SYMBOL          reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    LEFT_COR        reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    PERCENTW        reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    ARRAY           reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    $end            reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    END_LOWER       reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)
    ELSE            reduce using rule 77 (to_string -> LOCAL_VAR DOT TO_S .)


state 138

    (172) proc_call -> LOCAL_VAR LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 211


state 139

    (173) proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .

    PUT             reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    LEFTPAR         reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    SET             reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    IF              reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    $end            reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    ELSE            reduce using rule 173 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)


state 140

    (150) arithmetic_production -> LOCAL_VAR .
    (152) arithmetic_production -> LOCAL_VAR . arithmetic_operators arithmetic_production
    (80) concatenar_string -> LOCAL_VAR . PLUS STRING
    (81) concatenar_string -> LOCAL_VAR . PLUS LOCAL_VAR
    (33) var -> LOCAL_VAR .
    (153) arithmetic_operators -> . PLUS
    (154) arithmetic_operators -> . MINUS
    (155) arithmetic_operators -> . MULTIPLY
    (156) arithmetic_operators -> . DIVIDE
    (157) arithmetic_operators -> . MODULO
    (158) arithmetic_operators -> . EXPONENT

  ! reduce/reduce conflict for PUT resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for GETS resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for SET resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for IF resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for NIL resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for ARRAY resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for $end resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 33 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 33 (var -> LOCAL_VAR .)
    PLUS            shift and go to state 213
    GREATER         reduce using rule 33 (var -> LOCAL_VAR .)
    LESS            reduce using rule 33 (var -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 33 (var -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 33 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 33 (var -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 33 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 33 (var -> LOCAL_VAR .)
    PUT             reduce using rule 33 (var -> LOCAL_VAR .)
    GETS            reduce using rule 33 (var -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 33 (var -> LOCAL_VAR .)
    INTEGER         reduce using rule 33 (var -> LOCAL_VAR .)
    FLOAT           reduce using rule 33 (var -> LOCAL_VAR .)
    STRING          reduce using rule 33 (var -> LOCAL_VAR .)
    LEFTPAR         reduce using rule 33 (var -> LOCAL_VAR .)
    SET             reduce using rule 33 (var -> LOCAL_VAR .)
    IF              reduce using rule 33 (var -> LOCAL_VAR .)
    WHILE           reduce using rule 33 (var -> LOCAL_VAR .)
    UNLESS          reduce using rule 33 (var -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 33 (var -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 33 (var -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 33 (var -> LOCAL_VAR .)
    CONSTANT        reduce using rule 33 (var -> LOCAL_VAR .)
    NIL             reduce using rule 33 (var -> LOCAL_VAR .)
    SYMBOL          reduce using rule 33 (var -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 33 (var -> LOCAL_VAR .)
    PERCENTW        reduce using rule 33 (var -> LOCAL_VAR .)
    ARRAY           reduce using rule 33 (var -> LOCAL_VAR .)
    $end            reduce using rule 33 (var -> LOCAL_VAR .)
    END_LOWER       reduce using rule 33 (var -> LOCAL_VAR .)
    ELSE            reduce using rule 33 (var -> LOCAL_VAR .)
    MINUS           shift and go to state 214
    MULTIPLY        shift and go to state 215
    DIVIDE          shift and go to state 216
    MODULO          shift and go to state 217
    EXPONENT        shift and go to state 218

  ! PUT             [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! GETS            [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! LOCAL_VAR       [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! INTEGER         [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! FLOAT           [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! STRING          [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! LEFTPAR         [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! SET             [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! IF              [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! WHILE           [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! UNLESS          [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! INSTANCE_VAR    [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! CLASS_VAR       [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! GLOBAL_VAR      [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! CONSTANT        [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! NIL             [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! SYMBOL          [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! LEFT_COR        [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! PERCENTW        [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! ARRAY           [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! $end            [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! END_LOWER       [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]
  ! ELSE            [ reduce using rule 150 (arithmetic_production -> LOCAL_VAR .) ]

    arithmetic_operators           shift and go to state 212

state 141

    (125) declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .

    PUT             reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    GETS            reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    LOCAL_VAR       reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    INTEGER         reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    FLOAT           reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    STRING          reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    LEFTPAR         reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    SET             reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    IF              reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    WHILE           reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    UNLESS          reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    INSTANCE_VAR    reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    CLASS_VAR       reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    GLOBAL_VAR      reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    CONSTANT        reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    NIL             reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    SYMBOL          reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    LEFT_COR        reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    PERCENTW        reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    ARRAY           reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    $end            reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    END_LOWER       reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    ELSE            reduce using rule 125 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)


state 142

    (83) hash_var -> LOCAL_VAR ASSIGN LBRACE . hash_values RBRACE
    (84) hash_var -> LOCAL_VAR ASSIGN LBRACE . RBRACE
    (85) hash_values -> . STRING HASH_ROCKET value
    (86) hash_values -> . STRING HASH_ROCKET value COMMA hash_values

    RBRACE          shift and go to state 220
    STRING          shift and go to state 221

    hash_values                    shift and go to state 219

state 143

    (89) variable_declaration -> LOCAL_VAR ASSIGN value .

    PUT             reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    GETS            reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    LOCAL_VAR       reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    INTEGER         reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    FLOAT           reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    STRING          reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    LEFTPAR         reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    SET             reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    IF              reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    WHILE           reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    UNLESS          reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    INSTANCE_VAR    reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    CLASS_VAR       reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    GLOBAL_VAR      reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    CONSTANT        reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    NIL             reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    SYMBOL          reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    LEFT_COR        reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    PERCENTW        reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    ARRAY           reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    $end            reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    END_LOWER       reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    ELSE            reduce using rule 89 (variable_declaration -> LOCAL_VAR ASSIGN value .)


state 144

    (94) store_conditional_result -> LOCAL_VAR ASSIGN condiciones .
    (60) condiciones -> condiciones . conectores condiciones
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL

    PUT             reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    GETS            reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    LOCAL_VAR       reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    INTEGER         reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    FLOAT           reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    STRING          reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    LEFTPAR         reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    SET             reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    IF              reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    WHILE           reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    UNLESS          reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    INSTANCE_VAR    reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    CLASS_VAR       reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    GLOBAL_VAR      reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    CONSTANT        reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    NIL             reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    SYMBOL          reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    LEFT_COR        reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    PERCENTW        reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    ARRAY           reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    $end            reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    END_LOWER       reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    ELSE            reduce using rule 94 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174

    conectores                     shift and go to state 169

state 145

    (141) declare_data_structures -> LOCAL_VAR ASSIGN set_expression .

    PUT             reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    GETS            reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    LOCAL_VAR       reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    INTEGER         reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    FLOAT           reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    STRING          reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    LEFTPAR         reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    SET             reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    IF              reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    WHILE           reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    UNLESS          reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    INSTANCE_VAR    reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    CLASS_VAR       reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    GLOBAL_VAR      reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    CONSTANT        reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    NIL             reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    SYMBOL          reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    LEFT_COR        reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    PERCENTW        reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    ARRAY           reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    $end            reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    END_LOWER       reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    ELSE            reduce using rule 141 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)


state 146

    (47) var_arreglo -> LOCAL_VAR ASSIGN array .

    LEFT_COR        reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    PUT             reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    GETS            reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    LOCAL_VAR       reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    INTEGER         reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    FLOAT           reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    STRING          reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    LEFTPAR         reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    SET             reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    IF              reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    WHILE           reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    UNLESS          reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    INSTANCE_VAR    reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    CLASS_VAR       reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    GLOBAL_VAR      reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    CONSTANT        reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    NIL             reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    SYMBOL          reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    PERCENTW        reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    ARRAY           reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    $end            reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    END_LOWER       reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    ELSE            reduce using rule 47 (var_arreglo -> LOCAL_VAR ASSIGN array .)


state 147

    (82) declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .

    PUT             reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    GETS            reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    LOCAL_VAR       reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    INTEGER         reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    FLOAT           reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    STRING          reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    LEFTPAR         reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    SET             reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    IF              reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    WHILE           reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    UNLESS          reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    INSTANCE_VAR    reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    CLASS_VAR       reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    GLOBAL_VAR      reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    CONSTANT        reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    NIL             reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    SYMBOL          reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    LEFT_COR        reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    PERCENTW        reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    ARRAY           reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    $end            reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    END_LOWER       reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    ELSE            reduce using rule 82 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)


state 148

    (167) proc_assignment -> LOCAL_VAR ASSIGN proc_expression .

    PUT             reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    GETS            reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    LOCAL_VAR       reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    INTEGER         reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    FLOAT           reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    STRING          reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    LEFTPAR         reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    SET             reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    IF              reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    WHILE           reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    UNLESS          reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    INSTANCE_VAR    reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    CLASS_VAR       reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    GLOBAL_VAR      reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    CONSTANT        reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    NIL             reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    SYMBOL          reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    LEFT_COR        reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    PERCENTW        reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    ARRAY           reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    $end            reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    END_LOWER       reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    ELSE            reduce using rule 167 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)


state 149

    (149) arithmetic_production -> num .
    (151) arithmetic_production -> num . arithmetic_operators arithmetic_production
    (24) value -> num .
    (66) condicion -> num . operComp num
    (68) condicion -> num . operComp var
    (153) arithmetic_operators -> . PLUS
    (154) arithmetic_operators -> . MINUS
    (155) arithmetic_operators -> . MULTIPLY
    (156) arithmetic_operators -> . DIVIDE
    (157) arithmetic_operators -> . MODULO
    (158) arithmetic_operators -> . EXPONENT
    (69) operComp -> . GREATER
    (70) operComp -> . LESS
    (71) operComp -> . GREATER_EQUAL
    (72) operComp -> . LESS_EQUAL
    (73) operComp -> . EQUAL
    (74) operComp -> . NOT_EQUAL
    (75) operComp -> . COMPARE

  ! reduce/reduce conflict for PUT resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for GETS resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for INTEGER resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for FLOAT resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for STRING resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for SET resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for IF resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for WHILE resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for UNLESS resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for NIL resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for ARRAY resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for $end resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 24 (value -> num .)
  ! reduce/reduce conflict for ELSE resolved using rule 24 (value -> num .)
    PUT             reduce using rule 24 (value -> num .)
    GETS            reduce using rule 24 (value -> num .)
    LOCAL_VAR       reduce using rule 24 (value -> num .)
    INTEGER         reduce using rule 24 (value -> num .)
    FLOAT           reduce using rule 24 (value -> num .)
    STRING          reduce using rule 24 (value -> num .)
    LEFTPAR         reduce using rule 24 (value -> num .)
    SET             reduce using rule 24 (value -> num .)
    IF              reduce using rule 24 (value -> num .)
    WHILE           reduce using rule 24 (value -> num .)
    UNLESS          reduce using rule 24 (value -> num .)
    INSTANCE_VAR    reduce using rule 24 (value -> num .)
    CLASS_VAR       reduce using rule 24 (value -> num .)
    GLOBAL_VAR      reduce using rule 24 (value -> num .)
    CONSTANT        reduce using rule 24 (value -> num .)
    NIL             reduce using rule 24 (value -> num .)
    SYMBOL          reduce using rule 24 (value -> num .)
    LEFT_COR        reduce using rule 24 (value -> num .)
    PERCENTW        reduce using rule 24 (value -> num .)
    ARRAY           reduce using rule 24 (value -> num .)
    $end            reduce using rule 24 (value -> num .)
    END_LOWER       reduce using rule 24 (value -> num .)
    ELSE            reduce using rule 24 (value -> num .)
    PLUS            shift and go to state 223
    MINUS           shift and go to state 214
    MULTIPLY        shift and go to state 215
    DIVIDE          shift and go to state 216
    MODULO          shift and go to state 217
    EXPONENT        shift and go to state 218
    GREATER         shift and go to state 176
    LESS            shift and go to state 177
    GREATER_EQUAL   shift and go to state 178
    LESS_EQUAL      shift and go to state 179
    EQUAL           shift and go to state 180
    NOT_EQUAL       shift and go to state 181
    COMPARE         shift and go to state 182

  ! PUT             [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! GETS            [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! LOCAL_VAR       [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! INTEGER         [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! FLOAT           [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! STRING          [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! LEFTPAR         [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! SET             [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! IF              [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! WHILE           [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! UNLESS          [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! INSTANCE_VAR    [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! CLASS_VAR       [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! GLOBAL_VAR      [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! CONSTANT        [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! NIL             [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! SYMBOL          [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! LEFT_COR        [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! PERCENTW        [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! ARRAY           [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! $end            [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! END_LOWER       [ reduce using rule 149 (arithmetic_production -> num .) ]
  ! ELSE            [ reduce using rule 149 (arithmetic_production -> num .) ]

    arithmetic_operators           shift and go to state 222
    operComp                       shift and go to state 175

state 150

    (25) value -> var .
    (67) condicion -> var . operComp num
    (69) operComp -> . GREATER
    (70) operComp -> . LESS
    (71) operComp -> . GREATER_EQUAL
    (72) operComp -> . LESS_EQUAL
    (73) operComp -> . EQUAL
    (74) operComp -> . NOT_EQUAL
    (75) operComp -> . COMPARE

    PUT             reduce using rule 25 (value -> var .)
    GETS            reduce using rule 25 (value -> var .)
    LOCAL_VAR       reduce using rule 25 (value -> var .)
    INTEGER         reduce using rule 25 (value -> var .)
    FLOAT           reduce using rule 25 (value -> var .)
    STRING          reduce using rule 25 (value -> var .)
    LEFTPAR         reduce using rule 25 (value -> var .)
    SET             reduce using rule 25 (value -> var .)
    IF              reduce using rule 25 (value -> var .)
    WHILE           reduce using rule 25 (value -> var .)
    UNLESS          reduce using rule 25 (value -> var .)
    INSTANCE_VAR    reduce using rule 25 (value -> var .)
    CLASS_VAR       reduce using rule 25 (value -> var .)
    GLOBAL_VAR      reduce using rule 25 (value -> var .)
    CONSTANT        reduce using rule 25 (value -> var .)
    NIL             reduce using rule 25 (value -> var .)
    SYMBOL          reduce using rule 25 (value -> var .)
    LEFT_COR        reduce using rule 25 (value -> var .)
    PERCENTW        reduce using rule 25 (value -> var .)
    ARRAY           reduce using rule 25 (value -> var .)
    $end            reduce using rule 25 (value -> var .)
    END_LOWER       reduce using rule 25 (value -> var .)
    ELSE            reduce using rule 25 (value -> var .)
    GREATER         shift and go to state 176
    LESS            shift and go to state 177
    GREATER_EQUAL   shift and go to state 178
    LESS_EQUAL      shift and go to state 179
    EQUAL           shift and go to state 180
    NOT_EQUAL       shift and go to state 181
    COMPARE         shift and go to state 182

    operComp                       shift and go to state 183

state 151

    (26) value -> STRING .
    (78) concatenar_string -> STRING . PLUS STRING
    (79) concatenar_string -> STRING . PLUS LOCAL_VAR

    PUT             reduce using rule 26 (value -> STRING .)
    GETS            reduce using rule 26 (value -> STRING .)
    LOCAL_VAR       reduce using rule 26 (value -> STRING .)
    INTEGER         reduce using rule 26 (value -> STRING .)
    FLOAT           reduce using rule 26 (value -> STRING .)
    STRING          reduce using rule 26 (value -> STRING .)
    LEFTPAR         reduce using rule 26 (value -> STRING .)
    SET             reduce using rule 26 (value -> STRING .)
    IF              reduce using rule 26 (value -> STRING .)
    WHILE           reduce using rule 26 (value -> STRING .)
    UNLESS          reduce using rule 26 (value -> STRING .)
    INSTANCE_VAR    reduce using rule 26 (value -> STRING .)
    CLASS_VAR       reduce using rule 26 (value -> STRING .)
    GLOBAL_VAR      reduce using rule 26 (value -> STRING .)
    CONSTANT        reduce using rule 26 (value -> STRING .)
    NIL             reduce using rule 26 (value -> STRING .)
    SYMBOL          reduce using rule 26 (value -> STRING .)
    LEFT_COR        reduce using rule 26 (value -> STRING .)
    PERCENTW        reduce using rule 26 (value -> STRING .)
    ARRAY           reduce using rule 26 (value -> STRING .)
    $end            reduce using rule 26 (value -> STRING .)
    END_LOWER       reduce using rule 26 (value -> STRING .)
    ELSE            reduce using rule 26 (value -> STRING .)
    PLUS            shift and go to state 224


state 152

    (166) proc_expression -> PROC . DOT NEW block_expression

    DOT             shift and go to state 225


state 153

    (90) variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .

    PUT             reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    GETS            reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    LOCAL_VAR       reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    INTEGER         reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    FLOAT           reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    STRING          reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    LEFTPAR         reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    SET             reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    IF              reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    WHILE           reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    UNLESS          reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    INSTANCE_VAR    reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    CLASS_VAR       reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    GLOBAL_VAR      reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    CONSTANT        reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    NIL             reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    SYMBOL          reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    LEFT_COR        reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    PERCENTW        reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    ARRAY           reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    $end            reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    END_LOWER       reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)
    ELSE            reduce using rule 90 (variable_declaration -> LOCAL_VAR PLUS_ASSIGN value .)


state 154

    (91) variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .

    PUT             reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    GETS            reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    LOCAL_VAR       reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    INTEGER         reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    FLOAT           reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    STRING          reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    LEFTPAR         reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    SET             reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    IF              reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    WHILE           reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    UNLESS          reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    INSTANCE_VAR    reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    CLASS_VAR       reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    GLOBAL_VAR      reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    CONSTANT        reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    NIL             reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    SYMBOL          reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    LEFT_COR        reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    PERCENTW        reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    ARRAY           reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    $end            reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    END_LOWER       reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)
    ELSE            reduce using rule 91 (variable_declaration -> LOCAL_VAR MULTIPLY_ASSIGN value .)


state 155

    (92) variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .

    PUT             reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    GETS            reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    LOCAL_VAR       reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    INTEGER         reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    FLOAT           reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    STRING          reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    LEFTPAR         reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    SET             reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    IF              reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    WHILE           reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    UNLESS          reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    INSTANCE_VAR    reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    CLASS_VAR       reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    GLOBAL_VAR      reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    CONSTANT        reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    NIL             reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    SYMBOL          reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    LEFT_COR        reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    PERCENTW        reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    ARRAY           reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    $end            reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    END_LOWER       reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)
    ELSE            reduce using rule 92 (variable_declaration -> LOCAL_VAR MINUS_ASSIGN value .)


state 156

    (93) variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .

    PUT             reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    GETS            reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    LOCAL_VAR       reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    INTEGER         reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    FLOAT           reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    STRING          reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    LEFTPAR         reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    SET             reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    IF              reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    WHILE           reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    UNLESS          reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    INSTANCE_VAR    reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    CLASS_VAR       reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    GLOBAL_VAR      reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    CONSTANT        reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    NIL             reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    SYMBOL          reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    LEFT_COR        reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    PERCENTW        reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    ARRAY           reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    $end            reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    END_LOWER       reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)
    ELSE            reduce using rule 93 (variable_declaration -> LOCAL_VAR DIVIDE_ASSIGN value .)


state 157

    (135) range_expression -> LEFTPAR value RANGEIN . value RIGHTPAR
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 226
    num                            shift and go to state 53
    var                            shift and go to state 65

state 158

    (136) range_expression -> LEFTPAR value RANGEEX . value RIGHTPAR
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 227
    num                            shift and go to state 53
    var                            shift and go to state 65

state 159

    (48) array_explicito -> LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    LEFTPAR         reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    ELSE            reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)
    RIGHTPAR        reduce using rule 48 (array_explicito -> LEFT_COR values RIGHT_COR .)


state 160

    (56) acceder_arreglo -> var_arreglo LEFT_COR INTEGER . RIGHT_COR

    RIGHT_COR       shift and go to state 228


state 161

    (131) comparador -> value EQUAL value .

    PUT             reduce using rule 131 (comparador -> value EQUAL value .)
    GETS            reduce using rule 131 (comparador -> value EQUAL value .)
    LOCAL_VAR       reduce using rule 131 (comparador -> value EQUAL value .)
    INTEGER         reduce using rule 131 (comparador -> value EQUAL value .)
    FLOAT           reduce using rule 131 (comparador -> value EQUAL value .)
    STRING          reduce using rule 131 (comparador -> value EQUAL value .)
    LEFTPAR         reduce using rule 131 (comparador -> value EQUAL value .)
    SET             reduce using rule 131 (comparador -> value EQUAL value .)
    IF              reduce using rule 131 (comparador -> value EQUAL value .)
    WHILE           reduce using rule 131 (comparador -> value EQUAL value .)
    UNLESS          reduce using rule 131 (comparador -> value EQUAL value .)
    INSTANCE_VAR    reduce using rule 131 (comparador -> value EQUAL value .)
    CLASS_VAR       reduce using rule 131 (comparador -> value EQUAL value .)
    GLOBAL_VAR      reduce using rule 131 (comparador -> value EQUAL value .)
    CONSTANT        reduce using rule 131 (comparador -> value EQUAL value .)
    NIL             reduce using rule 131 (comparador -> value EQUAL value .)
    SYMBOL          reduce using rule 131 (comparador -> value EQUAL value .)
    LEFT_COR        reduce using rule 131 (comparador -> value EQUAL value .)
    PERCENTW        reduce using rule 131 (comparador -> value EQUAL value .)
    ARRAY           reduce using rule 131 (comparador -> value EQUAL value .)
    $end            reduce using rule 131 (comparador -> value EQUAL value .)
    END_LOWER       reduce using rule 131 (comparador -> value EQUAL value .)
    ELSE            reduce using rule 131 (comparador -> value EQUAL value .)


state 162

    (132) comparador -> value COMPARE value .

    PUT             reduce using rule 132 (comparador -> value COMPARE value .)
    GETS            reduce using rule 132 (comparador -> value COMPARE value .)
    LOCAL_VAR       reduce using rule 132 (comparador -> value COMPARE value .)
    INTEGER         reduce using rule 132 (comparador -> value COMPARE value .)
    FLOAT           reduce using rule 132 (comparador -> value COMPARE value .)
    STRING          reduce using rule 132 (comparador -> value COMPARE value .)
    LEFTPAR         reduce using rule 132 (comparador -> value COMPARE value .)
    SET             reduce using rule 132 (comparador -> value COMPARE value .)
    IF              reduce using rule 132 (comparador -> value COMPARE value .)
    WHILE           reduce using rule 132 (comparador -> value COMPARE value .)
    UNLESS          reduce using rule 132 (comparador -> value COMPARE value .)
    INSTANCE_VAR    reduce using rule 132 (comparador -> value COMPARE value .)
    CLASS_VAR       reduce using rule 132 (comparador -> value COMPARE value .)
    GLOBAL_VAR      reduce using rule 132 (comparador -> value COMPARE value .)
    CONSTANT        reduce using rule 132 (comparador -> value COMPARE value .)
    NIL             reduce using rule 132 (comparador -> value COMPARE value .)
    SYMBOL          reduce using rule 132 (comparador -> value COMPARE value .)
    LEFT_COR        reduce using rule 132 (comparador -> value COMPARE value .)
    PERCENTW        reduce using rule 132 (comparador -> value COMPARE value .)
    ARRAY           reduce using rule 132 (comparador -> value COMPARE value .)
    $end            reduce using rule 132 (comparador -> value COMPARE value .)
    END_LOWER       reduce using rule 132 (comparador -> value COMPARE value .)
    ELSE            reduce using rule 132 (comparador -> value COMPARE value .)


state 163

    (133) range_expression -> value RANGEIN value .

    PUT             reduce using rule 133 (range_expression -> value RANGEIN value .)
    GETS            reduce using rule 133 (range_expression -> value RANGEIN value .)
    LOCAL_VAR       reduce using rule 133 (range_expression -> value RANGEIN value .)
    INTEGER         reduce using rule 133 (range_expression -> value RANGEIN value .)
    FLOAT           reduce using rule 133 (range_expression -> value RANGEIN value .)
    STRING          reduce using rule 133 (range_expression -> value RANGEIN value .)
    LEFTPAR         reduce using rule 133 (range_expression -> value RANGEIN value .)
    SET             reduce using rule 133 (range_expression -> value RANGEIN value .)
    IF              reduce using rule 133 (range_expression -> value RANGEIN value .)
    WHILE           reduce using rule 133 (range_expression -> value RANGEIN value .)
    UNLESS          reduce using rule 133 (range_expression -> value RANGEIN value .)
    INSTANCE_VAR    reduce using rule 133 (range_expression -> value RANGEIN value .)
    CLASS_VAR       reduce using rule 133 (range_expression -> value RANGEIN value .)
    GLOBAL_VAR      reduce using rule 133 (range_expression -> value RANGEIN value .)
    CONSTANT        reduce using rule 133 (range_expression -> value RANGEIN value .)
    NIL             reduce using rule 133 (range_expression -> value RANGEIN value .)
    SYMBOL          reduce using rule 133 (range_expression -> value RANGEIN value .)
    LEFT_COR        reduce using rule 133 (range_expression -> value RANGEIN value .)
    PERCENTW        reduce using rule 133 (range_expression -> value RANGEIN value .)
    ARRAY           reduce using rule 133 (range_expression -> value RANGEIN value .)
    $end            reduce using rule 133 (range_expression -> value RANGEIN value .)
    END_LOWER       reduce using rule 133 (range_expression -> value RANGEIN value .)
    ELSE            reduce using rule 133 (range_expression -> value RANGEIN value .)


state 164

    (134) range_expression -> value RANGEEX value .

    PUT             reduce using rule 134 (range_expression -> value RANGEEX value .)
    GETS            reduce using rule 134 (range_expression -> value RANGEEX value .)
    LOCAL_VAR       reduce using rule 134 (range_expression -> value RANGEEX value .)
    INTEGER         reduce using rule 134 (range_expression -> value RANGEEX value .)
    FLOAT           reduce using rule 134 (range_expression -> value RANGEEX value .)
    STRING          reduce using rule 134 (range_expression -> value RANGEEX value .)
    LEFTPAR         reduce using rule 134 (range_expression -> value RANGEEX value .)
    SET             reduce using rule 134 (range_expression -> value RANGEEX value .)
    IF              reduce using rule 134 (range_expression -> value RANGEEX value .)
    WHILE           reduce using rule 134 (range_expression -> value RANGEEX value .)
    UNLESS          reduce using rule 134 (range_expression -> value RANGEEX value .)
    INSTANCE_VAR    reduce using rule 134 (range_expression -> value RANGEEX value .)
    CLASS_VAR       reduce using rule 134 (range_expression -> value RANGEEX value .)
    GLOBAL_VAR      reduce using rule 134 (range_expression -> value RANGEEX value .)
    CONSTANT        reduce using rule 134 (range_expression -> value RANGEEX value .)
    NIL             reduce using rule 134 (range_expression -> value RANGEEX value .)
    SYMBOL          reduce using rule 134 (range_expression -> value RANGEEX value .)
    LEFT_COR        reduce using rule 134 (range_expression -> value RANGEEX value .)
    PERCENTW        reduce using rule 134 (range_expression -> value RANGEEX value .)
    ARRAY           reduce using rule 134 (range_expression -> value RANGEEX value .)
    $end            reduce using rule 134 (range_expression -> value RANGEEX value .)
    END_LOWER       reduce using rule 134 (range_expression -> value RANGEEX value .)
    ELSE            reduce using rule 134 (range_expression -> value RANGEEX value .)


state 165

    (88) hash_operations -> hash_access ASSIGN value .

    PUT             reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    GETS            reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    LOCAL_VAR       reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    INTEGER         reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    FLOAT           reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    STRING          reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    LEFTPAR         reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    SET             reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    IF              reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    WHILE           reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    UNLESS          reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    INSTANCE_VAR    reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    CLASS_VAR       reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    GLOBAL_VAR      reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    CONSTANT        reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    NIL             reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    SYMBOL          reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    LEFT_COR        reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    PERCENTW        reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    ARRAY           reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    $end            reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    END_LOWER       reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)
    ELSE            reduce using rule 88 (hash_operations -> hash_access ASSIGN value .)


state 166

    (137) set_expression -> SET DOT NEW . LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR

    LEFTPAR         shift and go to state 229


state 167

    (138) set_expression -> SET LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 230


state 168

    (57) ifStatement -> IF condiciones codigo . END_LOWER
    (58) ifStatement -> IF condiciones codigo . else_statement END_LOWER
    (2) codigo -> codigo . sentencia
    (76) else_statement -> . ELSE codigo
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    END_LOWER       shift and go to state 231
    ELSE            shift and go to state 233
    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    else_statement                 shift and go to state 232
    sentencia                      shift and go to state 59
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 169

    (60) condiciones -> condiciones conectores . condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    condiciones                    shift and go to state 234
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 170

    (61) conectores -> AND .

    FLOAT           reduce using rule 61 (conectores -> AND .)
    INTEGER         reduce using rule 61 (conectores -> AND .)
    LOCAL_VAR       reduce using rule 61 (conectores -> AND .)
    INSTANCE_VAR    reduce using rule 61 (conectores -> AND .)
    CLASS_VAR       reduce using rule 61 (conectores -> AND .)
    GLOBAL_VAR      reduce using rule 61 (conectores -> AND .)


state 171

    (62) conectores -> OR .

    FLOAT           reduce using rule 62 (conectores -> OR .)
    INTEGER         reduce using rule 62 (conectores -> OR .)
    LOCAL_VAR       reduce using rule 62 (conectores -> OR .)
    INSTANCE_VAR    reduce using rule 62 (conectores -> OR .)
    CLASS_VAR       reduce using rule 62 (conectores -> OR .)
    GLOBAL_VAR      reduce using rule 62 (conectores -> OR .)


state 172

    (63) conectores -> AND_RESERVED .

    FLOAT           reduce using rule 63 (conectores -> AND_RESERVED .)
    INTEGER         reduce using rule 63 (conectores -> AND_RESERVED .)
    LOCAL_VAR       reduce using rule 63 (conectores -> AND_RESERVED .)
    INSTANCE_VAR    reduce using rule 63 (conectores -> AND_RESERVED .)
    CLASS_VAR       reduce using rule 63 (conectores -> AND_RESERVED .)
    GLOBAL_VAR      reduce using rule 63 (conectores -> AND_RESERVED .)


state 173

    (64) conectores -> OR_RESERVED .

    FLOAT           reduce using rule 64 (conectores -> OR_RESERVED .)
    INTEGER         reduce using rule 64 (conectores -> OR_RESERVED .)
    LOCAL_VAR       reduce using rule 64 (conectores -> OR_RESERVED .)
    INSTANCE_VAR    reduce using rule 64 (conectores -> OR_RESERVED .)
    CLASS_VAR       reduce using rule 64 (conectores -> OR_RESERVED .)
    GLOBAL_VAR      reduce using rule 64 (conectores -> OR_RESERVED .)


state 174

    (65) conectores -> EQUAL .

    FLOAT           reduce using rule 65 (conectores -> EQUAL .)
    INTEGER         reduce using rule 65 (conectores -> EQUAL .)
    LOCAL_VAR       reduce using rule 65 (conectores -> EQUAL .)
    INSTANCE_VAR    reduce using rule 65 (conectores -> EQUAL .)
    CLASS_VAR       reduce using rule 65 (conectores -> EQUAL .)
    GLOBAL_VAR      reduce using rule 65 (conectores -> EQUAL .)


state 175

    (66) condicion -> num operComp . num
    (68) condicion -> num operComp . var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    num                            shift and go to state 235
    var                            shift and go to state 236

state 176

    (69) operComp -> GREATER .

    FLOAT           reduce using rule 69 (operComp -> GREATER .)
    INTEGER         reduce using rule 69 (operComp -> GREATER .)
    LOCAL_VAR       reduce using rule 69 (operComp -> GREATER .)
    INSTANCE_VAR    reduce using rule 69 (operComp -> GREATER .)
    CLASS_VAR       reduce using rule 69 (operComp -> GREATER .)
    GLOBAL_VAR      reduce using rule 69 (operComp -> GREATER .)


state 177

    (70) operComp -> LESS .

    FLOAT           reduce using rule 70 (operComp -> LESS .)
    INTEGER         reduce using rule 70 (operComp -> LESS .)
    LOCAL_VAR       reduce using rule 70 (operComp -> LESS .)
    INSTANCE_VAR    reduce using rule 70 (operComp -> LESS .)
    CLASS_VAR       reduce using rule 70 (operComp -> LESS .)
    GLOBAL_VAR      reduce using rule 70 (operComp -> LESS .)


state 178

    (71) operComp -> GREATER_EQUAL .

    FLOAT           reduce using rule 71 (operComp -> GREATER_EQUAL .)
    INTEGER         reduce using rule 71 (operComp -> GREATER_EQUAL .)
    LOCAL_VAR       reduce using rule 71 (operComp -> GREATER_EQUAL .)
    INSTANCE_VAR    reduce using rule 71 (operComp -> GREATER_EQUAL .)
    CLASS_VAR       reduce using rule 71 (operComp -> GREATER_EQUAL .)
    GLOBAL_VAR      reduce using rule 71 (operComp -> GREATER_EQUAL .)


state 179

    (72) operComp -> LESS_EQUAL .

    FLOAT           reduce using rule 72 (operComp -> LESS_EQUAL .)
    INTEGER         reduce using rule 72 (operComp -> LESS_EQUAL .)
    LOCAL_VAR       reduce using rule 72 (operComp -> LESS_EQUAL .)
    INSTANCE_VAR    reduce using rule 72 (operComp -> LESS_EQUAL .)
    CLASS_VAR       reduce using rule 72 (operComp -> LESS_EQUAL .)
    GLOBAL_VAR      reduce using rule 72 (operComp -> LESS_EQUAL .)


state 180

    (73) operComp -> EQUAL .

    FLOAT           reduce using rule 73 (operComp -> EQUAL .)
    INTEGER         reduce using rule 73 (operComp -> EQUAL .)
    LOCAL_VAR       reduce using rule 73 (operComp -> EQUAL .)
    INSTANCE_VAR    reduce using rule 73 (operComp -> EQUAL .)
    CLASS_VAR       reduce using rule 73 (operComp -> EQUAL .)
    GLOBAL_VAR      reduce using rule 73 (operComp -> EQUAL .)


state 181

    (74) operComp -> NOT_EQUAL .

    FLOAT           reduce using rule 74 (operComp -> NOT_EQUAL .)
    INTEGER         reduce using rule 74 (operComp -> NOT_EQUAL .)
    LOCAL_VAR       reduce using rule 74 (operComp -> NOT_EQUAL .)
    INSTANCE_VAR    reduce using rule 74 (operComp -> NOT_EQUAL .)
    CLASS_VAR       reduce using rule 74 (operComp -> NOT_EQUAL .)
    GLOBAL_VAR      reduce using rule 74 (operComp -> NOT_EQUAL .)


state 182

    (75) operComp -> COMPARE .

    FLOAT           reduce using rule 75 (operComp -> COMPARE .)
    INTEGER         reduce using rule 75 (operComp -> COMPARE .)
    LOCAL_VAR       reduce using rule 75 (operComp -> COMPARE .)
    INSTANCE_VAR    reduce using rule 75 (operComp -> COMPARE .)
    CLASS_VAR       reduce using rule 75 (operComp -> COMPARE .)
    GLOBAL_VAR      reduce using rule 75 (operComp -> COMPARE .)


state 183

    (67) condicion -> var operComp . num
    (37) num -> . FLOAT
    (38) num -> . INTEGER

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68

    num                            shift and go to state 237

state 184

    (97) while_statement -> WHILE condiciones codigo . END_LOWER
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    END_LOWER       shift and go to state 238
    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    sentencia                      shift and go to state 59
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 185

    (147) unless_expression -> UNLESS boolean_expression THEN . expresion END
    (148) unless_expression -> UNLESS boolean_expression THEN . expresion ELSE expresion END
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 239
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 186

    (102) boolean_expression -> expression GREATER . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 240
    variable                       shift and go to state 37

state 187

    (103) boolean_expression -> expression LESS . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 241
    variable                       shift and go to state 37

state 188

    (104) boolean_expression -> expression GREATER_EQUAL . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 242
    variable                       shift and go to state 37

state 189

    (105) boolean_expression -> expression LESS_EQUAL . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 243
    variable                       shift and go to state 37

state 190

    (106) boolean_expression -> expression EQUAL . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 244
    variable                       shift and go to state 37

state 191

    (107) boolean_expression -> expression NOT_EQUAL . expression
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT

    INTEGER         shift and go to state 107
    FLOAT           shift and go to state 108
    STRING          shift and go to state 109
    LOCAL_VAR       shift and go to state 112
    INSTANCE_VAR    shift and go to state 113
    CLASS_VAR       shift and go to state 114
    GLOBAL_VAR      shift and go to state 115
    CONSTANT        shift and go to state 52

    expression                     shift and go to state 245
    variable                       shift and go to state 37

state 192

    (87) hash_access -> var LBRACE value . RBRACE

    RBRACE          shift and go to state 246


state 193

    (50) array_implicito -> PERCENTW LEFT_COR values_space . RIGHT_COR

    RIGHT_COR       shift and go to state 247


state 194

    (51) array_implicito -> PERCENTW LEFT_COR RIGHT_COR .

    PUT             reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    LEFTPAR         reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    SET             reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    IF              reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    $end            reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    ELSE            reduce using rule 51 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)


state 195

    (29) values_space -> value . SPACE values_space
    (30) values_space -> value .

    SPACE           shift and go to state 248
    RIGHT_COR       reduce using rule 30 (values_space -> value .)


state 196

    (52) array_creation -> ARRAY LEFTPAR array_explicito . RIGHTPAR

    RIGHTPAR        shift and go to state 249


state 197

    (53) newArray -> ARRAY DOT NEW .
    (54) newArray -> ARRAY DOT NEW . LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> ARRAY DOT NEW . LEFTPAR INTEGER COMMA values RIGHTPAR

  ! shift/reduce conflict for LEFTPAR resolved as shift
    PUT             reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    GETS            reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    LOCAL_VAR       reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    INTEGER         reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    FLOAT           reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    STRING          reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    SET             reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    IF              reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    WHILE           reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    UNLESS          reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    INSTANCE_VAR    reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    CLASS_VAR       reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    GLOBAL_VAR      reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    CONSTANT        reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    NIL             reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    SYMBOL          reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    LEFT_COR        reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    PERCENTW        reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    ARRAY           reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    $end            reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    END_LOWER       reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    ELSE            reduce using rule 53 (newArray -> ARRAY DOT NEW .)
    LEFTPAR         shift and go to state 250

  ! LEFTPAR         [ reduce using rule 53 (newArray -> ARRAY DOT NEW .) ]


state 198

    (159) block_expression -> LBRACE expresion RBRACE .

    PUT             reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    GETS            reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    LOCAL_VAR       reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    INTEGER         reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    FLOAT           reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    STRING          reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    LEFTPAR         reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    SET             reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    IF              reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    WHILE           reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    UNLESS          reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    INSTANCE_VAR    reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    CLASS_VAR       reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    GLOBAL_VAR      reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    CONSTANT        reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    NIL             reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    SYMBOL          reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    LEFT_COR        reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    PERCENTW        reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    ARRAY           reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    $end            reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    END_LOWER       reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)
    ELSE            reduce using rule 159 (block_expression -> LBRACE expresion RBRACE .)


state 199

    (162) block_expression -> LBRACE PIPE LOCAL_VAR . PIPE expresion RBRACE

    PIPE            shift and go to state 251


state 200

    (101) print_statement -> PUT LEFTPAR . values RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 252
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 201

    (98) condition_with_connectors -> condiciones conectores . condiciones
    (60) condiciones -> condiciones conectores . condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    condiciones                    shift and go to state 253
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 202

    (160) block_expression -> DO expresion END .

    PUT             reduce using rule 160 (block_expression -> DO expresion END .)
    GETS            reduce using rule 160 (block_expression -> DO expresion END .)
    LOCAL_VAR       reduce using rule 160 (block_expression -> DO expresion END .)
    INTEGER         reduce using rule 160 (block_expression -> DO expresion END .)
    FLOAT           reduce using rule 160 (block_expression -> DO expresion END .)
    STRING          reduce using rule 160 (block_expression -> DO expresion END .)
    LEFTPAR         reduce using rule 160 (block_expression -> DO expresion END .)
    SET             reduce using rule 160 (block_expression -> DO expresion END .)
    IF              reduce using rule 160 (block_expression -> DO expresion END .)
    WHILE           reduce using rule 160 (block_expression -> DO expresion END .)
    UNLESS          reduce using rule 160 (block_expression -> DO expresion END .)
    INSTANCE_VAR    reduce using rule 160 (block_expression -> DO expresion END .)
    CLASS_VAR       reduce using rule 160 (block_expression -> DO expresion END .)
    GLOBAL_VAR      reduce using rule 160 (block_expression -> DO expresion END .)
    CONSTANT        reduce using rule 160 (block_expression -> DO expresion END .)
    NIL             reduce using rule 160 (block_expression -> DO expresion END .)
    SYMBOL          reduce using rule 160 (block_expression -> DO expresion END .)
    LEFT_COR        reduce using rule 160 (block_expression -> DO expresion END .)
    PERCENTW        reduce using rule 160 (block_expression -> DO expresion END .)
    ARRAY           reduce using rule 160 (block_expression -> DO expresion END .)
    $end            reduce using rule 160 (block_expression -> DO expresion END .)
    END_LOWER       reduce using rule 160 (block_expression -> DO expresion END .)
    ELSE            reduce using rule 160 (block_expression -> DO expresion END .)


state 203

    (161) block_expression -> DO expresion END_LOWER .

    PUT             reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    GETS            reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    LOCAL_VAR       reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    INTEGER         reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    FLOAT           reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    STRING          reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    LEFTPAR         reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    SET             reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    IF              reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    WHILE           reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    UNLESS          reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    INSTANCE_VAR    reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    CLASS_VAR       reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    GLOBAL_VAR      reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    CONSTANT        reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    NIL             reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    SYMBOL          reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    LEFT_COR        reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    PERCENTW        reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    ARRAY           reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    $end            reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    END_LOWER       reduce using rule 161 (block_expression -> DO expresion END_LOWER .)
    ELSE            reduce using rule 161 (block_expression -> DO expresion END_LOWER .)


state 204

    (163) block_expression -> DO PIPE LOCAL_VAR . PIPE expresion END
    (164) block_expression -> DO PIPE LOCAL_VAR . PIPE expresion END_LOWER

    PIPE            shift and go to state 254


state 205

    (32) values -> value COMMA values .

    PUT             reduce using rule 32 (values -> value COMMA values .)
    GETS            reduce using rule 32 (values -> value COMMA values .)
    LOCAL_VAR       reduce using rule 32 (values -> value COMMA values .)
    INTEGER         reduce using rule 32 (values -> value COMMA values .)
    FLOAT           reduce using rule 32 (values -> value COMMA values .)
    STRING          reduce using rule 32 (values -> value COMMA values .)
    LEFTPAR         reduce using rule 32 (values -> value COMMA values .)
    SET             reduce using rule 32 (values -> value COMMA values .)
    IF              reduce using rule 32 (values -> value COMMA values .)
    WHILE           reduce using rule 32 (values -> value COMMA values .)
    UNLESS          reduce using rule 32 (values -> value COMMA values .)
    INSTANCE_VAR    reduce using rule 32 (values -> value COMMA values .)
    CLASS_VAR       reduce using rule 32 (values -> value COMMA values .)
    GLOBAL_VAR      reduce using rule 32 (values -> value COMMA values .)
    CONSTANT        reduce using rule 32 (values -> value COMMA values .)
    NIL             reduce using rule 32 (values -> value COMMA values .)
    SYMBOL          reduce using rule 32 (values -> value COMMA values .)
    LEFT_COR        reduce using rule 32 (values -> value COMMA values .)
    PERCENTW        reduce using rule 32 (values -> value COMMA values .)
    ARRAY           reduce using rule 32 (values -> value COMMA values .)
    $end            reduce using rule 32 (values -> value COMMA values .)
    END_LOWER       reduce using rule 32 (values -> value COMMA values .)
    ELSE            reduce using rule 32 (values -> value COMMA values .)
    RIGHT_COR       reduce using rule 32 (values -> value COMMA values .)
    RIGHTPAR        reduce using rule 32 (values -> value COMMA values .)
    RBRACE          reduce using rule 32 (values -> value COMMA values .)
    END             reduce using rule 32 (values -> value COMMA values .)


state 206

    (39) gets -> GETS DOT CHOMP DOT . TO_F
    (40) gets -> GETS DOT CHOMP DOT . TO_I

    TO_F            shift and go to state 255
    TO_I            shift and go to state 256


state 207

    (99) method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .

    LBRACE          reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    DO              reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    PUT             reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    LEFTPAR         reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    ELSE            reduce using rule 99 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)


state 208

    (168) proc_call -> LOCAL_VAR DOT CALL LEFTPAR . values RIGHTPAR
    (170) proc_call -> LOCAL_VAR DOT CALL LEFTPAR . RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 258
    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 257
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 209

    (169) proc_call -> LOCAL_VAR DOT LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 259


state 210

    (171) proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .

    PUT             reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    LEFTPAR         reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    SET             reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    IF              reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    $end            reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    ELSE            reduce using rule 171 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)


state 211

    (172) proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    LEFTPAR         reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    ELSE            reduce using rule 172 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)


state 212

    (152) arithmetic_production -> LOCAL_VAR arithmetic_operators . arithmetic_production
    (149) arithmetic_production -> . num
    (150) arithmetic_production -> . LOCAL_VAR
    (151) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (152) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (37) num -> . FLOAT
    (38) num -> . INTEGER

    LOCAL_VAR       shift and go to state 260
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68

    arithmetic_production          shift and go to state 261
    num                            shift and go to state 262

state 213

    (80) concatenar_string -> LOCAL_VAR PLUS . STRING
    (81) concatenar_string -> LOCAL_VAR PLUS . LOCAL_VAR
    (153) arithmetic_operators -> PLUS .

  ! shift/reduce conflict for LOCAL_VAR resolved as shift
    STRING          shift and go to state 264
    LOCAL_VAR       shift and go to state 263
    FLOAT           reduce using rule 153 (arithmetic_operators -> PLUS .)
    INTEGER         reduce using rule 153 (arithmetic_operators -> PLUS .)

  ! LOCAL_VAR       [ reduce using rule 153 (arithmetic_operators -> PLUS .) ]


state 214

    (154) arithmetic_operators -> MINUS .

    LOCAL_VAR       reduce using rule 154 (arithmetic_operators -> MINUS .)
    FLOAT           reduce using rule 154 (arithmetic_operators -> MINUS .)
    INTEGER         reduce using rule 154 (arithmetic_operators -> MINUS .)


state 215

    (155) arithmetic_operators -> MULTIPLY .

    LOCAL_VAR       reduce using rule 155 (arithmetic_operators -> MULTIPLY .)
    FLOAT           reduce using rule 155 (arithmetic_operators -> MULTIPLY .)
    INTEGER         reduce using rule 155 (arithmetic_operators -> MULTIPLY .)


state 216

    (156) arithmetic_operators -> DIVIDE .

    LOCAL_VAR       reduce using rule 156 (arithmetic_operators -> DIVIDE .)
    FLOAT           reduce using rule 156 (arithmetic_operators -> DIVIDE .)
    INTEGER         reduce using rule 156 (arithmetic_operators -> DIVIDE .)


state 217

    (157) arithmetic_operators -> MODULO .

    LOCAL_VAR       reduce using rule 157 (arithmetic_operators -> MODULO .)
    FLOAT           reduce using rule 157 (arithmetic_operators -> MODULO .)
    INTEGER         reduce using rule 157 (arithmetic_operators -> MODULO .)


state 218

    (158) arithmetic_operators -> EXPONENT .

    LOCAL_VAR       reduce using rule 158 (arithmetic_operators -> EXPONENT .)
    FLOAT           reduce using rule 158 (arithmetic_operators -> EXPONENT .)
    INTEGER         reduce using rule 158 (arithmetic_operators -> EXPONENT .)


state 219

    (83) hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values . RBRACE

    RBRACE          shift and go to state 265


state 220

    (84) hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .

    PUT             reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    GETS            reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    LOCAL_VAR       reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    INTEGER         reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    FLOAT           reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    STRING          reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    LEFTPAR         reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    SET             reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    IF              reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    WHILE           reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    UNLESS          reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    INSTANCE_VAR    reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    CLASS_VAR       reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    GLOBAL_VAR      reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    CONSTANT        reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    NIL             reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    SYMBOL          reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    LEFT_COR        reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    PERCENTW        reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    ARRAY           reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    $end            reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    END_LOWER       reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    ELSE            reduce using rule 84 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)


state 221

    (85) hash_values -> STRING . HASH_ROCKET value
    (86) hash_values -> STRING . HASH_ROCKET value COMMA hash_values

    HASH_ROCKET     shift and go to state 266


state 222

    (151) arithmetic_production -> num arithmetic_operators . arithmetic_production
    (149) arithmetic_production -> . num
    (150) arithmetic_production -> . LOCAL_VAR
    (151) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (152) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (37) num -> . FLOAT
    (38) num -> . INTEGER

    LOCAL_VAR       shift and go to state 260
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68

    num                            shift and go to state 262
    arithmetic_production          shift and go to state 267

state 223

    (153) arithmetic_operators -> PLUS .

    LOCAL_VAR       reduce using rule 153 (arithmetic_operators -> PLUS .)
    FLOAT           reduce using rule 153 (arithmetic_operators -> PLUS .)
    INTEGER         reduce using rule 153 (arithmetic_operators -> PLUS .)


state 224

    (78) concatenar_string -> STRING PLUS . STRING
    (79) concatenar_string -> STRING PLUS . LOCAL_VAR

    STRING          shift and go to state 268
    LOCAL_VAR       shift and go to state 269


state 225

    (166) proc_expression -> PROC DOT . NEW block_expression

    NEW             shift and go to state 270


state 226

    (135) range_expression -> LEFTPAR value RANGEIN value . RIGHTPAR

    RIGHTPAR        shift and go to state 271


state 227

    (136) range_expression -> LEFTPAR value RANGEEX value . RIGHTPAR

    RIGHTPAR        shift and go to state 272


state 228

    (56) acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .

    PUT             reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    GETS            reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    LOCAL_VAR       reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    INTEGER         reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    FLOAT           reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    STRING          reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    LEFTPAR         reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    SET             reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    IF              reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    WHILE           reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    UNLESS          reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    CLASS_VAR       reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    CONSTANT        reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    NIL             reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    SYMBOL          reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    LEFT_COR        reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    PERCENTW        reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    ARRAY           reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    $end            reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    END_LOWER       reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    ELSE            reduce using rule 56 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)


state 229

    (137) set_expression -> SET DOT NEW LEFTPAR . LEFT_COR values RIGHT_COR RIGHTPAR

    LEFT_COR        shift and go to state 273


state 230

    (138) set_expression -> SET LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    LEFTPAR         reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PLUS            reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    MINUS           reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    AMPERSAND       reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PIPE            reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CARET           reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    ELSE            reduce using rule 138 (set_expression -> SET LEFT_COR values RIGHT_COR .)


state 231

    (57) ifStatement -> IF condiciones codigo END_LOWER .

    PUT             reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    GETS            reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    LOCAL_VAR       reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    INTEGER         reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    FLOAT           reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    STRING          reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    LEFTPAR         reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    SET             reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    IF              reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    WHILE           reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    UNLESS          reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    INSTANCE_VAR    reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    CLASS_VAR       reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    GLOBAL_VAR      reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    CONSTANT        reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    NIL             reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    SYMBOL          reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    LEFT_COR        reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    PERCENTW        reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    ARRAY           reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    $end            reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    END_LOWER       reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)
    ELSE            reduce using rule 57 (ifStatement -> IF condiciones codigo END_LOWER .)


state 232

    (58) ifStatement -> IF condiciones codigo else_statement . END_LOWER

    END_LOWER       shift and go to state 274


state 233

    (76) else_statement -> ELSE . codigo
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    codigo                         shift and go to state 275
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 234

    (60) condiciones -> condiciones conectores condiciones .
    (60) condiciones -> condiciones . conectores condiciones
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND_RESERVED resolved as shift
  ! shift/reduce conflict for OR_RESERVED resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    PUT             reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    GETS            reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    LOCAL_VAR       reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    INTEGER         reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    FLOAT           reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    STRING          reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    LEFTPAR         reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    SET             reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    IF              reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    WHILE           reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    UNLESS          reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    INSTANCE_VAR    reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    CLASS_VAR       reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    GLOBAL_VAR      reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    CONSTANT        reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    NIL             reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    SYMBOL          reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    LEFT_COR        reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    PERCENTW        reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    ARRAY           reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    $end            reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    END_LOWER       reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    ELSE            reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    RBRACE          reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    END             reduce using rule 60 (condiciones -> condiciones conectores condiciones .)
    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174

  ! AND             [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! OR              [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! AND_RESERVED    [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! OR_RESERVED     [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! EQUAL           [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]

    conectores                     shift and go to state 169

state 235

    (66) condicion -> num operComp num .

    AND             reduce using rule 66 (condicion -> num operComp num .)
    OR              reduce using rule 66 (condicion -> num operComp num .)
    AND_RESERVED    reduce using rule 66 (condicion -> num operComp num .)
    OR_RESERVED     reduce using rule 66 (condicion -> num operComp num .)
    EQUAL           reduce using rule 66 (condicion -> num operComp num .)
    PUT             reduce using rule 66 (condicion -> num operComp num .)
    GETS            reduce using rule 66 (condicion -> num operComp num .)
    LOCAL_VAR       reduce using rule 66 (condicion -> num operComp num .)
    INTEGER         reduce using rule 66 (condicion -> num operComp num .)
    FLOAT           reduce using rule 66 (condicion -> num operComp num .)
    STRING          reduce using rule 66 (condicion -> num operComp num .)
    LEFTPAR         reduce using rule 66 (condicion -> num operComp num .)
    SET             reduce using rule 66 (condicion -> num operComp num .)
    IF              reduce using rule 66 (condicion -> num operComp num .)
    WHILE           reduce using rule 66 (condicion -> num operComp num .)
    UNLESS          reduce using rule 66 (condicion -> num operComp num .)
    INSTANCE_VAR    reduce using rule 66 (condicion -> num operComp num .)
    CLASS_VAR       reduce using rule 66 (condicion -> num operComp num .)
    GLOBAL_VAR      reduce using rule 66 (condicion -> num operComp num .)
    CONSTANT        reduce using rule 66 (condicion -> num operComp num .)
    NIL             reduce using rule 66 (condicion -> num operComp num .)
    SYMBOL          reduce using rule 66 (condicion -> num operComp num .)
    LEFT_COR        reduce using rule 66 (condicion -> num operComp num .)
    PERCENTW        reduce using rule 66 (condicion -> num operComp num .)
    ARRAY           reduce using rule 66 (condicion -> num operComp num .)
    $end            reduce using rule 66 (condicion -> num operComp num .)
    END_LOWER       reduce using rule 66 (condicion -> num operComp num .)
    ELSE            reduce using rule 66 (condicion -> num operComp num .)
    RBRACE          reduce using rule 66 (condicion -> num operComp num .)
    END             reduce using rule 66 (condicion -> num operComp num .)


state 236

    (68) condicion -> num operComp var .

    AND             reduce using rule 68 (condicion -> num operComp var .)
    OR              reduce using rule 68 (condicion -> num operComp var .)
    AND_RESERVED    reduce using rule 68 (condicion -> num operComp var .)
    OR_RESERVED     reduce using rule 68 (condicion -> num operComp var .)
    EQUAL           reduce using rule 68 (condicion -> num operComp var .)
    PUT             reduce using rule 68 (condicion -> num operComp var .)
    GETS            reduce using rule 68 (condicion -> num operComp var .)
    LOCAL_VAR       reduce using rule 68 (condicion -> num operComp var .)
    INTEGER         reduce using rule 68 (condicion -> num operComp var .)
    FLOAT           reduce using rule 68 (condicion -> num operComp var .)
    STRING          reduce using rule 68 (condicion -> num operComp var .)
    LEFTPAR         reduce using rule 68 (condicion -> num operComp var .)
    SET             reduce using rule 68 (condicion -> num operComp var .)
    IF              reduce using rule 68 (condicion -> num operComp var .)
    WHILE           reduce using rule 68 (condicion -> num operComp var .)
    UNLESS          reduce using rule 68 (condicion -> num operComp var .)
    INSTANCE_VAR    reduce using rule 68 (condicion -> num operComp var .)
    CLASS_VAR       reduce using rule 68 (condicion -> num operComp var .)
    GLOBAL_VAR      reduce using rule 68 (condicion -> num operComp var .)
    CONSTANT        reduce using rule 68 (condicion -> num operComp var .)
    NIL             reduce using rule 68 (condicion -> num operComp var .)
    SYMBOL          reduce using rule 68 (condicion -> num operComp var .)
    LEFT_COR        reduce using rule 68 (condicion -> num operComp var .)
    PERCENTW        reduce using rule 68 (condicion -> num operComp var .)
    ARRAY           reduce using rule 68 (condicion -> num operComp var .)
    $end            reduce using rule 68 (condicion -> num operComp var .)
    END_LOWER       reduce using rule 68 (condicion -> num operComp var .)
    ELSE            reduce using rule 68 (condicion -> num operComp var .)
    RBRACE          reduce using rule 68 (condicion -> num operComp var .)
    END             reduce using rule 68 (condicion -> num operComp var .)


state 237

    (67) condicion -> var operComp num .

    AND             reduce using rule 67 (condicion -> var operComp num .)
    OR              reduce using rule 67 (condicion -> var operComp num .)
    AND_RESERVED    reduce using rule 67 (condicion -> var operComp num .)
    OR_RESERVED     reduce using rule 67 (condicion -> var operComp num .)
    EQUAL           reduce using rule 67 (condicion -> var operComp num .)
    PUT             reduce using rule 67 (condicion -> var operComp num .)
    GETS            reduce using rule 67 (condicion -> var operComp num .)
    LOCAL_VAR       reduce using rule 67 (condicion -> var operComp num .)
    INTEGER         reduce using rule 67 (condicion -> var operComp num .)
    FLOAT           reduce using rule 67 (condicion -> var operComp num .)
    STRING          reduce using rule 67 (condicion -> var operComp num .)
    LEFTPAR         reduce using rule 67 (condicion -> var operComp num .)
    SET             reduce using rule 67 (condicion -> var operComp num .)
    IF              reduce using rule 67 (condicion -> var operComp num .)
    WHILE           reduce using rule 67 (condicion -> var operComp num .)
    UNLESS          reduce using rule 67 (condicion -> var operComp num .)
    INSTANCE_VAR    reduce using rule 67 (condicion -> var operComp num .)
    CLASS_VAR       reduce using rule 67 (condicion -> var operComp num .)
    GLOBAL_VAR      reduce using rule 67 (condicion -> var operComp num .)
    CONSTANT        reduce using rule 67 (condicion -> var operComp num .)
    NIL             reduce using rule 67 (condicion -> var operComp num .)
    SYMBOL          reduce using rule 67 (condicion -> var operComp num .)
    LEFT_COR        reduce using rule 67 (condicion -> var operComp num .)
    PERCENTW        reduce using rule 67 (condicion -> var operComp num .)
    ARRAY           reduce using rule 67 (condicion -> var operComp num .)
    $end            reduce using rule 67 (condicion -> var operComp num .)
    END_LOWER       reduce using rule 67 (condicion -> var operComp num .)
    ELSE            reduce using rule 67 (condicion -> var operComp num .)
    RBRACE          reduce using rule 67 (condicion -> var operComp num .)
    END             reduce using rule 67 (condicion -> var operComp num .)


state 238

    (97) while_statement -> WHILE condiciones codigo END_LOWER .

    PUT             reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    GETS            reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    LOCAL_VAR       reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    INTEGER         reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    FLOAT           reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    STRING          reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    LEFTPAR         reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    SET             reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    IF              reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    WHILE           reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    UNLESS          reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    INSTANCE_VAR    reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    CLASS_VAR       reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    GLOBAL_VAR      reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    CONSTANT        reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    NIL             reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    SYMBOL          reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    LEFT_COR        reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    PERCENTW        reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    ARRAY           reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    $end            reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    END_LOWER       reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)
    ELSE            reduce using rule 97 (while_statement -> WHILE condiciones codigo END_LOWER .)


state 239

    (147) unless_expression -> UNLESS boolean_expression THEN expresion . END
    (148) unless_expression -> UNLESS boolean_expression THEN expresion . ELSE expresion END

    END             shift and go to state 276
    ELSE            shift and go to state 277


state 240

    (102) boolean_expression -> expression GREATER expression .

    THEN            reduce using rule 102 (boolean_expression -> expression GREATER expression .)


state 241

    (103) boolean_expression -> expression LESS expression .

    THEN            reduce using rule 103 (boolean_expression -> expression LESS expression .)


state 242

    (104) boolean_expression -> expression GREATER_EQUAL expression .

    THEN            reduce using rule 104 (boolean_expression -> expression GREATER_EQUAL expression .)


state 243

    (105) boolean_expression -> expression LESS_EQUAL expression .

    THEN            reduce using rule 105 (boolean_expression -> expression LESS_EQUAL expression .)


state 244

    (106) boolean_expression -> expression EQUAL expression .

    THEN            reduce using rule 106 (boolean_expression -> expression EQUAL expression .)


state 245

    (107) boolean_expression -> expression NOT_EQUAL expression .

    THEN            reduce using rule 107 (boolean_expression -> expression NOT_EQUAL expression .)


state 246

    (87) hash_access -> var LBRACE value RBRACE .

    ASSIGN          reduce using rule 87 (hash_access -> var LBRACE value RBRACE .)


state 247

    (50) array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .

    PUT             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    GETS            reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    LOCAL_VAR       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    INTEGER         reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    FLOAT           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    STRING          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    LEFTPAR         reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    SET             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    IF              reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    WHILE           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    UNLESS          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    CLASS_VAR       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    CONSTANT        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    NIL             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    SYMBOL          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    LEFT_COR        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    PERCENTW        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    ARRAY           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    $end            reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    END_LOWER       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    ELSE            reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)


state 248

    (29) values_space -> value SPACE . values_space
    (29) values_space -> . value SPACE values_space
    (30) values_space -> . value
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 195
    values_space                   shift and go to state 278
    num                            shift and go to state 53
    var                            shift and go to state 65

state 249

    (52) array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .

    PUT             reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    GETS            reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    LOCAL_VAR       reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    INTEGER         reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    FLOAT           reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    STRING          reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    LEFTPAR         reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    SET             reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    IF              reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    WHILE           reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    UNLESS          reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    CLASS_VAR       reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    CONSTANT        reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    NIL             reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    SYMBOL          reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    LEFT_COR        reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    PERCENTW        reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    ARRAY           reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    $end            reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    END_LOWER       reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    ELSE            reduce using rule 52 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)


state 250

    (54) newArray -> ARRAY DOT NEW LEFTPAR . INTEGER RIGHTPAR
    (55) newArray -> ARRAY DOT NEW LEFTPAR . INTEGER COMMA values RIGHTPAR

    INTEGER         shift and go to state 279


state 251

    (162) block_expression -> LBRACE PIPE LOCAL_VAR PIPE . expresion RBRACE
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 280
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 252

    (101) print_statement -> PUT LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 281


state 253

    (98) condition_with_connectors -> condiciones conectores condiciones .
    (60) condiciones -> condiciones conectores condiciones .
    (60) condiciones -> condiciones . conectores condiciones
    (61) conectores -> . AND
    (62) conectores -> . OR
    (63) conectores -> . AND_RESERVED
    (64) conectores -> . OR_RESERVED
    (65) conectores -> . EQUAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND_RESERVED resolved as shift
  ! shift/reduce conflict for OR_RESERVED resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    RBRACE          reduce using rule 98 (condition_with_connectors -> condiciones conectores condiciones .)
    END             reduce using rule 98 (condition_with_connectors -> condiciones conectores condiciones .)
    END_LOWER       reduce using rule 98 (condition_with_connectors -> condiciones conectores condiciones .)
    ELSE            reduce using rule 98 (condition_with_connectors -> condiciones conectores condiciones .)
    AND             shift and go to state 170
    OR              shift and go to state 171
    AND_RESERVED    shift and go to state 172
    OR_RESERVED     shift and go to state 173
    EQUAL           shift and go to state 174

  ! AND             [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! OR              [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! AND_RESERVED    [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! OR_RESERVED     [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]
  ! EQUAL           [ reduce using rule 60 (condiciones -> condiciones conectores condiciones .) ]

    conectores                     shift and go to state 169

state 254

    (163) block_expression -> DO PIPE LOCAL_VAR PIPE . expresion END
    (164) block_expression -> DO PIPE LOCAL_VAR PIPE . expresion END_LOWER
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 282
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 255

    (39) gets -> GETS DOT CHOMP DOT TO_F .

    PUT             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    GETS            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    LOCAL_VAR       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    INTEGER         reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    FLOAT           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    STRING          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    LEFTPAR         reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    SET             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    IF              reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    WHILE           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    UNLESS          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    INSTANCE_VAR    reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    CLASS_VAR       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    GLOBAL_VAR      reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    CONSTANT        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    NIL             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    SYMBOL          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    LEFT_COR        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    PERCENTW        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    ARRAY           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    $end            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    RBRACE          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    END             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    END_LOWER       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)
    ELSE            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_F .)


state 256

    (40) gets -> GETS DOT CHOMP DOT TO_I .

    PUT             reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    GETS            reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    LOCAL_VAR       reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    INTEGER         reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    FLOAT           reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    STRING          reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    LEFTPAR         reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    SET             reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    IF              reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    WHILE           reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    UNLESS          reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    INSTANCE_VAR    reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    CLASS_VAR       reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    GLOBAL_VAR      reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    CONSTANT        reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    NIL             reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    SYMBOL          reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    LEFT_COR        reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    PERCENTW        reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    ARRAY           reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    $end            reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    RBRACE          reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    END             reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    END_LOWER       reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)
    ELSE            reduce using rule 40 (gets -> GETS DOT CHOMP DOT TO_I .)


state 257

    (168) proc_call -> LOCAL_VAR DOT CALL LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 283


state 258

    (170) proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .

    PUT             reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    LEFTPAR         reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    SET             reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    IF              reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    $end            reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    ELSE            reduce using rule 170 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)


state 259

    (169) proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .

    PUT             reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    LEFTPAR         reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    ELSE            reduce using rule 169 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)


state 260

    (150) arithmetic_production -> LOCAL_VAR .
    (152) arithmetic_production -> LOCAL_VAR . arithmetic_operators arithmetic_production
    (153) arithmetic_operators -> . PLUS
    (154) arithmetic_operators -> . MINUS
    (155) arithmetic_operators -> . MULTIPLY
    (156) arithmetic_operators -> . DIVIDE
    (157) arithmetic_operators -> . MODULO
    (158) arithmetic_operators -> . EXPONENT

    PUT             reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    GETS            reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    INTEGER         reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    FLOAT           reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    STRING          reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    LEFTPAR         reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    SET             reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    IF              reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    WHILE           reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    UNLESS          reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    CONSTANT        reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    NIL             reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    SYMBOL          reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    PERCENTW        reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    ARRAY           reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    $end            reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    END_LOWER       reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    ELSE            reduce using rule 150 (arithmetic_production -> LOCAL_VAR .)
    PLUS            shift and go to state 223
    MINUS           shift and go to state 214
    MULTIPLY        shift and go to state 215
    DIVIDE          shift and go to state 216
    MODULO          shift and go to state 217
    EXPONENT        shift and go to state 218

    arithmetic_operators           shift and go to state 212

state 261

    (152) arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .

    PUT             reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    GETS            reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    LOCAL_VAR       reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    INTEGER         reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    FLOAT           reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    STRING          reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    LEFTPAR         reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    SET             reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    IF              reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    WHILE           reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    UNLESS          reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    INSTANCE_VAR    reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    CLASS_VAR       reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    GLOBAL_VAR      reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    CONSTANT        reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    NIL             reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    SYMBOL          reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    LEFT_COR        reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    PERCENTW        reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    ARRAY           reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    $end            reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    END_LOWER       reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    ELSE            reduce using rule 152 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)


state 262

    (149) arithmetic_production -> num .
    (151) arithmetic_production -> num . arithmetic_operators arithmetic_production
    (153) arithmetic_operators -> . PLUS
    (154) arithmetic_operators -> . MINUS
    (155) arithmetic_operators -> . MULTIPLY
    (156) arithmetic_operators -> . DIVIDE
    (157) arithmetic_operators -> . MODULO
    (158) arithmetic_operators -> . EXPONENT

    PUT             reduce using rule 149 (arithmetic_production -> num .)
    GETS            reduce using rule 149 (arithmetic_production -> num .)
    LOCAL_VAR       reduce using rule 149 (arithmetic_production -> num .)
    INTEGER         reduce using rule 149 (arithmetic_production -> num .)
    FLOAT           reduce using rule 149 (arithmetic_production -> num .)
    STRING          reduce using rule 149 (arithmetic_production -> num .)
    LEFTPAR         reduce using rule 149 (arithmetic_production -> num .)
    SET             reduce using rule 149 (arithmetic_production -> num .)
    IF              reduce using rule 149 (arithmetic_production -> num .)
    WHILE           reduce using rule 149 (arithmetic_production -> num .)
    UNLESS          reduce using rule 149 (arithmetic_production -> num .)
    INSTANCE_VAR    reduce using rule 149 (arithmetic_production -> num .)
    CLASS_VAR       reduce using rule 149 (arithmetic_production -> num .)
    GLOBAL_VAR      reduce using rule 149 (arithmetic_production -> num .)
    CONSTANT        reduce using rule 149 (arithmetic_production -> num .)
    NIL             reduce using rule 149 (arithmetic_production -> num .)
    SYMBOL          reduce using rule 149 (arithmetic_production -> num .)
    LEFT_COR        reduce using rule 149 (arithmetic_production -> num .)
    PERCENTW        reduce using rule 149 (arithmetic_production -> num .)
    ARRAY           reduce using rule 149 (arithmetic_production -> num .)
    $end            reduce using rule 149 (arithmetic_production -> num .)
    END_LOWER       reduce using rule 149 (arithmetic_production -> num .)
    ELSE            reduce using rule 149 (arithmetic_production -> num .)
    PLUS            shift and go to state 223
    MINUS           shift and go to state 214
    MULTIPLY        shift and go to state 215
    DIVIDE          shift and go to state 216
    MODULO          shift and go to state 217
    EXPONENT        shift and go to state 218

    arithmetic_operators           shift and go to state 222

state 263

    (81) concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .

    PUT             reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    GETS            reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    INTEGER         reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    FLOAT           reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    STRING          reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    LEFTPAR         reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    SET             reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    IF              reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    WHILE           reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    UNLESS          reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    CLASS_VAR       reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    CONSTANT        reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    NIL             reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    SYMBOL          reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    LEFT_COR        reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    PERCENTW        reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    ARRAY           reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    $end            reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    END_LOWER       reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    ELSE            reduce using rule 81 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)


state 264

    (80) concatenar_string -> LOCAL_VAR PLUS STRING .

    PUT             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    GETS            reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    LOCAL_VAR       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    INTEGER         reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    FLOAT           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    STRING          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    LEFTPAR         reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    SET             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    IF              reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    WHILE           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    UNLESS          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    INSTANCE_VAR    reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    CLASS_VAR       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    GLOBAL_VAR      reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    CONSTANT        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    NIL             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    SYMBOL          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    LEFT_COR        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    PERCENTW        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    ARRAY           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    $end            reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    END_LOWER       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    ELSE            reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS STRING .)


state 265

    (83) hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .

    PUT             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    GETS            reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    LOCAL_VAR       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    INTEGER         reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    FLOAT           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    STRING          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    LEFTPAR         reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    SET             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    IF              reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    WHILE           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    UNLESS          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    INSTANCE_VAR    reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    CLASS_VAR       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    GLOBAL_VAR      reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    CONSTANT        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    NIL             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    SYMBOL          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    LEFT_COR        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    PERCENTW        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    ARRAY           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    $end            reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    END_LOWER       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    ELSE            reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)


state 266

    (85) hash_values -> STRING HASH_ROCKET . value
    (86) hash_values -> STRING HASH_ROCKET . value COMMA hash_values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    value                          shift and go to state 284
    num                            shift and go to state 53
    var                            shift and go to state 65

state 267

    (151) arithmetic_production -> num arithmetic_operators arithmetic_production .

    PUT             reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    GETS            reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    LOCAL_VAR       reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    INTEGER         reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    FLOAT           reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    STRING          reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    LEFTPAR         reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    SET             reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    IF              reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    WHILE           reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    UNLESS          reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    INSTANCE_VAR    reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    CLASS_VAR       reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    GLOBAL_VAR      reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    CONSTANT        reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    NIL             reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    SYMBOL          reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    LEFT_COR        reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    PERCENTW        reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    ARRAY           reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    $end            reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    END_LOWER       reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    ELSE            reduce using rule 151 (arithmetic_production -> num arithmetic_operators arithmetic_production .)


state 268

    (78) concatenar_string -> STRING PLUS STRING .

    PUT             reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    GETS            reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    LOCAL_VAR       reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    INTEGER         reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    FLOAT           reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    STRING          reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    LEFTPAR         reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    SET             reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    IF              reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    WHILE           reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    UNLESS          reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    INSTANCE_VAR    reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    CLASS_VAR       reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    GLOBAL_VAR      reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    CONSTANT        reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    NIL             reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    SYMBOL          reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    LEFT_COR        reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    PERCENTW        reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    ARRAY           reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    $end            reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    END_LOWER       reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)
    ELSE            reduce using rule 78 (concatenar_string -> STRING PLUS STRING .)


state 269

    (79) concatenar_string -> STRING PLUS LOCAL_VAR .

    PUT             reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    GETS            reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    INTEGER         reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    FLOAT           reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    STRING          reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    LEFTPAR         reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    SET             reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    IF              reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    WHILE           reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    UNLESS          reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    CLASS_VAR       reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    CONSTANT        reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    NIL             reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    SYMBOL          reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    LEFT_COR        reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    PERCENTW        reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    ARRAY           reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    $end            reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    END_LOWER       reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    ELSE            reduce using rule 79 (concatenar_string -> STRING PLUS LOCAL_VAR .)


state 270

    (166) proc_expression -> PROC DOT NEW . block_expression
    (159) block_expression -> . LBRACE expresion RBRACE
    (160) block_expression -> . DO expresion END
    (161) block_expression -> . DO expresion END_LOWER
    (162) block_expression -> . LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
    (163) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END
    (164) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END_LOWER

    LBRACE          shift and go to state 61
    DO              shift and go to state 62

    block_expression               shift and go to state 285

state 271

    (135) range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .

    PUT             reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    GETS            reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    LOCAL_VAR       reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    INTEGER         reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    FLOAT           reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    STRING          reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    LEFTPAR         reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    SET             reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    IF              reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    WHILE           reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    UNLESS          reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    CLASS_VAR       reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    CONSTANT        reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    NIL             reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    SYMBOL          reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    LEFT_COR        reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    PERCENTW        reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    ARRAY           reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    $end            reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    END_LOWER       reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)
    ELSE            reduce using rule 135 (range_expression -> LEFTPAR value RANGEIN value RIGHTPAR .)


state 272

    (136) range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .

    PUT             reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    GETS            reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    LOCAL_VAR       reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    INTEGER         reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    FLOAT           reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    STRING          reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    LEFTPAR         reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    SET             reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    IF              reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    WHILE           reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    UNLESS          reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    CLASS_VAR       reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    CONSTANT        reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    NIL             reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    SYMBOL          reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    LEFT_COR        reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    PERCENTW        reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    ARRAY           reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    $end            reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    END_LOWER       reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)
    ELSE            reduce using rule 136 (range_expression -> LEFTPAR value RANGEEX value RIGHTPAR .)


state 273

    (137) set_expression -> SET DOT NEW LEFTPAR LEFT_COR . values RIGHT_COR RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 286
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 274

    (58) ifStatement -> IF condiciones codigo else_statement END_LOWER .

    PUT             reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    GETS            reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    LOCAL_VAR       reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    INTEGER         reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    FLOAT           reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    STRING          reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    LEFTPAR         reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    SET             reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    IF              reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    WHILE           reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    UNLESS          reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    INSTANCE_VAR    reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    CLASS_VAR       reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    GLOBAL_VAR      reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    CONSTANT        reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    NIL             reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    SYMBOL          reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    LEFT_COR        reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    PERCENTW        reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    ARRAY           reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    $end            reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    END_LOWER       reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)
    ELSE            reduce using rule 58 (ifStatement -> IF condiciones codigo else_statement END_LOWER .)


state 275

    (76) else_statement -> ELSE codigo .
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (14) sentencia -> . range_expression
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (15) estructurasDatos -> . array
    (16) estructurasDatos -> . acceder_arreglo
    (17) estructurasDatos -> . hash_operations
    (18) estructurasDatos -> . hash_var
    (19) estructurasDatos -> . set_expression
    (20) estructurasDatos -> . set_operations
    (21) estructurasControl -> . ifStatement
    (22) estructurasControl -> . while_statement
    (23) estructurasControl -> . unless_expression
    (99) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (100) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (165) block_assignment -> . method_call block_expression
    (168) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (169) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (170) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (171) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (172) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (173) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (120) declaraciones -> . variable_declaration
    (121) declaraciones -> . store_conditional_result
    (122) declaraciones -> . declare_data_structures
    (123) declaraciones -> . var_arreglo
    (124) declaraciones -> . hash_var
    (125) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (126) declaraciones -> . declaracion_concatenar_string
    (127) declaraciones -> . proc_assignment
    (111) expression -> . INTEGER
    (112) expression -> . FLOAT
    (113) expression -> . variable
    (114) expression -> . STRING
    (77) to_string -> . LOCAL_VAR DOT TO_S
    (131) comparador -> . value EQUAL value
    (132) comparador -> . value COMPARE value
    (133) range_expression -> . value RANGEIN value
    (134) range_expression -> . value RANGEEX value
    (135) range_expression -> . LEFTPAR value RANGEIN value RIGHTPAR
    (136) range_expression -> . LEFTPAR value RANGEEX value RIGHTPAR
    (43) array -> . array_explicito
    (44) array -> . array_implicito
    (45) array -> . array_creation
    (46) array -> . newArray
    (56) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (88) hash_operations -> . hash_access ASSIGN value
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (84) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (137) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (138) set_expression -> . SET LEFT_COR values RIGHT_COR
    (139) set_operations -> . set_expression
    (140) set_operations -> . set_operations set_binary_operators set_expression
    (57) ifStatement -> . IF condiciones codigo END_LOWER
    (58) ifStatement -> . IF condiciones codigo else_statement END_LOWER
    (97) while_statement -> . WHILE condiciones codigo END_LOWER
    (147) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (148) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (89) variable_declaration -> . LOCAL_VAR ASSIGN value
    (90) variable_declaration -> . LOCAL_VAR PLUS_ASSIGN value
    (91) variable_declaration -> . LOCAL_VAR MULTIPLY_ASSIGN value
    (92) variable_declaration -> . LOCAL_VAR MINUS_ASSIGN value
    (93) variable_declaration -> . LOCAL_VAR DIVIDE_ASSIGN value
    (94) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (95) declare_data_structures -> . var_arreglo
    (96) declare_data_structures -> . hash_var
    (141) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (47) var_arreglo -> . LOCAL_VAR ASSIGN array
    (82) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (167) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (115) variable -> . LOCAL_VAR
    (116) variable -> . INSTANCE_VAR
    (117) variable -> . CLASS_VAR
    (118) variable -> . GLOBAL_VAR
    (119) variable -> . CONSTANT
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (48) array_explicito -> . LEFT_COR values RIGHT_COR
    (49) array_explicito -> . LEFT_COR RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (51) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (52) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (53) newArray -> . ARRAY DOT NEW
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (55) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (87) hash_access -> . var LBRACE value RBRACE
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    END_LOWER       reduce using rule 76 (else_statement -> ELSE codigo .)
    PUT             shift and go to state 15
    GETS            shift and go to state 16
    LOCAL_VAR       shift and go to state 26
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 38
    LEFTPAR         shift and go to state 27
    SET             shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    UNLESS          shift and go to state 48
    INSTANCE_VAR    shift and go to state 49
    CLASS_VAR       shift and go to state 50
    GLOBAL_VAR      shift and go to state 51
    CONSTANT        shift and go to state 52
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    LEFT_COR        shift and go to state 28
    PERCENTW        shift and go to state 57
    ARRAY           shift and go to state 58

    sentencia                      shift and go to state 59
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    range_expression               shift and go to state 14
    array                          shift and go to state 17
    acceder_arreglo                shift and go to state 18
    hash_operations                shift and go to state 19
    hash_var                       shift and go to state 20
    set_expression                 shift and go to state 21
    set_operations                 shift and go to state 22
    ifStatement                    shift and go to state 23
    while_statement                shift and go to state 24
    unless_expression              shift and go to state 25
    variable_declaration           shift and go to state 29
    store_conditional_result       shift and go to state 30
    declare_data_structures        shift and go to state 31
    var_arreglo                    shift and go to state 32
    declaracion_concatenar_string  shift and go to state 33
    proc_assignment                shift and go to state 34
    variable                       shift and go to state 37
    value                          shift and go to state 39
    array_explicito                shift and go to state 40
    array_implicito                shift and go to state 41
    array_creation                 shift and go to state 42
    newArray                       shift and go to state 43
    hash_access                    shift and go to state 44
    num                            shift and go to state 53
    var                            shift and go to state 54

state 276

    (147) unless_expression -> UNLESS boolean_expression THEN expresion END .

    PUT             reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    GETS            reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    LOCAL_VAR       reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    INTEGER         reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    FLOAT           reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    STRING          reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    LEFTPAR         reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    SET             reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    IF              reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    WHILE           reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    UNLESS          reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    INSTANCE_VAR    reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    CLASS_VAR       reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    GLOBAL_VAR      reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    CONSTANT        reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    NIL             reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    SYMBOL          reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    LEFT_COR        reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    PERCENTW        reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    ARRAY           reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    $end            reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    END_LOWER       reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    ELSE            reduce using rule 147 (unless_expression -> UNLESS boolean_expression THEN expresion END .)


state 277

    (148) unless_expression -> UNLESS boolean_expression THEN expresion ELSE . expresion END
    (128) expresion -> . puts
    (129) expresion -> . gets
    (130) expresion -> . print_statement
    (174) expresion -> . condition_with_connectors
    (42) puts -> . PUT values
    (39) gets -> . GETS DOT CHOMP DOT TO_F
    (40) gets -> . GETS DOT CHOMP DOT TO_I
    (41) gets -> . GETS DOT CHOMP
    (101) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (98) condition_with_connectors -> . condiciones conectores condiciones
    (59) condiciones -> . condicion
    (60) condiciones -> . condiciones conectores condiciones
    (66) condicion -> . num operComp num
    (67) condicion -> . var operComp num
    (68) condicion -> . num operComp var
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    PUT             shift and go to state 126
    GETS            shift and go to state 16
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    expresion                      shift and go to state 287
    puts                           shift and go to state 122
    gets                           shift and go to state 123
    print_statement                shift and go to state 124
    condition_with_connectors      shift and go to state 125
    condiciones                    shift and go to state 127
    condicion                      shift and go to state 100
    num                            shift and go to state 101
    var                            shift and go to state 102

state 278

    (29) values_space -> value SPACE values_space .

    RIGHT_COR       reduce using rule 29 (values_space -> value SPACE values_space .)


state 279

    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER . RIGHTPAR
    (55) newArray -> ARRAY DOT NEW LEFTPAR INTEGER . COMMA values RIGHTPAR

    RIGHTPAR        shift and go to state 288
    COMMA           shift and go to state 289


state 280

    (162) block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion . RBRACE

    RBRACE          shift and go to state 290


state 281

    (101) print_statement -> PUT LEFTPAR values RIGHTPAR .

    RBRACE          reduce using rule 101 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    END             reduce using rule 101 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 101 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    ELSE            reduce using rule 101 (print_statement -> PUT LEFTPAR values RIGHTPAR .)


state 282

    (163) block_expression -> DO PIPE LOCAL_VAR PIPE expresion . END
    (164) block_expression -> DO PIPE LOCAL_VAR PIPE expresion . END_LOWER

    END             shift and go to state 291
    END_LOWER       shift and go to state 292


state 283

    (168) proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .

    PUT             reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    LEFTPAR         reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    ELSE            reduce using rule 168 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)


state 284

    (85) hash_values -> STRING HASH_ROCKET value .
    (86) hash_values -> STRING HASH_ROCKET value . COMMA hash_values

    RBRACE          reduce using rule 85 (hash_values -> STRING HASH_ROCKET value .)
    COMMA           shift and go to state 293


state 285

    (166) proc_expression -> PROC DOT NEW block_expression .

    PUT             reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    GETS            reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    LOCAL_VAR       reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    INTEGER         reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    FLOAT           reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    STRING          reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    LEFTPAR         reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    SET             reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    IF              reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    WHILE           reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    UNLESS          reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    INSTANCE_VAR    reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    CLASS_VAR       reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    GLOBAL_VAR      reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    CONSTANT        reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    NIL             reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    SYMBOL          reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    LEFT_COR        reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    PERCENTW        reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    ARRAY           reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    $end            reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    END_LOWER       reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)
    ELSE            reduce using rule 166 (proc_expression -> PROC DOT NEW block_expression .)


state 286

    (137) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values . RIGHT_COR RIGHTPAR

    RIGHT_COR       shift and go to state 294


state 287

    (148) unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion . END

    END             shift and go to state 295


state 288

    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .

    PUT             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    GETS            reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    LOCAL_VAR       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    INTEGER         reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    FLOAT           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    STRING          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    LEFTPAR         reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    SET             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    IF              reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    WHILE           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    UNLESS          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    CLASS_VAR       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    CONSTANT        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    NIL             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    SYMBOL          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    LEFT_COR        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    PERCENTW        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    ARRAY           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    $end            reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    END_LOWER       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    ELSE            reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)


state 289

    (55) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA . values RIGHTPAR
    (31) values -> . value
    (32) values -> . value COMMA values
    (24) value -> . num
    (25) value -> . var
    (26) value -> . STRING
    (27) value -> . NIL
    (28) value -> . SYMBOL
    (37) num -> . FLOAT
    (38) num -> . INTEGER
    (33) var -> . LOCAL_VAR
    (34) var -> . INSTANCE_VAR
    (35) var -> . CLASS_VAR
    (36) var -> . GLOBAL_VAR

    STRING          shift and go to state 66
    NIL             shift and go to state 55
    SYMBOL          shift and go to state 56
    FLOAT           shift and go to state 67
    INTEGER         shift and go to state 68
    LOCAL_VAR       shift and go to state 69
    INSTANCE_VAR    shift and go to state 70
    CLASS_VAR       shift and go to state 71
    GLOBAL_VAR      shift and go to state 72

    values                         shift and go to state 296
    value                          shift and go to state 64
    num                            shift and go to state 53
    var                            shift and go to state 65

state 290

    (162) block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .

    PUT             reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    GETS            reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    LOCAL_VAR       reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    INTEGER         reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    FLOAT           reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    STRING          reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    LEFTPAR         reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    SET             reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    IF              reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    WHILE           reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    UNLESS          reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    INSTANCE_VAR    reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    CLASS_VAR       reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    GLOBAL_VAR      reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    CONSTANT        reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    NIL             reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    SYMBOL          reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    LEFT_COR        reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    PERCENTW        reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    ARRAY           reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    $end            reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    END_LOWER       reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    ELSE            reduce using rule 162 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)


state 291

    (163) block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .

    PUT             reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    GETS            reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    LOCAL_VAR       reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    INTEGER         reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    FLOAT           reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    STRING          reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    LEFTPAR         reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    SET             reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    IF              reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    WHILE           reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    UNLESS          reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    INSTANCE_VAR    reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    CLASS_VAR       reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    GLOBAL_VAR      reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    CONSTANT        reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    NIL             reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    SYMBOL          reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    LEFT_COR        reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    PERCENTW        reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    ARRAY           reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    $end            reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    END_LOWER       reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    ELSE            reduce using rule 163 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)


state 292

    (164) block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .

    PUT             reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    GETS            reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    LOCAL_VAR       reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    INTEGER         reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    FLOAT           reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    STRING          reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    LEFTPAR         reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    SET             reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    IF              reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    WHILE           reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    UNLESS          reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    INSTANCE_VAR    reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    CLASS_VAR       reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    GLOBAL_VAR      reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    CONSTANT        reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    NIL             reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    SYMBOL          reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    LEFT_COR        reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    PERCENTW        reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    ARRAY           reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    $end            reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    END_LOWER       reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    ELSE            reduce using rule 164 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)


state 293

    (86) hash_values -> STRING HASH_ROCKET value COMMA . hash_values
    (85) hash_values -> . STRING HASH_ROCKET value
    (86) hash_values -> . STRING HASH_ROCKET value COMMA hash_values

    STRING          shift and go to state 221

    hash_values                    shift and go to state 297

state 294

    (137) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR . RIGHTPAR

    RIGHTPAR        shift and go to state 298


state 295

    (148) unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .

    PUT             reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    GETS            reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    LOCAL_VAR       reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    INTEGER         reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    FLOAT           reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    STRING          reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    LEFTPAR         reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    SET             reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    IF              reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    WHILE           reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    UNLESS          reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    INSTANCE_VAR    reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    CLASS_VAR       reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    GLOBAL_VAR      reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    CONSTANT        reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    NIL             reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    SYMBOL          reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    LEFT_COR        reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    PERCENTW        reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    ARRAY           reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    $end            reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    END_LOWER       reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    ELSE            reduce using rule 148 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)


state 296

    (55) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values . RIGHTPAR

    RIGHTPAR        shift and go to state 299


state 297

    (86) hash_values -> STRING HASH_ROCKET value COMMA hash_values .

    RBRACE          reduce using rule 86 (hash_values -> STRING HASH_ROCKET value COMMA hash_values .)


state 298

    (137) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .

    PUT             reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    GETS            reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    INTEGER         reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    FLOAT           reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    STRING          reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    LEFTPAR         reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    SET             reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    IF              reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    WHILE           reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    UNLESS          reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CLASS_VAR       reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CONSTANT        reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    NIL             reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    SYMBOL          reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    LEFT_COR        reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PERCENTW        reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    ARRAY           reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    $end            reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PLUS            reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    MINUS           reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    AMPERSAND       reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PIPE            reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CARET           reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    END_LOWER       reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    ELSE            reduce using rule 137 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)


state 299

    (55) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .

    PUT             reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    GETS            reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    INTEGER         reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    FLOAT           reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    STRING          reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    LEFTPAR         reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    SET             reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    IF              reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    WHILE           reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    UNLESS          reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    CLASS_VAR       reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    CONSTANT        reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    NIL             reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    SYMBOL          reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    LEFT_COR        reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    PERCENTW        reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    ARRAY           reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    $end            reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    END_LOWER       reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    ELSE            reduce using rule 55 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFTPAR in state 26 resolved as shift
WARNING: shift/reduce conflict for LEFT_COR in state 26 resolved as shift
WARNING: shift/reduce conflict for LEFT_COR in state 32 resolved as shift
WARNING: shift/reduce conflict for LEFT_COR in state 32 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 197 resolved as shift
WARNING: shift/reduce conflict for LOCAL_VAR in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 234 resolved as shift
WARNING: shift/reduce conflict for OR in state 234 resolved as shift
WARNING: shift/reduce conflict for AND_RESERVED in state 234 resolved as shift
WARNING: shift/reduce conflict for OR_RESERVED in state 234 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 234 resolved as shift
WARNING: shift/reduce conflict for AND in state 253 resolved as shift
WARNING: shift/reduce conflict for OR in state 253 resolved as shift
WARNING: shift/reduce conflict for AND_RESERVED in state 253 resolved as shift
WARNING: shift/reduce conflict for OR_RESERVED in state 253 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 253 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (estructurasDatos -> hash_var)
WARNING: rejected rule (declaraciones -> hash_var) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (estructurasDatos -> hash_var)
WARNING: rejected rule (declare_data_structures -> hash_var) in state 20
WARNING: reduce/reduce conflict in state 21 resolved using rule (estructurasDatos -> set_expression)
WARNING: rejected rule (set_operations -> set_expression) in state 21
WARNING: reduce/reduce conflict in state 32 resolved using rule (declare_data_structures -> var_arreglo)
WARNING: rejected rule (declaraciones -> var_arreglo) in state 32
WARNING: reduce/reduce conflict in state 140 resolved using rule (var -> LOCAL_VAR)
WARNING: rejected rule (arithmetic_production -> LOCAL_VAR) in state 140
WARNING: reduce/reduce conflict in state 149 resolved using rule (value -> num)
WARNING: rejected rule (arithmetic_production -> num) in state 149
WARNING: Rule (declaraciones -> hash_var) is never reduced
WARNING: Rule (declare_data_structures -> hash_var) is never reduced
WARNING: Rule (declaraciones -> var_arreglo) is never reduced
