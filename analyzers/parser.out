Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    BEGIN
    BIN_INTEGER
    BOOLEAN
    BREAK
    CASE
    CASE_EQUAL
    CLASS
    COLON
    DEF
    DEFINED
    DIVIDE_ASSIGN
    DOUBLE_QUOTE
    ELSIF
    EXPONENT_ASSIGN
    FOR
    HEX_INTEGER
    IN
    MINUS_ASSIGN
    MODULE
    MODULO_ASSIGN
    MULTIPLY_ASSIGN
    NMAP
    NOT
    OCT_INTEGER
    PLUS_ASSIGN
    QUOTATION
    RANGEEX
    RANGEIN
    REDO
    RETURN
    SELF
    TAB
    UNTIL
    WHEN

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> sentencia
Rule 2     codigo -> codigo sentencia
Rule 3     sentencia -> puts
Rule 4     sentencia -> gets
Rule 5     sentencia -> estructurasDatos
Rule 6     sentencia -> estructurasControl
Rule 7     sentencia -> method_call
Rule 8     sentencia -> block_assignment
Rule 9     sentencia -> proc_call
Rule 10    sentencia -> declaraciones
Rule 11    sentencia -> expression
Rule 12    sentencia -> to_string
Rule 13    sentencia -> comparador
Rule 14    estructurasDatos -> array
Rule 15    estructurasDatos -> acceder_arreglo
Rule 16    estructurasDatos -> hash_operations
Rule 17    estructurasDatos -> hash_var
Rule 18    estructurasDatos -> set_expression
Rule 19    estructurasDatos -> set_operations
Rule 20    estructurasControl -> ifStatement
Rule 21    estructurasControl -> while_statement
Rule 22    estructurasControl -> unless_expression
Rule 23    value -> num
Rule 24    value -> var
Rule 25    value -> STRING
Rule 26    value -> NIL
Rule 27    value -> SYMBOL
Rule 28    values_space -> value SPACE values_space
Rule 29    values_space -> value
Rule 30    values -> value
Rule 31    values -> value COMMA values
Rule 32    var -> LOCAL_VAR
Rule 33    var -> INSTANCE_VAR
Rule 34    var -> CLASS_VAR
Rule 35    var -> GLOBAL_VAR
Rule 36    num -> FLOAT
Rule 37    num -> INTEGER
Rule 38    gets -> GETS DOT CHOMP DOT TO_F
Rule 39    gets -> GETS DOT CHOMP DOT TO_I
Rule 40    gets -> GETS DOT CHOMP
Rule 41    puts -> PUT values
Rule 42    array -> array_explicito
Rule 43    array -> array_implicito
Rule 44    array -> array_creation
Rule 45    array -> newArray
Rule 46    var_arreglo -> LOCAL_VAR ASSIGN array
Rule 47    array_explicito -> LEFT_COR values RIGHT_COR
Rule 48    array_explicito -> LEFT_COR RIGHT_COR
Rule 49    array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR
Rule 50    array_implicito -> PERCENTW LEFT_COR RIGHT_COR
Rule 51    array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR
Rule 52    newArray -> ARRAY DOT NEW
Rule 53    newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
Rule 54    newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
Rule 55    acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR
Rule 56    ifStatement -> IF condiciones NEWLINE codigo END_LOWER
Rule 57    ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
Rule 58    condiciones -> condicion
Rule 59    condiciones -> condiciones conectores condiciones
Rule 60    conectores -> AND
Rule 61    conectores -> OR
Rule 62    conectores -> AND_RESERVED
Rule 63    conectores -> OR_RESERVED
Rule 64    conectores -> EQUAL
Rule 65    condicion -> num operComp num
Rule 66    condicion -> var operComp num
Rule 67    condicion -> num operComp var
Rule 68    operComp -> GREATER
Rule 69    operComp -> LESS
Rule 70    operComp -> GREATER_EQUAL
Rule 71    operComp -> LESS_EQUAL
Rule 72    operComp -> EQUAL
Rule 73    operComp -> NOT_EQUAL
Rule 74    operComp -> COMPARE
Rule 75    else_statement -> ELSE NEWLINE codigo
Rule 76    to_string -> LOCAL_VAR DOT TO_S
Rule 77    concatenar_string -> STRING PLUS STRING
Rule 78    concatenar_string -> STRING PLUS LOCAL_VAR
Rule 79    concatenar_string -> LOCAL_VAR PLUS STRING
Rule 80    concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR
Rule 81    declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string
Rule 82    hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
Rule 83    hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE
Rule 84    hash_values -> STRING HASH_ROCKET value
Rule 85    hash_values -> STRING HASH_ROCKET value COMMA hash_values
Rule 86    hash_access -> var LBRACE value RBRACE
Rule 87    hash_operations -> hash_access ASSIGN value
Rule 88    variable_declaration -> LOCAL_VAR ASSIGN value
Rule 89    store_conditional_result -> LOCAL_VAR ASSIGN condiciones
Rule 90    declare_data_structures -> var_arreglo
Rule 91    declare_data_structures -> hash_var
Rule 92    while_statement -> WHILE condiciones codigo END_LOWER
Rule 93    condition_with_connectors -> condiciones conectores condiciones
Rule 94    method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR
Rule 95    method_call -> LOCAL_VAR LEFTPAR RIGHTPAR
Rule 96    print_statement -> PUT LEFTPAR values RIGHTPAR
Rule 97    boolean_expression -> expression GREATER expression
Rule 98    boolean_expression -> expression LESS expression
Rule 99    boolean_expression -> expression GREATER_EQUAL expression
Rule 100   boolean_expression -> expression LESS_EQUAL expression
Rule 101   boolean_expression -> expression EQUAL expression
Rule 102   boolean_expression -> expression NOT_EQUAL expression
Rule 103   boolean_expression -> boolean_value
Rule 104   boolean_value -> TRUE
Rule 105   boolean_value -> FALSE
Rule 106   expression -> INTEGER
Rule 107   expression -> FLOAT
Rule 108   expression -> variable
Rule 109   expression -> STRING
Rule 110   variable -> LOCAL_VAR
Rule 111   variable -> INSTANCE_VAR
Rule 112   variable -> CLASS_VAR
Rule 113   variable -> GLOBAL_VAR
Rule 114   variable -> CONSTANT
Rule 115   declaraciones -> variable_declaration
Rule 116   declaraciones -> store_conditional_result
Rule 117   declaraciones -> declare_data_structures
Rule 118   declaraciones -> var_arreglo
Rule 119   declaraciones -> hash_var
Rule 120   declaraciones -> LOCAL_VAR ASSIGN arithmetic_production
Rule 121   declaraciones -> declaracion_concatenar_string
Rule 122   declaraciones -> proc_assignment
Rule 123   expresion -> puts
Rule 124   expresion -> gets
Rule 125   expresion -> print_statement
Rule 126   comparador -> value EQUAL value
Rule 127   comparador -> value COMPARE value
Rule 128   set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
Rule 129   set_expression -> SET LEFT_COR values RIGHT_COR
Rule 130   set_operations -> set_expression
Rule 131   set_operations -> set_operations set_binary_operators set_expression
Rule 132   declare_data_structures -> LOCAL_VAR ASSIGN set_expression
Rule 133   set_binary_operators -> PLUS
Rule 134   set_binary_operators -> MINUS
Rule 135   set_binary_operators -> AMPERSAND
Rule 136   set_binary_operators -> PIPE
Rule 137   set_binary_operators -> CARET
Rule 138   unless_expression -> UNLESS boolean_expression THEN expresion END
Rule 139   unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END
Rule 140   arithmetic_production -> num
Rule 141   arithmetic_production -> LOCAL_VAR
Rule 142   arithmetic_production -> num arithmetic_operators arithmetic_production
Rule 143   arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production
Rule 144   arithmetic_operators -> PLUS
Rule 145   arithmetic_operators -> MINUS
Rule 146   arithmetic_operators -> MULTIPLY
Rule 147   arithmetic_operators -> DIVIDE
Rule 148   arithmetic_operators -> MODULO
Rule 149   arithmetic_operators -> EXPONENT
Rule 150   block_expression -> LBRACE expresion RBRACE
Rule 151   block_expression -> DO expresion END
Rule 152   block_expression -> DO expresion END_LOWER
Rule 153   block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
Rule 154   block_expression -> DO PIPE LOCAL_VAR PIPE expresion END
Rule 155   block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER
Rule 156   block_assignment -> method_call block_expression
Rule 157   proc_expression -> PROC DOT NEW block_expression
Rule 158   proc_assignment -> LOCAL_VAR ASSIGN proc_expression
Rule 159   proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
Rule 160   proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR
Rule 161   proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR
Rule 162   proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
Rule 163   proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR
Rule 164   proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR
Rule 165   expresion -> condition_with_connectors

Terminals, with rules where they appear

AMPERSAND            : 135
AND                  : 60
AND_RESERVED         : 62
ARRAY                : 51 52 53 54
ASSIGN               : 46 81 82 83 87 88 89 120 132 158
BACKSLASH            : 
BEGIN                : 
BIN_INTEGER          : 
BOOLEAN              : 
BREAK                : 
CALL                 : 159 162
CARET                : 137
CASE                 : 
CASE_EQUAL           : 
CHOMP                : 38 39 40
CLASS                : 
CLASS_VAR            : 34 112
COLON                : 
COMMA                : 31 54 85
COMPARE              : 74 127
CONSTANT             : 114
DEF                  : 
DEFINED              : 
DIVIDE               : 147
DIVIDE_ASSIGN        : 
DO                   : 151 152 154 155
DOT                  : 38 38 39 39 40 52 53 54 76 128 157 159 160 162 163
DOUBLE_QUOTE         : 
ELSE                 : 75 139
ELSIF                : 
END                  : 138 139 151 154
END_LOWER            : 56 57 92 152 155
EQUAL                : 64 72 101 126
EXPONENT             : 149
EXPONENT_ASSIGN      : 
FALSE                : 105
FLOAT                : 36 107
FOR                  : 
GETS                 : 38 39 40
GLOBAL_VAR           : 35 113
GREATER              : 68 97
GREATER_EQUAL        : 70 99
HASH_ROCKET          : 84 85
HEX_INTEGER          : 
IF                   : 56 57
IN                   : 
INSTANCE_VAR         : 33 111
INTEGER              : 37 53 54 55 106
LBRACE               : 82 83 86 150 153
LEFTPAR              : 51 53 54 94 95 96 128 159 160 162 163
LEFT_COR             : 47 48 49 50 55 128 129 161 164
LESS                 : 69 98
LESS_EQUAL           : 71 100
LOCAL_VAR            : 32 46 76 78 79 80 80 81 82 83 88 89 94 95 110 120 132 141 143 153 154 155 158 159 160 161 162 163 164
MINUS                : 134 145
MINUS_ASSIGN         : 
MODULE               : 
MODULO               : 148
MODULO_ASSIGN        : 
MULTIPLY             : 146
MULTIPLY_ASSIGN      : 
NEW                  : 52 53 54 128 157
NEWLINE              : 56 57 57 75
NIL                  : 26
NMAP                 : 
NOT                  : 
NOT_EQUAL            : 73 102
OCT_INTEGER          : 
OR                   : 61
OR_RESERVED          : 63
PERCENTW             : 49 50
PIPE                 : 136 153 153 154 154 155 155
PLUS                 : 77 78 79 80 133 144
PLUS_ASSIGN          : 
PROC                 : 157
PUT                  : 41 96
QUOTATION            : 
RANGEEX              : 
RANGEIN              : 
RBRACE               : 82 83 86 150 153
REDO                 : 
RETURN               : 
RIGHTPAR             : 51 53 54 94 95 96 128 159 160 162 163
RIGHT_COR            : 47 48 49 50 55 128 129 161 164
SELF                 : 
SET                  : 128 129
SPACE                : 28
STRING               : 25 77 77 78 79 84 85 109
SYMBOL               : 27
TAB                  : 
THEN                 : 138 139
TO_F                 : 38
TO_I                 : 39
TO_S                 : 76
TRUE                 : 104
UNLESS               : 138 139
UNTIL                : 
WHEN                 : 
WHILE                : 92
error                : 

Nonterminals, with rules where they appear

acceder_arreglo      : 15
arithmetic_operators : 142 143
arithmetic_production : 120 142 143
array                : 14 46
array_creation       : 44
array_explicito      : 42 51
array_implicito      : 43
block_assignment     : 8
block_expression     : 156 157
boolean_expression   : 138 139
boolean_value        : 103
codigo               : 2 56 57 75 92 0
comparador           : 13
concatenar_string    : 81
condicion            : 58
condiciones          : 56 57 59 59 89 92 93 93
condition_with_connectors : 165
conectores           : 59 93
declaracion_concatenar_string : 121
declaraciones        : 10
declare_data_structures : 117
else_statement       : 57
estructurasControl   : 6
estructurasDatos     : 5
expresion            : 138 139 139 150 151 152 153 154 155
expression           : 11 97 97 98 98 99 99 100 100 101 101 102 102
gets                 : 4 124
hash_access          : 87
hash_operations      : 16
hash_values          : 82 85
hash_var             : 17 91 119
ifStatement          : 20
method_call          : 7 156
newArray             : 45
num                  : 23 65 65 66 67 140 142
operComp             : 65 66 67
print_statement      : 125
proc_assignment      : 122
proc_call            : 9
proc_expression      : 158
puts                 : 3 123
sentencia            : 1 2
set_binary_operators : 131
set_expression       : 18 130 131 132
set_operations       : 19 131
store_conditional_result : 116
to_string            : 12
unless_expression    : 22
value                : 28 29 30 31 84 85 86 87 88 126 126 127 127
values               : 31 41 47 54 94 96 128 129 159 160 161
values_space         : 28 49
var                  : 24 66 67 86
var_arreglo          : 55 90 118
variable             : 108
variable_declaration : 115
while_statement      : 21

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    codigo                         shift and go to state 1
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 1

    (0) S' -> codigo .
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    sentencia                      shift and go to state 57
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 2

    (1) codigo -> sentencia .

    PUT             reduce using rule 1 (codigo -> sentencia .)
    GETS            reduce using rule 1 (codigo -> sentencia .)
    LOCAL_VAR       reduce using rule 1 (codigo -> sentencia .)
    INTEGER         reduce using rule 1 (codigo -> sentencia .)
    FLOAT           reduce using rule 1 (codigo -> sentencia .)
    STRING          reduce using rule 1 (codigo -> sentencia .)
    SET             reduce using rule 1 (codigo -> sentencia .)
    IF              reduce using rule 1 (codigo -> sentencia .)
    WHILE           reduce using rule 1 (codigo -> sentencia .)
    UNLESS          reduce using rule 1 (codigo -> sentencia .)
    INSTANCE_VAR    reduce using rule 1 (codigo -> sentencia .)
    CLASS_VAR       reduce using rule 1 (codigo -> sentencia .)
    GLOBAL_VAR      reduce using rule 1 (codigo -> sentencia .)
    CONSTANT        reduce using rule 1 (codigo -> sentencia .)
    NIL             reduce using rule 1 (codigo -> sentencia .)
    SYMBOL          reduce using rule 1 (codigo -> sentencia .)
    LEFT_COR        reduce using rule 1 (codigo -> sentencia .)
    PERCENTW        reduce using rule 1 (codigo -> sentencia .)
    ARRAY           reduce using rule 1 (codigo -> sentencia .)
    $end            reduce using rule 1 (codigo -> sentencia .)
    END_LOWER       reduce using rule 1 (codigo -> sentencia .)
    NEWLINE         reduce using rule 1 (codigo -> sentencia .)


state 3

    (3) sentencia -> puts .

    PUT             reduce using rule 3 (sentencia -> puts .)
    GETS            reduce using rule 3 (sentencia -> puts .)
    LOCAL_VAR       reduce using rule 3 (sentencia -> puts .)
    INTEGER         reduce using rule 3 (sentencia -> puts .)
    FLOAT           reduce using rule 3 (sentencia -> puts .)
    STRING          reduce using rule 3 (sentencia -> puts .)
    SET             reduce using rule 3 (sentencia -> puts .)
    IF              reduce using rule 3 (sentencia -> puts .)
    WHILE           reduce using rule 3 (sentencia -> puts .)
    UNLESS          reduce using rule 3 (sentencia -> puts .)
    INSTANCE_VAR    reduce using rule 3 (sentencia -> puts .)
    CLASS_VAR       reduce using rule 3 (sentencia -> puts .)
    GLOBAL_VAR      reduce using rule 3 (sentencia -> puts .)
    CONSTANT        reduce using rule 3 (sentencia -> puts .)
    NIL             reduce using rule 3 (sentencia -> puts .)
    SYMBOL          reduce using rule 3 (sentencia -> puts .)
    LEFT_COR        reduce using rule 3 (sentencia -> puts .)
    PERCENTW        reduce using rule 3 (sentencia -> puts .)
    ARRAY           reduce using rule 3 (sentencia -> puts .)
    $end            reduce using rule 3 (sentencia -> puts .)
    END_LOWER       reduce using rule 3 (sentencia -> puts .)
    NEWLINE         reduce using rule 3 (sentencia -> puts .)


state 4

    (4) sentencia -> gets .

    PUT             reduce using rule 4 (sentencia -> gets .)
    GETS            reduce using rule 4 (sentencia -> gets .)
    LOCAL_VAR       reduce using rule 4 (sentencia -> gets .)
    INTEGER         reduce using rule 4 (sentencia -> gets .)
    FLOAT           reduce using rule 4 (sentencia -> gets .)
    STRING          reduce using rule 4 (sentencia -> gets .)
    SET             reduce using rule 4 (sentencia -> gets .)
    IF              reduce using rule 4 (sentencia -> gets .)
    WHILE           reduce using rule 4 (sentencia -> gets .)
    UNLESS          reduce using rule 4 (sentencia -> gets .)
    INSTANCE_VAR    reduce using rule 4 (sentencia -> gets .)
    CLASS_VAR       reduce using rule 4 (sentencia -> gets .)
    GLOBAL_VAR      reduce using rule 4 (sentencia -> gets .)
    CONSTANT        reduce using rule 4 (sentencia -> gets .)
    NIL             reduce using rule 4 (sentencia -> gets .)
    SYMBOL          reduce using rule 4 (sentencia -> gets .)
    LEFT_COR        reduce using rule 4 (sentencia -> gets .)
    PERCENTW        reduce using rule 4 (sentencia -> gets .)
    ARRAY           reduce using rule 4 (sentencia -> gets .)
    $end            reduce using rule 4 (sentencia -> gets .)
    END_LOWER       reduce using rule 4 (sentencia -> gets .)
    NEWLINE         reduce using rule 4 (sentencia -> gets .)


state 5

    (5) sentencia -> estructurasDatos .

    PUT             reduce using rule 5 (sentencia -> estructurasDatos .)
    GETS            reduce using rule 5 (sentencia -> estructurasDatos .)
    LOCAL_VAR       reduce using rule 5 (sentencia -> estructurasDatos .)
    INTEGER         reduce using rule 5 (sentencia -> estructurasDatos .)
    FLOAT           reduce using rule 5 (sentencia -> estructurasDatos .)
    STRING          reduce using rule 5 (sentencia -> estructurasDatos .)
    SET             reduce using rule 5 (sentencia -> estructurasDatos .)
    IF              reduce using rule 5 (sentencia -> estructurasDatos .)
    WHILE           reduce using rule 5 (sentencia -> estructurasDatos .)
    UNLESS          reduce using rule 5 (sentencia -> estructurasDatos .)
    INSTANCE_VAR    reduce using rule 5 (sentencia -> estructurasDatos .)
    CLASS_VAR       reduce using rule 5 (sentencia -> estructurasDatos .)
    GLOBAL_VAR      reduce using rule 5 (sentencia -> estructurasDatos .)
    CONSTANT        reduce using rule 5 (sentencia -> estructurasDatos .)
    NIL             reduce using rule 5 (sentencia -> estructurasDatos .)
    SYMBOL          reduce using rule 5 (sentencia -> estructurasDatos .)
    LEFT_COR        reduce using rule 5 (sentencia -> estructurasDatos .)
    PERCENTW        reduce using rule 5 (sentencia -> estructurasDatos .)
    ARRAY           reduce using rule 5 (sentencia -> estructurasDatos .)
    $end            reduce using rule 5 (sentencia -> estructurasDatos .)
    END_LOWER       reduce using rule 5 (sentencia -> estructurasDatos .)
    NEWLINE         reduce using rule 5 (sentencia -> estructurasDatos .)


state 6

    (6) sentencia -> estructurasControl .

    PUT             reduce using rule 6 (sentencia -> estructurasControl .)
    GETS            reduce using rule 6 (sentencia -> estructurasControl .)
    LOCAL_VAR       reduce using rule 6 (sentencia -> estructurasControl .)
    INTEGER         reduce using rule 6 (sentencia -> estructurasControl .)
    FLOAT           reduce using rule 6 (sentencia -> estructurasControl .)
    STRING          reduce using rule 6 (sentencia -> estructurasControl .)
    SET             reduce using rule 6 (sentencia -> estructurasControl .)
    IF              reduce using rule 6 (sentencia -> estructurasControl .)
    WHILE           reduce using rule 6 (sentencia -> estructurasControl .)
    UNLESS          reduce using rule 6 (sentencia -> estructurasControl .)
    INSTANCE_VAR    reduce using rule 6 (sentencia -> estructurasControl .)
    CLASS_VAR       reduce using rule 6 (sentencia -> estructurasControl .)
    GLOBAL_VAR      reduce using rule 6 (sentencia -> estructurasControl .)
    CONSTANT        reduce using rule 6 (sentencia -> estructurasControl .)
    NIL             reduce using rule 6 (sentencia -> estructurasControl .)
    SYMBOL          reduce using rule 6 (sentencia -> estructurasControl .)
    LEFT_COR        reduce using rule 6 (sentencia -> estructurasControl .)
    PERCENTW        reduce using rule 6 (sentencia -> estructurasControl .)
    ARRAY           reduce using rule 6 (sentencia -> estructurasControl .)
    $end            reduce using rule 6 (sentencia -> estructurasControl .)
    END_LOWER       reduce using rule 6 (sentencia -> estructurasControl .)
    NEWLINE         reduce using rule 6 (sentencia -> estructurasControl .)


state 7

    (7) sentencia -> method_call .
    (156) block_assignment -> method_call . block_expression
    (150) block_expression -> . LBRACE expresion RBRACE
    (151) block_expression -> . DO expresion END
    (152) block_expression -> . DO expresion END_LOWER
    (153) block_expression -> . LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
    (154) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END
    (155) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END_LOWER

    PUT             reduce using rule 7 (sentencia -> method_call .)
    GETS            reduce using rule 7 (sentencia -> method_call .)
    LOCAL_VAR       reduce using rule 7 (sentencia -> method_call .)
    INTEGER         reduce using rule 7 (sentencia -> method_call .)
    FLOAT           reduce using rule 7 (sentencia -> method_call .)
    STRING          reduce using rule 7 (sentencia -> method_call .)
    SET             reduce using rule 7 (sentencia -> method_call .)
    IF              reduce using rule 7 (sentencia -> method_call .)
    WHILE           reduce using rule 7 (sentencia -> method_call .)
    UNLESS          reduce using rule 7 (sentencia -> method_call .)
    INSTANCE_VAR    reduce using rule 7 (sentencia -> method_call .)
    CLASS_VAR       reduce using rule 7 (sentencia -> method_call .)
    GLOBAL_VAR      reduce using rule 7 (sentencia -> method_call .)
    CONSTANT        reduce using rule 7 (sentencia -> method_call .)
    NIL             reduce using rule 7 (sentencia -> method_call .)
    SYMBOL          reduce using rule 7 (sentencia -> method_call .)
    LEFT_COR        reduce using rule 7 (sentencia -> method_call .)
    PERCENTW        reduce using rule 7 (sentencia -> method_call .)
    ARRAY           reduce using rule 7 (sentencia -> method_call .)
    $end            reduce using rule 7 (sentencia -> method_call .)
    END_LOWER       reduce using rule 7 (sentencia -> method_call .)
    NEWLINE         reduce using rule 7 (sentencia -> method_call .)
    LBRACE          shift and go to state 59
    DO              shift and go to state 60

    block_expression               shift and go to state 58

state 8

    (8) sentencia -> block_assignment .

    PUT             reduce using rule 8 (sentencia -> block_assignment .)
    GETS            reduce using rule 8 (sentencia -> block_assignment .)
    LOCAL_VAR       reduce using rule 8 (sentencia -> block_assignment .)
    INTEGER         reduce using rule 8 (sentencia -> block_assignment .)
    FLOAT           reduce using rule 8 (sentencia -> block_assignment .)
    STRING          reduce using rule 8 (sentencia -> block_assignment .)
    SET             reduce using rule 8 (sentencia -> block_assignment .)
    IF              reduce using rule 8 (sentencia -> block_assignment .)
    WHILE           reduce using rule 8 (sentencia -> block_assignment .)
    UNLESS          reduce using rule 8 (sentencia -> block_assignment .)
    INSTANCE_VAR    reduce using rule 8 (sentencia -> block_assignment .)
    CLASS_VAR       reduce using rule 8 (sentencia -> block_assignment .)
    GLOBAL_VAR      reduce using rule 8 (sentencia -> block_assignment .)
    CONSTANT        reduce using rule 8 (sentencia -> block_assignment .)
    NIL             reduce using rule 8 (sentencia -> block_assignment .)
    SYMBOL          reduce using rule 8 (sentencia -> block_assignment .)
    LEFT_COR        reduce using rule 8 (sentencia -> block_assignment .)
    PERCENTW        reduce using rule 8 (sentencia -> block_assignment .)
    ARRAY           reduce using rule 8 (sentencia -> block_assignment .)
    $end            reduce using rule 8 (sentencia -> block_assignment .)
    END_LOWER       reduce using rule 8 (sentencia -> block_assignment .)
    NEWLINE         reduce using rule 8 (sentencia -> block_assignment .)


state 9

    (9) sentencia -> proc_call .

    PUT             reduce using rule 9 (sentencia -> proc_call .)
    GETS            reduce using rule 9 (sentencia -> proc_call .)
    LOCAL_VAR       reduce using rule 9 (sentencia -> proc_call .)
    INTEGER         reduce using rule 9 (sentencia -> proc_call .)
    FLOAT           reduce using rule 9 (sentencia -> proc_call .)
    STRING          reduce using rule 9 (sentencia -> proc_call .)
    SET             reduce using rule 9 (sentencia -> proc_call .)
    IF              reduce using rule 9 (sentencia -> proc_call .)
    WHILE           reduce using rule 9 (sentencia -> proc_call .)
    UNLESS          reduce using rule 9 (sentencia -> proc_call .)
    INSTANCE_VAR    reduce using rule 9 (sentencia -> proc_call .)
    CLASS_VAR       reduce using rule 9 (sentencia -> proc_call .)
    GLOBAL_VAR      reduce using rule 9 (sentencia -> proc_call .)
    CONSTANT        reduce using rule 9 (sentencia -> proc_call .)
    NIL             reduce using rule 9 (sentencia -> proc_call .)
    SYMBOL          reduce using rule 9 (sentencia -> proc_call .)
    LEFT_COR        reduce using rule 9 (sentencia -> proc_call .)
    PERCENTW        reduce using rule 9 (sentencia -> proc_call .)
    ARRAY           reduce using rule 9 (sentencia -> proc_call .)
    $end            reduce using rule 9 (sentencia -> proc_call .)
    END_LOWER       reduce using rule 9 (sentencia -> proc_call .)
    NEWLINE         reduce using rule 9 (sentencia -> proc_call .)


state 10

    (10) sentencia -> declaraciones .

    PUT             reduce using rule 10 (sentencia -> declaraciones .)
    GETS            reduce using rule 10 (sentencia -> declaraciones .)
    LOCAL_VAR       reduce using rule 10 (sentencia -> declaraciones .)
    INTEGER         reduce using rule 10 (sentencia -> declaraciones .)
    FLOAT           reduce using rule 10 (sentencia -> declaraciones .)
    STRING          reduce using rule 10 (sentencia -> declaraciones .)
    SET             reduce using rule 10 (sentencia -> declaraciones .)
    IF              reduce using rule 10 (sentencia -> declaraciones .)
    WHILE           reduce using rule 10 (sentencia -> declaraciones .)
    UNLESS          reduce using rule 10 (sentencia -> declaraciones .)
    INSTANCE_VAR    reduce using rule 10 (sentencia -> declaraciones .)
    CLASS_VAR       reduce using rule 10 (sentencia -> declaraciones .)
    GLOBAL_VAR      reduce using rule 10 (sentencia -> declaraciones .)
    CONSTANT        reduce using rule 10 (sentencia -> declaraciones .)
    NIL             reduce using rule 10 (sentencia -> declaraciones .)
    SYMBOL          reduce using rule 10 (sentencia -> declaraciones .)
    LEFT_COR        reduce using rule 10 (sentencia -> declaraciones .)
    PERCENTW        reduce using rule 10 (sentencia -> declaraciones .)
    ARRAY           reduce using rule 10 (sentencia -> declaraciones .)
    $end            reduce using rule 10 (sentencia -> declaraciones .)
    END_LOWER       reduce using rule 10 (sentencia -> declaraciones .)
    NEWLINE         reduce using rule 10 (sentencia -> declaraciones .)


state 11

    (11) sentencia -> expression .

    PUT             reduce using rule 11 (sentencia -> expression .)
    GETS            reduce using rule 11 (sentencia -> expression .)
    LOCAL_VAR       reduce using rule 11 (sentencia -> expression .)
    INTEGER         reduce using rule 11 (sentencia -> expression .)
    FLOAT           reduce using rule 11 (sentencia -> expression .)
    STRING          reduce using rule 11 (sentencia -> expression .)
    SET             reduce using rule 11 (sentencia -> expression .)
    IF              reduce using rule 11 (sentencia -> expression .)
    WHILE           reduce using rule 11 (sentencia -> expression .)
    UNLESS          reduce using rule 11 (sentencia -> expression .)
    INSTANCE_VAR    reduce using rule 11 (sentencia -> expression .)
    CLASS_VAR       reduce using rule 11 (sentencia -> expression .)
    GLOBAL_VAR      reduce using rule 11 (sentencia -> expression .)
    CONSTANT        reduce using rule 11 (sentencia -> expression .)
    NIL             reduce using rule 11 (sentencia -> expression .)
    SYMBOL          reduce using rule 11 (sentencia -> expression .)
    LEFT_COR        reduce using rule 11 (sentencia -> expression .)
    PERCENTW        reduce using rule 11 (sentencia -> expression .)
    ARRAY           reduce using rule 11 (sentencia -> expression .)
    $end            reduce using rule 11 (sentencia -> expression .)
    END_LOWER       reduce using rule 11 (sentencia -> expression .)
    NEWLINE         reduce using rule 11 (sentencia -> expression .)


state 12

    (12) sentencia -> to_string .

    PUT             reduce using rule 12 (sentencia -> to_string .)
    GETS            reduce using rule 12 (sentencia -> to_string .)
    LOCAL_VAR       reduce using rule 12 (sentencia -> to_string .)
    INTEGER         reduce using rule 12 (sentencia -> to_string .)
    FLOAT           reduce using rule 12 (sentencia -> to_string .)
    STRING          reduce using rule 12 (sentencia -> to_string .)
    SET             reduce using rule 12 (sentencia -> to_string .)
    IF              reduce using rule 12 (sentencia -> to_string .)
    WHILE           reduce using rule 12 (sentencia -> to_string .)
    UNLESS          reduce using rule 12 (sentencia -> to_string .)
    INSTANCE_VAR    reduce using rule 12 (sentencia -> to_string .)
    CLASS_VAR       reduce using rule 12 (sentencia -> to_string .)
    GLOBAL_VAR      reduce using rule 12 (sentencia -> to_string .)
    CONSTANT        reduce using rule 12 (sentencia -> to_string .)
    NIL             reduce using rule 12 (sentencia -> to_string .)
    SYMBOL          reduce using rule 12 (sentencia -> to_string .)
    LEFT_COR        reduce using rule 12 (sentencia -> to_string .)
    PERCENTW        reduce using rule 12 (sentencia -> to_string .)
    ARRAY           reduce using rule 12 (sentencia -> to_string .)
    $end            reduce using rule 12 (sentencia -> to_string .)
    END_LOWER       reduce using rule 12 (sentencia -> to_string .)
    NEWLINE         reduce using rule 12 (sentencia -> to_string .)


state 13

    (13) sentencia -> comparador .

    PUT             reduce using rule 13 (sentencia -> comparador .)
    GETS            reduce using rule 13 (sentencia -> comparador .)
    LOCAL_VAR       reduce using rule 13 (sentencia -> comparador .)
    INTEGER         reduce using rule 13 (sentencia -> comparador .)
    FLOAT           reduce using rule 13 (sentencia -> comparador .)
    STRING          reduce using rule 13 (sentencia -> comparador .)
    SET             reduce using rule 13 (sentencia -> comparador .)
    IF              reduce using rule 13 (sentencia -> comparador .)
    WHILE           reduce using rule 13 (sentencia -> comparador .)
    UNLESS          reduce using rule 13 (sentencia -> comparador .)
    INSTANCE_VAR    reduce using rule 13 (sentencia -> comparador .)
    CLASS_VAR       reduce using rule 13 (sentencia -> comparador .)
    GLOBAL_VAR      reduce using rule 13 (sentencia -> comparador .)
    CONSTANT        reduce using rule 13 (sentencia -> comparador .)
    NIL             reduce using rule 13 (sentencia -> comparador .)
    SYMBOL          reduce using rule 13 (sentencia -> comparador .)
    LEFT_COR        reduce using rule 13 (sentencia -> comparador .)
    PERCENTW        reduce using rule 13 (sentencia -> comparador .)
    ARRAY           reduce using rule 13 (sentencia -> comparador .)
    $end            reduce using rule 13 (sentencia -> comparador .)
    END_LOWER       reduce using rule 13 (sentencia -> comparador .)
    NEWLINE         reduce using rule 13 (sentencia -> comparador .)


state 14

    (41) puts -> PUT . values
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 61
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 15

    (38) gets -> GETS . DOT CHOMP DOT TO_F
    (39) gets -> GETS . DOT CHOMP DOT TO_I
    (40) gets -> GETS . DOT CHOMP

    DOT             shift and go to state 71


state 16

    (14) estructurasDatos -> array .

    PUT             reduce using rule 14 (estructurasDatos -> array .)
    GETS            reduce using rule 14 (estructurasDatos -> array .)
    LOCAL_VAR       reduce using rule 14 (estructurasDatos -> array .)
    INTEGER         reduce using rule 14 (estructurasDatos -> array .)
    FLOAT           reduce using rule 14 (estructurasDatos -> array .)
    STRING          reduce using rule 14 (estructurasDatos -> array .)
    SET             reduce using rule 14 (estructurasDatos -> array .)
    IF              reduce using rule 14 (estructurasDatos -> array .)
    WHILE           reduce using rule 14 (estructurasDatos -> array .)
    UNLESS          reduce using rule 14 (estructurasDatos -> array .)
    INSTANCE_VAR    reduce using rule 14 (estructurasDatos -> array .)
    CLASS_VAR       reduce using rule 14 (estructurasDatos -> array .)
    GLOBAL_VAR      reduce using rule 14 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 14 (estructurasDatos -> array .)
    NIL             reduce using rule 14 (estructurasDatos -> array .)
    SYMBOL          reduce using rule 14 (estructurasDatos -> array .)
    LEFT_COR        reduce using rule 14 (estructurasDatos -> array .)
    PERCENTW        reduce using rule 14 (estructurasDatos -> array .)
    ARRAY           reduce using rule 14 (estructurasDatos -> array .)
    $end            reduce using rule 14 (estructurasDatos -> array .)
    END_LOWER       reduce using rule 14 (estructurasDatos -> array .)
    NEWLINE         reduce using rule 14 (estructurasDatos -> array .)


state 17

    (15) estructurasDatos -> acceder_arreglo .

    PUT             reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    GETS            reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    LOCAL_VAR       reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    INTEGER         reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    FLOAT           reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    STRING          reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    SET             reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    IF              reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    WHILE           reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    UNLESS          reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    INSTANCE_VAR    reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    CLASS_VAR       reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    GLOBAL_VAR      reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    CONSTANT        reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    NIL             reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    SYMBOL          reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    LEFT_COR        reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    PERCENTW        reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    ARRAY           reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    $end            reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    END_LOWER       reduce using rule 15 (estructurasDatos -> acceder_arreglo .)
    NEWLINE         reduce using rule 15 (estructurasDatos -> acceder_arreglo .)


state 18

    (16) estructurasDatos -> hash_operations .

    PUT             reduce using rule 16 (estructurasDatos -> hash_operations .)
    GETS            reduce using rule 16 (estructurasDatos -> hash_operations .)
    LOCAL_VAR       reduce using rule 16 (estructurasDatos -> hash_operations .)
    INTEGER         reduce using rule 16 (estructurasDatos -> hash_operations .)
    FLOAT           reduce using rule 16 (estructurasDatos -> hash_operations .)
    STRING          reduce using rule 16 (estructurasDatos -> hash_operations .)
    SET             reduce using rule 16 (estructurasDatos -> hash_operations .)
    IF              reduce using rule 16 (estructurasDatos -> hash_operations .)
    WHILE           reduce using rule 16 (estructurasDatos -> hash_operations .)
    UNLESS          reduce using rule 16 (estructurasDatos -> hash_operations .)
    INSTANCE_VAR    reduce using rule 16 (estructurasDatos -> hash_operations .)
    CLASS_VAR       reduce using rule 16 (estructurasDatos -> hash_operations .)
    GLOBAL_VAR      reduce using rule 16 (estructurasDatos -> hash_operations .)
    CONSTANT        reduce using rule 16 (estructurasDatos -> hash_operations .)
    NIL             reduce using rule 16 (estructurasDatos -> hash_operations .)
    SYMBOL          reduce using rule 16 (estructurasDatos -> hash_operations .)
    LEFT_COR        reduce using rule 16 (estructurasDatos -> hash_operations .)
    PERCENTW        reduce using rule 16 (estructurasDatos -> hash_operations .)
    ARRAY           reduce using rule 16 (estructurasDatos -> hash_operations .)
    $end            reduce using rule 16 (estructurasDatos -> hash_operations .)
    END_LOWER       reduce using rule 16 (estructurasDatos -> hash_operations .)
    NEWLINE         reduce using rule 16 (estructurasDatos -> hash_operations .)


state 19

    (17) estructurasDatos -> hash_var .
    (119) declaraciones -> hash_var .
    (91) declare_data_structures -> hash_var .

  ! reduce/reduce conflict for PUT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GETS resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INTEGER resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for FLOAT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SET resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for IF resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for UNLESS resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NIL resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ARRAY resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for $end resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PUT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GETS resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INTEGER resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for FLOAT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SET resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for IF resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for UNLESS resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NIL resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for ARRAY resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for $end resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 17 (estructurasDatos -> hash_var .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 17 (estructurasDatos -> hash_var .)
    PUT             reduce using rule 17 (estructurasDatos -> hash_var .)
    GETS            reduce using rule 17 (estructurasDatos -> hash_var .)
    LOCAL_VAR       reduce using rule 17 (estructurasDatos -> hash_var .)
    INTEGER         reduce using rule 17 (estructurasDatos -> hash_var .)
    FLOAT           reduce using rule 17 (estructurasDatos -> hash_var .)
    STRING          reduce using rule 17 (estructurasDatos -> hash_var .)
    SET             reduce using rule 17 (estructurasDatos -> hash_var .)
    IF              reduce using rule 17 (estructurasDatos -> hash_var .)
    WHILE           reduce using rule 17 (estructurasDatos -> hash_var .)
    UNLESS          reduce using rule 17 (estructurasDatos -> hash_var .)
    INSTANCE_VAR    reduce using rule 17 (estructurasDatos -> hash_var .)
    CLASS_VAR       reduce using rule 17 (estructurasDatos -> hash_var .)
    GLOBAL_VAR      reduce using rule 17 (estructurasDatos -> hash_var .)
    CONSTANT        reduce using rule 17 (estructurasDatos -> hash_var .)
    NIL             reduce using rule 17 (estructurasDatos -> hash_var .)
    SYMBOL          reduce using rule 17 (estructurasDatos -> hash_var .)
    LEFT_COR        reduce using rule 17 (estructurasDatos -> hash_var .)
    PERCENTW        reduce using rule 17 (estructurasDatos -> hash_var .)
    ARRAY           reduce using rule 17 (estructurasDatos -> hash_var .)
    $end            reduce using rule 17 (estructurasDatos -> hash_var .)
    END_LOWER       reduce using rule 17 (estructurasDatos -> hash_var .)
    NEWLINE         reduce using rule 17 (estructurasDatos -> hash_var .)

  ! PUT             [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! GETS            [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! LOCAL_VAR       [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! INTEGER         [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! FLOAT           [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! STRING          [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! SET             [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! IF              [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! WHILE           [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! UNLESS          [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! INSTANCE_VAR    [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! CLASS_VAR       [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! GLOBAL_VAR      [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! CONSTANT        [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! NIL             [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! SYMBOL          [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! LEFT_COR        [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! PERCENTW        [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! ARRAY           [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! $end            [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! END_LOWER       [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! NEWLINE         [ reduce using rule 119 (declaraciones -> hash_var .) ]
  ! PUT             [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! GETS            [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! LOCAL_VAR       [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! INTEGER         [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! FLOAT           [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! STRING          [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! SET             [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! IF              [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! WHILE           [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! UNLESS          [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! INSTANCE_VAR    [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! CLASS_VAR       [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! GLOBAL_VAR      [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! CONSTANT        [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! NIL             [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! SYMBOL          [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! LEFT_COR        [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! PERCENTW        [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! ARRAY           [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! $end            [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! END_LOWER       [ reduce using rule 91 (declare_data_structures -> hash_var .) ]
  ! NEWLINE         [ reduce using rule 91 (declare_data_structures -> hash_var .) ]


state 20

    (18) estructurasDatos -> set_expression .
    (130) set_operations -> set_expression .

  ! reduce/reduce conflict for PUT resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for GETS resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for SET resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for IF resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for UNLESS resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for NIL resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for $end resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 18 (estructurasDatos -> set_expression .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 18 (estructurasDatos -> set_expression .)
    PUT             reduce using rule 18 (estructurasDatos -> set_expression .)
    GETS            reduce using rule 18 (estructurasDatos -> set_expression .)
    LOCAL_VAR       reduce using rule 18 (estructurasDatos -> set_expression .)
    INTEGER         reduce using rule 18 (estructurasDatos -> set_expression .)
    FLOAT           reduce using rule 18 (estructurasDatos -> set_expression .)
    STRING          reduce using rule 18 (estructurasDatos -> set_expression .)
    SET             reduce using rule 18 (estructurasDatos -> set_expression .)
    IF              reduce using rule 18 (estructurasDatos -> set_expression .)
    WHILE           reduce using rule 18 (estructurasDatos -> set_expression .)
    UNLESS          reduce using rule 18 (estructurasDatos -> set_expression .)
    INSTANCE_VAR    reduce using rule 18 (estructurasDatos -> set_expression .)
    CLASS_VAR       reduce using rule 18 (estructurasDatos -> set_expression .)
    GLOBAL_VAR      reduce using rule 18 (estructurasDatos -> set_expression .)
    CONSTANT        reduce using rule 18 (estructurasDatos -> set_expression .)
    NIL             reduce using rule 18 (estructurasDatos -> set_expression .)
    SYMBOL          reduce using rule 18 (estructurasDatos -> set_expression .)
    LEFT_COR        reduce using rule 18 (estructurasDatos -> set_expression .)
    PERCENTW        reduce using rule 18 (estructurasDatos -> set_expression .)
    ARRAY           reduce using rule 18 (estructurasDatos -> set_expression .)
    $end            reduce using rule 18 (estructurasDatos -> set_expression .)
    END_LOWER       reduce using rule 18 (estructurasDatos -> set_expression .)
    NEWLINE         reduce using rule 18 (estructurasDatos -> set_expression .)
    PLUS            reduce using rule 130 (set_operations -> set_expression .)
    MINUS           reduce using rule 130 (set_operations -> set_expression .)
    AMPERSAND       reduce using rule 130 (set_operations -> set_expression .)
    PIPE            reduce using rule 130 (set_operations -> set_expression .)
    CARET           reduce using rule 130 (set_operations -> set_expression .)

  ! PUT             [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! GETS            [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! LOCAL_VAR       [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! INTEGER         [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! FLOAT           [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! STRING          [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! SET             [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! IF              [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! WHILE           [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! UNLESS          [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! INSTANCE_VAR    [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! CLASS_VAR       [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! GLOBAL_VAR      [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! CONSTANT        [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! NIL             [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! SYMBOL          [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! LEFT_COR        [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! PERCENTW        [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! ARRAY           [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! $end            [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! END_LOWER       [ reduce using rule 130 (set_operations -> set_expression .) ]
  ! NEWLINE         [ reduce using rule 130 (set_operations -> set_expression .) ]


state 21

    (19) estructurasDatos -> set_operations .
    (131) set_operations -> set_operations . set_binary_operators set_expression
    (133) set_binary_operators -> . PLUS
    (134) set_binary_operators -> . MINUS
    (135) set_binary_operators -> . AMPERSAND
    (136) set_binary_operators -> . PIPE
    (137) set_binary_operators -> . CARET

    PUT             reduce using rule 19 (estructurasDatos -> set_operations .)
    GETS            reduce using rule 19 (estructurasDatos -> set_operations .)
    LOCAL_VAR       reduce using rule 19 (estructurasDatos -> set_operations .)
    INTEGER         reduce using rule 19 (estructurasDatos -> set_operations .)
    FLOAT           reduce using rule 19 (estructurasDatos -> set_operations .)
    STRING          reduce using rule 19 (estructurasDatos -> set_operations .)
    SET             reduce using rule 19 (estructurasDatos -> set_operations .)
    IF              reduce using rule 19 (estructurasDatos -> set_operations .)
    WHILE           reduce using rule 19 (estructurasDatos -> set_operations .)
    UNLESS          reduce using rule 19 (estructurasDatos -> set_operations .)
    INSTANCE_VAR    reduce using rule 19 (estructurasDatos -> set_operations .)
    CLASS_VAR       reduce using rule 19 (estructurasDatos -> set_operations .)
    GLOBAL_VAR      reduce using rule 19 (estructurasDatos -> set_operations .)
    CONSTANT        reduce using rule 19 (estructurasDatos -> set_operations .)
    NIL             reduce using rule 19 (estructurasDatos -> set_operations .)
    SYMBOL          reduce using rule 19 (estructurasDatos -> set_operations .)
    LEFT_COR        reduce using rule 19 (estructurasDatos -> set_operations .)
    PERCENTW        reduce using rule 19 (estructurasDatos -> set_operations .)
    ARRAY           reduce using rule 19 (estructurasDatos -> set_operations .)
    $end            reduce using rule 19 (estructurasDatos -> set_operations .)
    END_LOWER       reduce using rule 19 (estructurasDatos -> set_operations .)
    NEWLINE         reduce using rule 19 (estructurasDatos -> set_operations .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    AMPERSAND       shift and go to state 75
    PIPE            shift and go to state 76
    CARET           shift and go to state 77

    set_binary_operators           shift and go to state 72

state 22

    (20) estructurasControl -> ifStatement .

    PUT             reduce using rule 20 (estructurasControl -> ifStatement .)
    GETS            reduce using rule 20 (estructurasControl -> ifStatement .)
    LOCAL_VAR       reduce using rule 20 (estructurasControl -> ifStatement .)
    INTEGER         reduce using rule 20 (estructurasControl -> ifStatement .)
    FLOAT           reduce using rule 20 (estructurasControl -> ifStatement .)
    STRING          reduce using rule 20 (estructurasControl -> ifStatement .)
    SET             reduce using rule 20 (estructurasControl -> ifStatement .)
    IF              reduce using rule 20 (estructurasControl -> ifStatement .)
    WHILE           reduce using rule 20 (estructurasControl -> ifStatement .)
    UNLESS          reduce using rule 20 (estructurasControl -> ifStatement .)
    INSTANCE_VAR    reduce using rule 20 (estructurasControl -> ifStatement .)
    CLASS_VAR       reduce using rule 20 (estructurasControl -> ifStatement .)
    GLOBAL_VAR      reduce using rule 20 (estructurasControl -> ifStatement .)
    CONSTANT        reduce using rule 20 (estructurasControl -> ifStatement .)
    NIL             reduce using rule 20 (estructurasControl -> ifStatement .)
    SYMBOL          reduce using rule 20 (estructurasControl -> ifStatement .)
    LEFT_COR        reduce using rule 20 (estructurasControl -> ifStatement .)
    PERCENTW        reduce using rule 20 (estructurasControl -> ifStatement .)
    ARRAY           reduce using rule 20 (estructurasControl -> ifStatement .)
    $end            reduce using rule 20 (estructurasControl -> ifStatement .)
    END_LOWER       reduce using rule 20 (estructurasControl -> ifStatement .)
    NEWLINE         reduce using rule 20 (estructurasControl -> ifStatement .)


state 23

    (21) estructurasControl -> while_statement .

    PUT             reduce using rule 21 (estructurasControl -> while_statement .)
    GETS            reduce using rule 21 (estructurasControl -> while_statement .)
    LOCAL_VAR       reduce using rule 21 (estructurasControl -> while_statement .)
    INTEGER         reduce using rule 21 (estructurasControl -> while_statement .)
    FLOAT           reduce using rule 21 (estructurasControl -> while_statement .)
    STRING          reduce using rule 21 (estructurasControl -> while_statement .)
    SET             reduce using rule 21 (estructurasControl -> while_statement .)
    IF              reduce using rule 21 (estructurasControl -> while_statement .)
    WHILE           reduce using rule 21 (estructurasControl -> while_statement .)
    UNLESS          reduce using rule 21 (estructurasControl -> while_statement .)
    INSTANCE_VAR    reduce using rule 21 (estructurasControl -> while_statement .)
    CLASS_VAR       reduce using rule 21 (estructurasControl -> while_statement .)
    GLOBAL_VAR      reduce using rule 21 (estructurasControl -> while_statement .)
    CONSTANT        reduce using rule 21 (estructurasControl -> while_statement .)
    NIL             reduce using rule 21 (estructurasControl -> while_statement .)
    SYMBOL          reduce using rule 21 (estructurasControl -> while_statement .)
    LEFT_COR        reduce using rule 21 (estructurasControl -> while_statement .)
    PERCENTW        reduce using rule 21 (estructurasControl -> while_statement .)
    ARRAY           reduce using rule 21 (estructurasControl -> while_statement .)
    $end            reduce using rule 21 (estructurasControl -> while_statement .)
    END_LOWER       reduce using rule 21 (estructurasControl -> while_statement .)
    NEWLINE         reduce using rule 21 (estructurasControl -> while_statement .)


state 24

    (22) estructurasControl -> unless_expression .

    PUT             reduce using rule 22 (estructurasControl -> unless_expression .)
    GETS            reduce using rule 22 (estructurasControl -> unless_expression .)
    LOCAL_VAR       reduce using rule 22 (estructurasControl -> unless_expression .)
    INTEGER         reduce using rule 22 (estructurasControl -> unless_expression .)
    FLOAT           reduce using rule 22 (estructurasControl -> unless_expression .)
    STRING          reduce using rule 22 (estructurasControl -> unless_expression .)
    SET             reduce using rule 22 (estructurasControl -> unless_expression .)
    IF              reduce using rule 22 (estructurasControl -> unless_expression .)
    WHILE           reduce using rule 22 (estructurasControl -> unless_expression .)
    UNLESS          reduce using rule 22 (estructurasControl -> unless_expression .)
    INSTANCE_VAR    reduce using rule 22 (estructurasControl -> unless_expression .)
    CLASS_VAR       reduce using rule 22 (estructurasControl -> unless_expression .)
    GLOBAL_VAR      reduce using rule 22 (estructurasControl -> unless_expression .)
    CONSTANT        reduce using rule 22 (estructurasControl -> unless_expression .)
    NIL             reduce using rule 22 (estructurasControl -> unless_expression .)
    SYMBOL          reduce using rule 22 (estructurasControl -> unless_expression .)
    LEFT_COR        reduce using rule 22 (estructurasControl -> unless_expression .)
    PERCENTW        reduce using rule 22 (estructurasControl -> unless_expression .)
    ARRAY           reduce using rule 22 (estructurasControl -> unless_expression .)
    $end            reduce using rule 22 (estructurasControl -> unless_expression .)
    END_LOWER       reduce using rule 22 (estructurasControl -> unless_expression .)
    NEWLINE         reduce using rule 22 (estructurasControl -> unless_expression .)


state 25

    (94) method_call -> LOCAL_VAR . LEFTPAR values RIGHTPAR
    (95) method_call -> LOCAL_VAR . LEFTPAR RIGHTPAR
    (159) proc_call -> LOCAL_VAR . DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> LOCAL_VAR . DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> LOCAL_VAR . LEFT_COR values RIGHT_COR
    (162) proc_call -> LOCAL_VAR . DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> LOCAL_VAR . DOT LEFTPAR RIGHTPAR
    (164) proc_call -> LOCAL_VAR . LEFT_COR RIGHT_COR
    (120) declaraciones -> LOCAL_VAR . ASSIGN arithmetic_production
    (76) to_string -> LOCAL_VAR . DOT TO_S
    (82) hash_var -> LOCAL_VAR . ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> LOCAL_VAR . ASSIGN LBRACE RBRACE
    (88) variable_declaration -> LOCAL_VAR . ASSIGN value
    (89) store_conditional_result -> LOCAL_VAR . ASSIGN condiciones
    (132) declare_data_structures -> LOCAL_VAR . ASSIGN set_expression
    (46) var_arreglo -> LOCAL_VAR . ASSIGN array
    (81) declaracion_concatenar_string -> LOCAL_VAR . ASSIGN concatenar_string
    (158) proc_assignment -> LOCAL_VAR . ASSIGN proc_expression
    (110) variable -> LOCAL_VAR .
    (32) var -> LOCAL_VAR .

  ! shift/reduce conflict for LEFT_COR resolved as shift
    LEFTPAR         shift and go to state 78
    DOT             shift and go to state 79
    LEFT_COR        shift and go to state 80
    ASSIGN          shift and go to state 81
    PUT             reduce using rule 110 (variable -> LOCAL_VAR .)
    GETS            reduce using rule 110 (variable -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 110 (variable -> LOCAL_VAR .)
    INTEGER         reduce using rule 110 (variable -> LOCAL_VAR .)
    FLOAT           reduce using rule 110 (variable -> LOCAL_VAR .)
    STRING          reduce using rule 110 (variable -> LOCAL_VAR .)
    SET             reduce using rule 110 (variable -> LOCAL_VAR .)
    IF              reduce using rule 110 (variable -> LOCAL_VAR .)
    WHILE           reduce using rule 110 (variable -> LOCAL_VAR .)
    UNLESS          reduce using rule 110 (variable -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 110 (variable -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 110 (variable -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 110 (variable -> LOCAL_VAR .)
    CONSTANT        reduce using rule 110 (variable -> LOCAL_VAR .)
    NIL             reduce using rule 110 (variable -> LOCAL_VAR .)
    SYMBOL          reduce using rule 110 (variable -> LOCAL_VAR .)
    PERCENTW        reduce using rule 110 (variable -> LOCAL_VAR .)
    ARRAY           reduce using rule 110 (variable -> LOCAL_VAR .)
    $end            reduce using rule 110 (variable -> LOCAL_VAR .)
    END_LOWER       reduce using rule 110 (variable -> LOCAL_VAR .)
    NEWLINE         reduce using rule 110 (variable -> LOCAL_VAR .)
    LBRACE          reduce using rule 32 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 32 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 32 (var -> LOCAL_VAR .)

  ! LEFT_COR        [ reduce using rule 110 (variable -> LOCAL_VAR .) ]


state 26

    (47) array_explicito -> LEFT_COR . values RIGHT_COR
    (48) array_explicito -> LEFT_COR . RIGHT_COR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 83
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 82
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 27

    (115) declaraciones -> variable_declaration .

    PUT             reduce using rule 115 (declaraciones -> variable_declaration .)
    GETS            reduce using rule 115 (declaraciones -> variable_declaration .)
    LOCAL_VAR       reduce using rule 115 (declaraciones -> variable_declaration .)
    INTEGER         reduce using rule 115 (declaraciones -> variable_declaration .)
    FLOAT           reduce using rule 115 (declaraciones -> variable_declaration .)
    STRING          reduce using rule 115 (declaraciones -> variable_declaration .)
    SET             reduce using rule 115 (declaraciones -> variable_declaration .)
    IF              reduce using rule 115 (declaraciones -> variable_declaration .)
    WHILE           reduce using rule 115 (declaraciones -> variable_declaration .)
    UNLESS          reduce using rule 115 (declaraciones -> variable_declaration .)
    INSTANCE_VAR    reduce using rule 115 (declaraciones -> variable_declaration .)
    CLASS_VAR       reduce using rule 115 (declaraciones -> variable_declaration .)
    GLOBAL_VAR      reduce using rule 115 (declaraciones -> variable_declaration .)
    CONSTANT        reduce using rule 115 (declaraciones -> variable_declaration .)
    NIL             reduce using rule 115 (declaraciones -> variable_declaration .)
    SYMBOL          reduce using rule 115 (declaraciones -> variable_declaration .)
    LEFT_COR        reduce using rule 115 (declaraciones -> variable_declaration .)
    PERCENTW        reduce using rule 115 (declaraciones -> variable_declaration .)
    ARRAY           reduce using rule 115 (declaraciones -> variable_declaration .)
    $end            reduce using rule 115 (declaraciones -> variable_declaration .)
    END_LOWER       reduce using rule 115 (declaraciones -> variable_declaration .)
    NEWLINE         reduce using rule 115 (declaraciones -> variable_declaration .)


state 28

    (116) declaraciones -> store_conditional_result .

    PUT             reduce using rule 116 (declaraciones -> store_conditional_result .)
    GETS            reduce using rule 116 (declaraciones -> store_conditional_result .)
    LOCAL_VAR       reduce using rule 116 (declaraciones -> store_conditional_result .)
    INTEGER         reduce using rule 116 (declaraciones -> store_conditional_result .)
    FLOAT           reduce using rule 116 (declaraciones -> store_conditional_result .)
    STRING          reduce using rule 116 (declaraciones -> store_conditional_result .)
    SET             reduce using rule 116 (declaraciones -> store_conditional_result .)
    IF              reduce using rule 116 (declaraciones -> store_conditional_result .)
    WHILE           reduce using rule 116 (declaraciones -> store_conditional_result .)
    UNLESS          reduce using rule 116 (declaraciones -> store_conditional_result .)
    INSTANCE_VAR    reduce using rule 116 (declaraciones -> store_conditional_result .)
    CLASS_VAR       reduce using rule 116 (declaraciones -> store_conditional_result .)
    GLOBAL_VAR      reduce using rule 116 (declaraciones -> store_conditional_result .)
    CONSTANT        reduce using rule 116 (declaraciones -> store_conditional_result .)
    NIL             reduce using rule 116 (declaraciones -> store_conditional_result .)
    SYMBOL          reduce using rule 116 (declaraciones -> store_conditional_result .)
    LEFT_COR        reduce using rule 116 (declaraciones -> store_conditional_result .)
    PERCENTW        reduce using rule 116 (declaraciones -> store_conditional_result .)
    ARRAY           reduce using rule 116 (declaraciones -> store_conditional_result .)
    $end            reduce using rule 116 (declaraciones -> store_conditional_result .)
    END_LOWER       reduce using rule 116 (declaraciones -> store_conditional_result .)
    NEWLINE         reduce using rule 116 (declaraciones -> store_conditional_result .)


state 29

    (117) declaraciones -> declare_data_structures .

    PUT             reduce using rule 117 (declaraciones -> declare_data_structures .)
    GETS            reduce using rule 117 (declaraciones -> declare_data_structures .)
    LOCAL_VAR       reduce using rule 117 (declaraciones -> declare_data_structures .)
    INTEGER         reduce using rule 117 (declaraciones -> declare_data_structures .)
    FLOAT           reduce using rule 117 (declaraciones -> declare_data_structures .)
    STRING          reduce using rule 117 (declaraciones -> declare_data_structures .)
    SET             reduce using rule 117 (declaraciones -> declare_data_structures .)
    IF              reduce using rule 117 (declaraciones -> declare_data_structures .)
    WHILE           reduce using rule 117 (declaraciones -> declare_data_structures .)
    UNLESS          reduce using rule 117 (declaraciones -> declare_data_structures .)
    INSTANCE_VAR    reduce using rule 117 (declaraciones -> declare_data_structures .)
    CLASS_VAR       reduce using rule 117 (declaraciones -> declare_data_structures .)
    GLOBAL_VAR      reduce using rule 117 (declaraciones -> declare_data_structures .)
    CONSTANT        reduce using rule 117 (declaraciones -> declare_data_structures .)
    NIL             reduce using rule 117 (declaraciones -> declare_data_structures .)
    SYMBOL          reduce using rule 117 (declaraciones -> declare_data_structures .)
    LEFT_COR        reduce using rule 117 (declaraciones -> declare_data_structures .)
    PERCENTW        reduce using rule 117 (declaraciones -> declare_data_structures .)
    ARRAY           reduce using rule 117 (declaraciones -> declare_data_structures .)
    $end            reduce using rule 117 (declaraciones -> declare_data_structures .)
    END_LOWER       reduce using rule 117 (declaraciones -> declare_data_structures .)
    NEWLINE         reduce using rule 117 (declaraciones -> declare_data_structures .)


state 30

    (118) declaraciones -> var_arreglo .
    (55) acceder_arreglo -> var_arreglo . LEFT_COR INTEGER RIGHT_COR
    (90) declare_data_structures -> var_arreglo .

  ! shift/reduce conflict for LEFT_COR resolved as shift
  ! reduce/reduce conflict for PUT resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for GETS resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for INTEGER resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for FLOAT resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for STRING resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for SET resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for IF resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for WHILE resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for UNLESS resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for NIL resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! shift/reduce conflict for LEFT_COR resolved as shift
  ! reduce/reduce conflict for PERCENTW resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for ARRAY resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for $end resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 90 (declare_data_structures -> var_arreglo .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 90 (declare_data_structures -> var_arreglo .)
    LEFT_COR        shift and go to state 84
    PUT             reduce using rule 90 (declare_data_structures -> var_arreglo .)
    GETS            reduce using rule 90 (declare_data_structures -> var_arreglo .)
    LOCAL_VAR       reduce using rule 90 (declare_data_structures -> var_arreglo .)
    INTEGER         reduce using rule 90 (declare_data_structures -> var_arreglo .)
    FLOAT           reduce using rule 90 (declare_data_structures -> var_arreglo .)
    STRING          reduce using rule 90 (declare_data_structures -> var_arreglo .)
    SET             reduce using rule 90 (declare_data_structures -> var_arreglo .)
    IF              reduce using rule 90 (declare_data_structures -> var_arreglo .)
    WHILE           reduce using rule 90 (declare_data_structures -> var_arreglo .)
    UNLESS          reduce using rule 90 (declare_data_structures -> var_arreglo .)
    INSTANCE_VAR    reduce using rule 90 (declare_data_structures -> var_arreglo .)
    CLASS_VAR       reduce using rule 90 (declare_data_structures -> var_arreglo .)
    GLOBAL_VAR      reduce using rule 90 (declare_data_structures -> var_arreglo .)
    CONSTANT        reduce using rule 90 (declare_data_structures -> var_arreglo .)
    NIL             reduce using rule 90 (declare_data_structures -> var_arreglo .)
    SYMBOL          reduce using rule 90 (declare_data_structures -> var_arreglo .)
    PERCENTW        reduce using rule 90 (declare_data_structures -> var_arreglo .)
    ARRAY           reduce using rule 90 (declare_data_structures -> var_arreglo .)
    $end            reduce using rule 90 (declare_data_structures -> var_arreglo .)
    END_LOWER       reduce using rule 90 (declare_data_structures -> var_arreglo .)
    NEWLINE         reduce using rule 90 (declare_data_structures -> var_arreglo .)

  ! PUT             [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! GETS            [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! LOCAL_VAR       [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! INTEGER         [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! FLOAT           [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! STRING          [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! SET             [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! IF              [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! WHILE           [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! UNLESS          [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! INSTANCE_VAR    [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! CLASS_VAR       [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! GLOBAL_VAR      [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! CONSTANT        [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! NIL             [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! SYMBOL          [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! LEFT_COR        [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! PERCENTW        [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! ARRAY           [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! $end            [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! END_LOWER       [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! NEWLINE         [ reduce using rule 118 (declaraciones -> var_arreglo .) ]
  ! LEFT_COR        [ reduce using rule 90 (declare_data_structures -> var_arreglo .) ]


state 31

    (121) declaraciones -> declaracion_concatenar_string .

    PUT             reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    GETS            reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    LOCAL_VAR       reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    INTEGER         reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    FLOAT           reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    STRING          reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    SET             reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    IF              reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    WHILE           reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    UNLESS          reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    INSTANCE_VAR    reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    CLASS_VAR       reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    GLOBAL_VAR      reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    CONSTANT        reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    NIL             reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    SYMBOL          reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    LEFT_COR        reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    PERCENTW        reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    ARRAY           reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    $end            reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    END_LOWER       reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)
    NEWLINE         reduce using rule 121 (declaraciones -> declaracion_concatenar_string .)


state 32

    (122) declaraciones -> proc_assignment .

    PUT             reduce using rule 122 (declaraciones -> proc_assignment .)
    GETS            reduce using rule 122 (declaraciones -> proc_assignment .)
    LOCAL_VAR       reduce using rule 122 (declaraciones -> proc_assignment .)
    INTEGER         reduce using rule 122 (declaraciones -> proc_assignment .)
    FLOAT           reduce using rule 122 (declaraciones -> proc_assignment .)
    STRING          reduce using rule 122 (declaraciones -> proc_assignment .)
    SET             reduce using rule 122 (declaraciones -> proc_assignment .)
    IF              reduce using rule 122 (declaraciones -> proc_assignment .)
    WHILE           reduce using rule 122 (declaraciones -> proc_assignment .)
    UNLESS          reduce using rule 122 (declaraciones -> proc_assignment .)
    INSTANCE_VAR    reduce using rule 122 (declaraciones -> proc_assignment .)
    CLASS_VAR       reduce using rule 122 (declaraciones -> proc_assignment .)
    GLOBAL_VAR      reduce using rule 122 (declaraciones -> proc_assignment .)
    CONSTANT        reduce using rule 122 (declaraciones -> proc_assignment .)
    NIL             reduce using rule 122 (declaraciones -> proc_assignment .)
    SYMBOL          reduce using rule 122 (declaraciones -> proc_assignment .)
    LEFT_COR        reduce using rule 122 (declaraciones -> proc_assignment .)
    PERCENTW        reduce using rule 122 (declaraciones -> proc_assignment .)
    ARRAY           reduce using rule 122 (declaraciones -> proc_assignment .)
    $end            reduce using rule 122 (declaraciones -> proc_assignment .)
    END_LOWER       reduce using rule 122 (declaraciones -> proc_assignment .)
    NEWLINE         reduce using rule 122 (declaraciones -> proc_assignment .)


state 33

    (106) expression -> INTEGER .
    (37) num -> INTEGER .

    PUT             reduce using rule 106 (expression -> INTEGER .)
    GETS            reduce using rule 106 (expression -> INTEGER .)
    LOCAL_VAR       reduce using rule 106 (expression -> INTEGER .)
    INTEGER         reduce using rule 106 (expression -> INTEGER .)
    FLOAT           reduce using rule 106 (expression -> INTEGER .)
    STRING          reduce using rule 106 (expression -> INTEGER .)
    SET             reduce using rule 106 (expression -> INTEGER .)
    IF              reduce using rule 106 (expression -> INTEGER .)
    WHILE           reduce using rule 106 (expression -> INTEGER .)
    UNLESS          reduce using rule 106 (expression -> INTEGER .)
    INSTANCE_VAR    reduce using rule 106 (expression -> INTEGER .)
    CLASS_VAR       reduce using rule 106 (expression -> INTEGER .)
    GLOBAL_VAR      reduce using rule 106 (expression -> INTEGER .)
    CONSTANT        reduce using rule 106 (expression -> INTEGER .)
    NIL             reduce using rule 106 (expression -> INTEGER .)
    SYMBOL          reduce using rule 106 (expression -> INTEGER .)
    LEFT_COR        reduce using rule 106 (expression -> INTEGER .)
    PERCENTW        reduce using rule 106 (expression -> INTEGER .)
    ARRAY           reduce using rule 106 (expression -> INTEGER .)
    $end            reduce using rule 106 (expression -> INTEGER .)
    END_LOWER       reduce using rule 106 (expression -> INTEGER .)
    NEWLINE         reduce using rule 106 (expression -> INTEGER .)
    EQUAL           reduce using rule 37 (num -> INTEGER .)
    COMPARE         reduce using rule 37 (num -> INTEGER .)


state 34

    (107) expression -> FLOAT .
    (36) num -> FLOAT .

    PUT             reduce using rule 107 (expression -> FLOAT .)
    GETS            reduce using rule 107 (expression -> FLOAT .)
    LOCAL_VAR       reduce using rule 107 (expression -> FLOAT .)
    INTEGER         reduce using rule 107 (expression -> FLOAT .)
    FLOAT           reduce using rule 107 (expression -> FLOAT .)
    STRING          reduce using rule 107 (expression -> FLOAT .)
    SET             reduce using rule 107 (expression -> FLOAT .)
    IF              reduce using rule 107 (expression -> FLOAT .)
    WHILE           reduce using rule 107 (expression -> FLOAT .)
    UNLESS          reduce using rule 107 (expression -> FLOAT .)
    INSTANCE_VAR    reduce using rule 107 (expression -> FLOAT .)
    CLASS_VAR       reduce using rule 107 (expression -> FLOAT .)
    GLOBAL_VAR      reduce using rule 107 (expression -> FLOAT .)
    CONSTANT        reduce using rule 107 (expression -> FLOAT .)
    NIL             reduce using rule 107 (expression -> FLOAT .)
    SYMBOL          reduce using rule 107 (expression -> FLOAT .)
    LEFT_COR        reduce using rule 107 (expression -> FLOAT .)
    PERCENTW        reduce using rule 107 (expression -> FLOAT .)
    ARRAY           reduce using rule 107 (expression -> FLOAT .)
    $end            reduce using rule 107 (expression -> FLOAT .)
    END_LOWER       reduce using rule 107 (expression -> FLOAT .)
    NEWLINE         reduce using rule 107 (expression -> FLOAT .)
    EQUAL           reduce using rule 36 (num -> FLOAT .)
    COMPARE         reduce using rule 36 (num -> FLOAT .)


state 35

    (108) expression -> variable .

    PUT             reduce using rule 108 (expression -> variable .)
    GETS            reduce using rule 108 (expression -> variable .)
    LOCAL_VAR       reduce using rule 108 (expression -> variable .)
    INTEGER         reduce using rule 108 (expression -> variable .)
    FLOAT           reduce using rule 108 (expression -> variable .)
    STRING          reduce using rule 108 (expression -> variable .)
    SET             reduce using rule 108 (expression -> variable .)
    IF              reduce using rule 108 (expression -> variable .)
    WHILE           reduce using rule 108 (expression -> variable .)
    UNLESS          reduce using rule 108 (expression -> variable .)
    INSTANCE_VAR    reduce using rule 108 (expression -> variable .)
    CLASS_VAR       reduce using rule 108 (expression -> variable .)
    GLOBAL_VAR      reduce using rule 108 (expression -> variable .)
    CONSTANT        reduce using rule 108 (expression -> variable .)
    NIL             reduce using rule 108 (expression -> variable .)
    SYMBOL          reduce using rule 108 (expression -> variable .)
    LEFT_COR        reduce using rule 108 (expression -> variable .)
    PERCENTW        reduce using rule 108 (expression -> variable .)
    ARRAY           reduce using rule 108 (expression -> variable .)
    $end            reduce using rule 108 (expression -> variable .)
    GREATER         reduce using rule 108 (expression -> variable .)
    LESS            reduce using rule 108 (expression -> variable .)
    GREATER_EQUAL   reduce using rule 108 (expression -> variable .)
    LESS_EQUAL      reduce using rule 108 (expression -> variable .)
    EQUAL           reduce using rule 108 (expression -> variable .)
    NOT_EQUAL       reduce using rule 108 (expression -> variable .)
    END_LOWER       reduce using rule 108 (expression -> variable .)
    NEWLINE         reduce using rule 108 (expression -> variable .)
    THEN            reduce using rule 108 (expression -> variable .)


state 36

    (109) expression -> STRING .
    (25) value -> STRING .

    PUT             reduce using rule 109 (expression -> STRING .)
    GETS            reduce using rule 109 (expression -> STRING .)
    LOCAL_VAR       reduce using rule 109 (expression -> STRING .)
    INTEGER         reduce using rule 109 (expression -> STRING .)
    FLOAT           reduce using rule 109 (expression -> STRING .)
    STRING          reduce using rule 109 (expression -> STRING .)
    SET             reduce using rule 109 (expression -> STRING .)
    IF              reduce using rule 109 (expression -> STRING .)
    WHILE           reduce using rule 109 (expression -> STRING .)
    UNLESS          reduce using rule 109 (expression -> STRING .)
    INSTANCE_VAR    reduce using rule 109 (expression -> STRING .)
    CLASS_VAR       reduce using rule 109 (expression -> STRING .)
    GLOBAL_VAR      reduce using rule 109 (expression -> STRING .)
    CONSTANT        reduce using rule 109 (expression -> STRING .)
    NIL             reduce using rule 109 (expression -> STRING .)
    SYMBOL          reduce using rule 109 (expression -> STRING .)
    LEFT_COR        reduce using rule 109 (expression -> STRING .)
    PERCENTW        reduce using rule 109 (expression -> STRING .)
    ARRAY           reduce using rule 109 (expression -> STRING .)
    $end            reduce using rule 109 (expression -> STRING .)
    END_LOWER       reduce using rule 109 (expression -> STRING .)
    NEWLINE         reduce using rule 109 (expression -> STRING .)
    EQUAL           reduce using rule 25 (value -> STRING .)
    COMPARE         reduce using rule 25 (value -> STRING .)


state 37

    (126) comparador -> value . EQUAL value
    (127) comparador -> value . COMPARE value

    EQUAL           shift and go to state 85
    COMPARE         shift and go to state 86


state 38

    (42) array -> array_explicito .

    PUT             reduce using rule 42 (array -> array_explicito .)
    GETS            reduce using rule 42 (array -> array_explicito .)
    LOCAL_VAR       reduce using rule 42 (array -> array_explicito .)
    INTEGER         reduce using rule 42 (array -> array_explicito .)
    FLOAT           reduce using rule 42 (array -> array_explicito .)
    STRING          reduce using rule 42 (array -> array_explicito .)
    SET             reduce using rule 42 (array -> array_explicito .)
    IF              reduce using rule 42 (array -> array_explicito .)
    WHILE           reduce using rule 42 (array -> array_explicito .)
    UNLESS          reduce using rule 42 (array -> array_explicito .)
    INSTANCE_VAR    reduce using rule 42 (array -> array_explicito .)
    CLASS_VAR       reduce using rule 42 (array -> array_explicito .)
    GLOBAL_VAR      reduce using rule 42 (array -> array_explicito .)
    CONSTANT        reduce using rule 42 (array -> array_explicito .)
    NIL             reduce using rule 42 (array -> array_explicito .)
    SYMBOL          reduce using rule 42 (array -> array_explicito .)
    LEFT_COR        reduce using rule 42 (array -> array_explicito .)
    PERCENTW        reduce using rule 42 (array -> array_explicito .)
    ARRAY           reduce using rule 42 (array -> array_explicito .)
    $end            reduce using rule 42 (array -> array_explicito .)
    END_LOWER       reduce using rule 42 (array -> array_explicito .)
    NEWLINE         reduce using rule 42 (array -> array_explicito .)


state 39

    (43) array -> array_implicito .

    PUT             reduce using rule 43 (array -> array_implicito .)
    GETS            reduce using rule 43 (array -> array_implicito .)
    LOCAL_VAR       reduce using rule 43 (array -> array_implicito .)
    INTEGER         reduce using rule 43 (array -> array_implicito .)
    FLOAT           reduce using rule 43 (array -> array_implicito .)
    STRING          reduce using rule 43 (array -> array_implicito .)
    SET             reduce using rule 43 (array -> array_implicito .)
    IF              reduce using rule 43 (array -> array_implicito .)
    WHILE           reduce using rule 43 (array -> array_implicito .)
    UNLESS          reduce using rule 43 (array -> array_implicito .)
    INSTANCE_VAR    reduce using rule 43 (array -> array_implicito .)
    CLASS_VAR       reduce using rule 43 (array -> array_implicito .)
    GLOBAL_VAR      reduce using rule 43 (array -> array_implicito .)
    CONSTANT        reduce using rule 43 (array -> array_implicito .)
    NIL             reduce using rule 43 (array -> array_implicito .)
    SYMBOL          reduce using rule 43 (array -> array_implicito .)
    LEFT_COR        reduce using rule 43 (array -> array_implicito .)
    PERCENTW        reduce using rule 43 (array -> array_implicito .)
    ARRAY           reduce using rule 43 (array -> array_implicito .)
    $end            reduce using rule 43 (array -> array_implicito .)
    END_LOWER       reduce using rule 43 (array -> array_implicito .)
    NEWLINE         reduce using rule 43 (array -> array_implicito .)


state 40

    (44) array -> array_creation .

    PUT             reduce using rule 44 (array -> array_creation .)
    GETS            reduce using rule 44 (array -> array_creation .)
    LOCAL_VAR       reduce using rule 44 (array -> array_creation .)
    INTEGER         reduce using rule 44 (array -> array_creation .)
    FLOAT           reduce using rule 44 (array -> array_creation .)
    STRING          reduce using rule 44 (array -> array_creation .)
    SET             reduce using rule 44 (array -> array_creation .)
    IF              reduce using rule 44 (array -> array_creation .)
    WHILE           reduce using rule 44 (array -> array_creation .)
    UNLESS          reduce using rule 44 (array -> array_creation .)
    INSTANCE_VAR    reduce using rule 44 (array -> array_creation .)
    CLASS_VAR       reduce using rule 44 (array -> array_creation .)
    GLOBAL_VAR      reduce using rule 44 (array -> array_creation .)
    CONSTANT        reduce using rule 44 (array -> array_creation .)
    NIL             reduce using rule 44 (array -> array_creation .)
    SYMBOL          reduce using rule 44 (array -> array_creation .)
    LEFT_COR        reduce using rule 44 (array -> array_creation .)
    PERCENTW        reduce using rule 44 (array -> array_creation .)
    ARRAY           reduce using rule 44 (array -> array_creation .)
    $end            reduce using rule 44 (array -> array_creation .)
    END_LOWER       reduce using rule 44 (array -> array_creation .)
    NEWLINE         reduce using rule 44 (array -> array_creation .)


state 41

    (45) array -> newArray .

    PUT             reduce using rule 45 (array -> newArray .)
    GETS            reduce using rule 45 (array -> newArray .)
    LOCAL_VAR       reduce using rule 45 (array -> newArray .)
    INTEGER         reduce using rule 45 (array -> newArray .)
    FLOAT           reduce using rule 45 (array -> newArray .)
    STRING          reduce using rule 45 (array -> newArray .)
    SET             reduce using rule 45 (array -> newArray .)
    IF              reduce using rule 45 (array -> newArray .)
    WHILE           reduce using rule 45 (array -> newArray .)
    UNLESS          reduce using rule 45 (array -> newArray .)
    INSTANCE_VAR    reduce using rule 45 (array -> newArray .)
    CLASS_VAR       reduce using rule 45 (array -> newArray .)
    GLOBAL_VAR      reduce using rule 45 (array -> newArray .)
    CONSTANT        reduce using rule 45 (array -> newArray .)
    NIL             reduce using rule 45 (array -> newArray .)
    SYMBOL          reduce using rule 45 (array -> newArray .)
    LEFT_COR        reduce using rule 45 (array -> newArray .)
    PERCENTW        reduce using rule 45 (array -> newArray .)
    ARRAY           reduce using rule 45 (array -> newArray .)
    $end            reduce using rule 45 (array -> newArray .)
    END_LOWER       reduce using rule 45 (array -> newArray .)
    NEWLINE         reduce using rule 45 (array -> newArray .)


state 42

    (87) hash_operations -> hash_access . ASSIGN value

    ASSIGN          shift and go to state 87


state 43

    (128) set_expression -> SET . DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> SET . LEFT_COR values RIGHT_COR

    DOT             shift and go to state 88
    LEFT_COR        shift and go to state 89


state 44

    (56) ifStatement -> IF . condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> IF . condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    condiciones                    shift and go to state 90
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 45

    (92) while_statement -> WHILE . condiciones codigo END_LOWER
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    condiciones                    shift and go to state 94
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 46

    (138) unless_expression -> UNLESS . boolean_expression THEN expresion END
    (139) unless_expression -> UNLESS . boolean_expression THEN expresion ELSE expresion END
    (97) boolean_expression -> . expression GREATER expression
    (98) boolean_expression -> . expression LESS expression
    (99) boolean_expression -> . expression GREATER_EQUAL expression
    (100) boolean_expression -> . expression LESS_EQUAL expression
    (101) boolean_expression -> . expression EQUAL expression
    (102) boolean_expression -> . expression NOT_EQUAL expression
    (103) boolean_expression -> . boolean_value
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (104) boolean_value -> . TRUE
    (105) boolean_value -> . FALSE
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    boolean_expression             shift and go to state 95
    expression                     shift and go to state 96
    boolean_value                  shift and go to state 97
    variable                       shift and go to state 35

state 47

    (111) variable -> INSTANCE_VAR .
    (33) var -> INSTANCE_VAR .

    PUT             reduce using rule 111 (variable -> INSTANCE_VAR .)
    GETS            reduce using rule 111 (variable -> INSTANCE_VAR .)
    LOCAL_VAR       reduce using rule 111 (variable -> INSTANCE_VAR .)
    INTEGER         reduce using rule 111 (variable -> INSTANCE_VAR .)
    FLOAT           reduce using rule 111 (variable -> INSTANCE_VAR .)
    STRING          reduce using rule 111 (variable -> INSTANCE_VAR .)
    SET             reduce using rule 111 (variable -> INSTANCE_VAR .)
    IF              reduce using rule 111 (variable -> INSTANCE_VAR .)
    WHILE           reduce using rule 111 (variable -> INSTANCE_VAR .)
    UNLESS          reduce using rule 111 (variable -> INSTANCE_VAR .)
    INSTANCE_VAR    reduce using rule 111 (variable -> INSTANCE_VAR .)
    CLASS_VAR       reduce using rule 111 (variable -> INSTANCE_VAR .)
    GLOBAL_VAR      reduce using rule 111 (variable -> INSTANCE_VAR .)
    CONSTANT        reduce using rule 111 (variable -> INSTANCE_VAR .)
    NIL             reduce using rule 111 (variable -> INSTANCE_VAR .)
    SYMBOL          reduce using rule 111 (variable -> INSTANCE_VAR .)
    LEFT_COR        reduce using rule 111 (variable -> INSTANCE_VAR .)
    PERCENTW        reduce using rule 111 (variable -> INSTANCE_VAR .)
    ARRAY           reduce using rule 111 (variable -> INSTANCE_VAR .)
    $end            reduce using rule 111 (variable -> INSTANCE_VAR .)
    END_LOWER       reduce using rule 111 (variable -> INSTANCE_VAR .)
    NEWLINE         reduce using rule 111 (variable -> INSTANCE_VAR .)
    LBRACE          reduce using rule 33 (var -> INSTANCE_VAR .)
    EQUAL           reduce using rule 33 (var -> INSTANCE_VAR .)
    COMPARE         reduce using rule 33 (var -> INSTANCE_VAR .)


state 48

    (112) variable -> CLASS_VAR .
    (34) var -> CLASS_VAR .

    PUT             reduce using rule 112 (variable -> CLASS_VAR .)
    GETS            reduce using rule 112 (variable -> CLASS_VAR .)
    LOCAL_VAR       reduce using rule 112 (variable -> CLASS_VAR .)
    INTEGER         reduce using rule 112 (variable -> CLASS_VAR .)
    FLOAT           reduce using rule 112 (variable -> CLASS_VAR .)
    STRING          reduce using rule 112 (variable -> CLASS_VAR .)
    SET             reduce using rule 112 (variable -> CLASS_VAR .)
    IF              reduce using rule 112 (variable -> CLASS_VAR .)
    WHILE           reduce using rule 112 (variable -> CLASS_VAR .)
    UNLESS          reduce using rule 112 (variable -> CLASS_VAR .)
    INSTANCE_VAR    reduce using rule 112 (variable -> CLASS_VAR .)
    CLASS_VAR       reduce using rule 112 (variable -> CLASS_VAR .)
    GLOBAL_VAR      reduce using rule 112 (variable -> CLASS_VAR .)
    CONSTANT        reduce using rule 112 (variable -> CLASS_VAR .)
    NIL             reduce using rule 112 (variable -> CLASS_VAR .)
    SYMBOL          reduce using rule 112 (variable -> CLASS_VAR .)
    LEFT_COR        reduce using rule 112 (variable -> CLASS_VAR .)
    PERCENTW        reduce using rule 112 (variable -> CLASS_VAR .)
    ARRAY           reduce using rule 112 (variable -> CLASS_VAR .)
    $end            reduce using rule 112 (variable -> CLASS_VAR .)
    END_LOWER       reduce using rule 112 (variable -> CLASS_VAR .)
    NEWLINE         reduce using rule 112 (variable -> CLASS_VAR .)
    LBRACE          reduce using rule 34 (var -> CLASS_VAR .)
    EQUAL           reduce using rule 34 (var -> CLASS_VAR .)
    COMPARE         reduce using rule 34 (var -> CLASS_VAR .)


state 49

    (113) variable -> GLOBAL_VAR .
    (35) var -> GLOBAL_VAR .

    PUT             reduce using rule 113 (variable -> GLOBAL_VAR .)
    GETS            reduce using rule 113 (variable -> GLOBAL_VAR .)
    LOCAL_VAR       reduce using rule 113 (variable -> GLOBAL_VAR .)
    INTEGER         reduce using rule 113 (variable -> GLOBAL_VAR .)
    FLOAT           reduce using rule 113 (variable -> GLOBAL_VAR .)
    STRING          reduce using rule 113 (variable -> GLOBAL_VAR .)
    SET             reduce using rule 113 (variable -> GLOBAL_VAR .)
    IF              reduce using rule 113 (variable -> GLOBAL_VAR .)
    WHILE           reduce using rule 113 (variable -> GLOBAL_VAR .)
    UNLESS          reduce using rule 113 (variable -> GLOBAL_VAR .)
    INSTANCE_VAR    reduce using rule 113 (variable -> GLOBAL_VAR .)
    CLASS_VAR       reduce using rule 113 (variable -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 113 (variable -> GLOBAL_VAR .)
    CONSTANT        reduce using rule 113 (variable -> GLOBAL_VAR .)
    NIL             reduce using rule 113 (variable -> GLOBAL_VAR .)
    SYMBOL          reduce using rule 113 (variable -> GLOBAL_VAR .)
    LEFT_COR        reduce using rule 113 (variable -> GLOBAL_VAR .)
    PERCENTW        reduce using rule 113 (variable -> GLOBAL_VAR .)
    ARRAY           reduce using rule 113 (variable -> GLOBAL_VAR .)
    $end            reduce using rule 113 (variable -> GLOBAL_VAR .)
    END_LOWER       reduce using rule 113 (variable -> GLOBAL_VAR .)
    NEWLINE         reduce using rule 113 (variable -> GLOBAL_VAR .)
    LBRACE          reduce using rule 35 (var -> GLOBAL_VAR .)
    EQUAL           reduce using rule 35 (var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 35 (var -> GLOBAL_VAR .)


state 50

    (114) variable -> CONSTANT .

    PUT             reduce using rule 114 (variable -> CONSTANT .)
    GETS            reduce using rule 114 (variable -> CONSTANT .)
    LOCAL_VAR       reduce using rule 114 (variable -> CONSTANT .)
    INTEGER         reduce using rule 114 (variable -> CONSTANT .)
    FLOAT           reduce using rule 114 (variable -> CONSTANT .)
    STRING          reduce using rule 114 (variable -> CONSTANT .)
    SET             reduce using rule 114 (variable -> CONSTANT .)
    IF              reduce using rule 114 (variable -> CONSTANT .)
    WHILE           reduce using rule 114 (variable -> CONSTANT .)
    UNLESS          reduce using rule 114 (variable -> CONSTANT .)
    INSTANCE_VAR    reduce using rule 114 (variable -> CONSTANT .)
    CLASS_VAR       reduce using rule 114 (variable -> CONSTANT .)
    GLOBAL_VAR      reduce using rule 114 (variable -> CONSTANT .)
    CONSTANT        reduce using rule 114 (variable -> CONSTANT .)
    NIL             reduce using rule 114 (variable -> CONSTANT .)
    SYMBOL          reduce using rule 114 (variable -> CONSTANT .)
    LEFT_COR        reduce using rule 114 (variable -> CONSTANT .)
    PERCENTW        reduce using rule 114 (variable -> CONSTANT .)
    ARRAY           reduce using rule 114 (variable -> CONSTANT .)
    $end            reduce using rule 114 (variable -> CONSTANT .)
    GREATER         reduce using rule 114 (variable -> CONSTANT .)
    LESS            reduce using rule 114 (variable -> CONSTANT .)
    GREATER_EQUAL   reduce using rule 114 (variable -> CONSTANT .)
    LESS_EQUAL      reduce using rule 114 (variable -> CONSTANT .)
    EQUAL           reduce using rule 114 (variable -> CONSTANT .)
    NOT_EQUAL       reduce using rule 114 (variable -> CONSTANT .)
    END_LOWER       reduce using rule 114 (variable -> CONSTANT .)
    NEWLINE         reduce using rule 114 (variable -> CONSTANT .)
    THEN            reduce using rule 114 (variable -> CONSTANT .)


state 51

    (23) value -> num .

    EQUAL           reduce using rule 23 (value -> num .)
    COMPARE         reduce using rule 23 (value -> num .)
    COMMA           reduce using rule 23 (value -> num .)
    PUT             reduce using rule 23 (value -> num .)
    GETS            reduce using rule 23 (value -> num .)
    LOCAL_VAR       reduce using rule 23 (value -> num .)
    INTEGER         reduce using rule 23 (value -> num .)
    FLOAT           reduce using rule 23 (value -> num .)
    STRING          reduce using rule 23 (value -> num .)
    SET             reduce using rule 23 (value -> num .)
    IF              reduce using rule 23 (value -> num .)
    WHILE           reduce using rule 23 (value -> num .)
    UNLESS          reduce using rule 23 (value -> num .)
    INSTANCE_VAR    reduce using rule 23 (value -> num .)
    CLASS_VAR       reduce using rule 23 (value -> num .)
    GLOBAL_VAR      reduce using rule 23 (value -> num .)
    CONSTANT        reduce using rule 23 (value -> num .)
    NIL             reduce using rule 23 (value -> num .)
    SYMBOL          reduce using rule 23 (value -> num .)
    LEFT_COR        reduce using rule 23 (value -> num .)
    PERCENTW        reduce using rule 23 (value -> num .)
    ARRAY           reduce using rule 23 (value -> num .)
    $end            reduce using rule 23 (value -> num .)
    END_LOWER       reduce using rule 23 (value -> num .)
    NEWLINE         reduce using rule 23 (value -> num .)
    RIGHT_COR       reduce using rule 23 (value -> num .)
    RIGHTPAR        reduce using rule 23 (value -> num .)
    RBRACE          reduce using rule 23 (value -> num .)
    SPACE           reduce using rule 23 (value -> num .)
    END             reduce using rule 23 (value -> num .)
    ELSE            reduce using rule 23 (value -> num .)


state 52

    (24) value -> var .
    (86) hash_access -> var . LBRACE value RBRACE

    EQUAL           reduce using rule 24 (value -> var .)
    COMPARE         reduce using rule 24 (value -> var .)
    LBRACE          shift and go to state 107


state 53

    (26) value -> NIL .

    EQUAL           reduce using rule 26 (value -> NIL .)
    COMPARE         reduce using rule 26 (value -> NIL .)
    COMMA           reduce using rule 26 (value -> NIL .)
    PUT             reduce using rule 26 (value -> NIL .)
    GETS            reduce using rule 26 (value -> NIL .)
    LOCAL_VAR       reduce using rule 26 (value -> NIL .)
    INTEGER         reduce using rule 26 (value -> NIL .)
    FLOAT           reduce using rule 26 (value -> NIL .)
    STRING          reduce using rule 26 (value -> NIL .)
    SET             reduce using rule 26 (value -> NIL .)
    IF              reduce using rule 26 (value -> NIL .)
    WHILE           reduce using rule 26 (value -> NIL .)
    UNLESS          reduce using rule 26 (value -> NIL .)
    INSTANCE_VAR    reduce using rule 26 (value -> NIL .)
    CLASS_VAR       reduce using rule 26 (value -> NIL .)
    GLOBAL_VAR      reduce using rule 26 (value -> NIL .)
    CONSTANT        reduce using rule 26 (value -> NIL .)
    NIL             reduce using rule 26 (value -> NIL .)
    SYMBOL          reduce using rule 26 (value -> NIL .)
    LEFT_COR        reduce using rule 26 (value -> NIL .)
    PERCENTW        reduce using rule 26 (value -> NIL .)
    ARRAY           reduce using rule 26 (value -> NIL .)
    $end            reduce using rule 26 (value -> NIL .)
    END_LOWER       reduce using rule 26 (value -> NIL .)
    NEWLINE         reduce using rule 26 (value -> NIL .)
    RIGHT_COR       reduce using rule 26 (value -> NIL .)
    RIGHTPAR        reduce using rule 26 (value -> NIL .)
    RBRACE          reduce using rule 26 (value -> NIL .)
    SPACE           reduce using rule 26 (value -> NIL .)
    END             reduce using rule 26 (value -> NIL .)
    ELSE            reduce using rule 26 (value -> NIL .)


state 54

    (27) value -> SYMBOL .

    EQUAL           reduce using rule 27 (value -> SYMBOL .)
    COMPARE         reduce using rule 27 (value -> SYMBOL .)
    COMMA           reduce using rule 27 (value -> SYMBOL .)
    PUT             reduce using rule 27 (value -> SYMBOL .)
    GETS            reduce using rule 27 (value -> SYMBOL .)
    LOCAL_VAR       reduce using rule 27 (value -> SYMBOL .)
    INTEGER         reduce using rule 27 (value -> SYMBOL .)
    FLOAT           reduce using rule 27 (value -> SYMBOL .)
    STRING          reduce using rule 27 (value -> SYMBOL .)
    SET             reduce using rule 27 (value -> SYMBOL .)
    IF              reduce using rule 27 (value -> SYMBOL .)
    WHILE           reduce using rule 27 (value -> SYMBOL .)
    UNLESS          reduce using rule 27 (value -> SYMBOL .)
    INSTANCE_VAR    reduce using rule 27 (value -> SYMBOL .)
    CLASS_VAR       reduce using rule 27 (value -> SYMBOL .)
    GLOBAL_VAR      reduce using rule 27 (value -> SYMBOL .)
    CONSTANT        reduce using rule 27 (value -> SYMBOL .)
    NIL             reduce using rule 27 (value -> SYMBOL .)
    SYMBOL          reduce using rule 27 (value -> SYMBOL .)
    LEFT_COR        reduce using rule 27 (value -> SYMBOL .)
    PERCENTW        reduce using rule 27 (value -> SYMBOL .)
    ARRAY           reduce using rule 27 (value -> SYMBOL .)
    $end            reduce using rule 27 (value -> SYMBOL .)
    END_LOWER       reduce using rule 27 (value -> SYMBOL .)
    NEWLINE         reduce using rule 27 (value -> SYMBOL .)
    RIGHT_COR       reduce using rule 27 (value -> SYMBOL .)
    RIGHTPAR        reduce using rule 27 (value -> SYMBOL .)
    RBRACE          reduce using rule 27 (value -> SYMBOL .)
    SPACE           reduce using rule 27 (value -> SYMBOL .)
    END             reduce using rule 27 (value -> SYMBOL .)
    ELSE            reduce using rule 27 (value -> SYMBOL .)


state 55

    (49) array_implicito -> PERCENTW . LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> PERCENTW . LEFT_COR RIGHT_COR

    LEFT_COR        shift and go to state 108


state 56

    (51) array_creation -> ARRAY . LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> ARRAY . DOT NEW
    (53) newArray -> ARRAY . DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> ARRAY . DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    LEFTPAR         shift and go to state 109
    DOT             shift and go to state 110


state 57

    (2) codigo -> codigo sentencia .

    PUT             reduce using rule 2 (codigo -> codigo sentencia .)
    GETS            reduce using rule 2 (codigo -> codigo sentencia .)
    LOCAL_VAR       reduce using rule 2 (codigo -> codigo sentencia .)
    INTEGER         reduce using rule 2 (codigo -> codigo sentencia .)
    FLOAT           reduce using rule 2 (codigo -> codigo sentencia .)
    STRING          reduce using rule 2 (codigo -> codigo sentencia .)
    SET             reduce using rule 2 (codigo -> codigo sentencia .)
    IF              reduce using rule 2 (codigo -> codigo sentencia .)
    WHILE           reduce using rule 2 (codigo -> codigo sentencia .)
    UNLESS          reduce using rule 2 (codigo -> codigo sentencia .)
    INSTANCE_VAR    reduce using rule 2 (codigo -> codigo sentencia .)
    CLASS_VAR       reduce using rule 2 (codigo -> codigo sentencia .)
    GLOBAL_VAR      reduce using rule 2 (codigo -> codigo sentencia .)
    CONSTANT        reduce using rule 2 (codigo -> codigo sentencia .)
    NIL             reduce using rule 2 (codigo -> codigo sentencia .)
    SYMBOL          reduce using rule 2 (codigo -> codigo sentencia .)
    LEFT_COR        reduce using rule 2 (codigo -> codigo sentencia .)
    PERCENTW        reduce using rule 2 (codigo -> codigo sentencia .)
    ARRAY           reduce using rule 2 (codigo -> codigo sentencia .)
    $end            reduce using rule 2 (codigo -> codigo sentencia .)
    END_LOWER       reduce using rule 2 (codigo -> codigo sentencia .)
    NEWLINE         reduce using rule 2 (codigo -> codigo sentencia .)


state 58

    (156) block_assignment -> method_call block_expression .

    PUT             reduce using rule 156 (block_assignment -> method_call block_expression .)
    GETS            reduce using rule 156 (block_assignment -> method_call block_expression .)
    LOCAL_VAR       reduce using rule 156 (block_assignment -> method_call block_expression .)
    INTEGER         reduce using rule 156 (block_assignment -> method_call block_expression .)
    FLOAT           reduce using rule 156 (block_assignment -> method_call block_expression .)
    STRING          reduce using rule 156 (block_assignment -> method_call block_expression .)
    SET             reduce using rule 156 (block_assignment -> method_call block_expression .)
    IF              reduce using rule 156 (block_assignment -> method_call block_expression .)
    WHILE           reduce using rule 156 (block_assignment -> method_call block_expression .)
    UNLESS          reduce using rule 156 (block_assignment -> method_call block_expression .)
    INSTANCE_VAR    reduce using rule 156 (block_assignment -> method_call block_expression .)
    CLASS_VAR       reduce using rule 156 (block_assignment -> method_call block_expression .)
    GLOBAL_VAR      reduce using rule 156 (block_assignment -> method_call block_expression .)
    CONSTANT        reduce using rule 156 (block_assignment -> method_call block_expression .)
    NIL             reduce using rule 156 (block_assignment -> method_call block_expression .)
    SYMBOL          reduce using rule 156 (block_assignment -> method_call block_expression .)
    LEFT_COR        reduce using rule 156 (block_assignment -> method_call block_expression .)
    PERCENTW        reduce using rule 156 (block_assignment -> method_call block_expression .)
    ARRAY           reduce using rule 156 (block_assignment -> method_call block_expression .)
    $end            reduce using rule 156 (block_assignment -> method_call block_expression .)
    END_LOWER       reduce using rule 156 (block_assignment -> method_call block_expression .)
    NEWLINE         reduce using rule 156 (block_assignment -> method_call block_expression .)


state 59

    (150) block_expression -> LBRACE . expresion RBRACE
    (153) block_expression -> LBRACE . PIPE LOCAL_VAR PIPE expresion RBRACE
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PIPE            shift and go to state 112
    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 111
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 60

    (151) block_expression -> DO . expresion END
    (152) block_expression -> DO . expresion END_LOWER
    (154) block_expression -> DO . PIPE LOCAL_VAR PIPE expresion END
    (155) block_expression -> DO . PIPE LOCAL_VAR PIPE expresion END_LOWER
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PIPE            shift and go to state 120
    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 119
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 61

    (41) puts -> PUT values .

    PUT             reduce using rule 41 (puts -> PUT values .)
    GETS            reduce using rule 41 (puts -> PUT values .)
    LOCAL_VAR       reduce using rule 41 (puts -> PUT values .)
    INTEGER         reduce using rule 41 (puts -> PUT values .)
    FLOAT           reduce using rule 41 (puts -> PUT values .)
    STRING          reduce using rule 41 (puts -> PUT values .)
    SET             reduce using rule 41 (puts -> PUT values .)
    IF              reduce using rule 41 (puts -> PUT values .)
    WHILE           reduce using rule 41 (puts -> PUT values .)
    UNLESS          reduce using rule 41 (puts -> PUT values .)
    INSTANCE_VAR    reduce using rule 41 (puts -> PUT values .)
    CLASS_VAR       reduce using rule 41 (puts -> PUT values .)
    GLOBAL_VAR      reduce using rule 41 (puts -> PUT values .)
    CONSTANT        reduce using rule 41 (puts -> PUT values .)
    NIL             reduce using rule 41 (puts -> PUT values .)
    SYMBOL          reduce using rule 41 (puts -> PUT values .)
    LEFT_COR        reduce using rule 41 (puts -> PUT values .)
    PERCENTW        reduce using rule 41 (puts -> PUT values .)
    ARRAY           reduce using rule 41 (puts -> PUT values .)
    $end            reduce using rule 41 (puts -> PUT values .)
    RBRACE          reduce using rule 41 (puts -> PUT values .)
    END             reduce using rule 41 (puts -> PUT values .)
    END_LOWER       reduce using rule 41 (puts -> PUT values .)
    NEWLINE         reduce using rule 41 (puts -> PUT values .)
    ELSE            reduce using rule 41 (puts -> PUT values .)


state 62

    (30) values -> value .
    (31) values -> value . COMMA values

    PUT             reduce using rule 30 (values -> value .)
    GETS            reduce using rule 30 (values -> value .)
    LOCAL_VAR       reduce using rule 30 (values -> value .)
    INTEGER         reduce using rule 30 (values -> value .)
    FLOAT           reduce using rule 30 (values -> value .)
    STRING          reduce using rule 30 (values -> value .)
    SET             reduce using rule 30 (values -> value .)
    IF              reduce using rule 30 (values -> value .)
    WHILE           reduce using rule 30 (values -> value .)
    UNLESS          reduce using rule 30 (values -> value .)
    INSTANCE_VAR    reduce using rule 30 (values -> value .)
    CLASS_VAR       reduce using rule 30 (values -> value .)
    GLOBAL_VAR      reduce using rule 30 (values -> value .)
    CONSTANT        reduce using rule 30 (values -> value .)
    NIL             reduce using rule 30 (values -> value .)
    SYMBOL          reduce using rule 30 (values -> value .)
    LEFT_COR        reduce using rule 30 (values -> value .)
    PERCENTW        reduce using rule 30 (values -> value .)
    ARRAY           reduce using rule 30 (values -> value .)
    $end            reduce using rule 30 (values -> value .)
    END_LOWER       reduce using rule 30 (values -> value .)
    NEWLINE         reduce using rule 30 (values -> value .)
    RIGHT_COR       reduce using rule 30 (values -> value .)
    RIGHTPAR        reduce using rule 30 (values -> value .)
    RBRACE          reduce using rule 30 (values -> value .)
    END             reduce using rule 30 (values -> value .)
    ELSE            reduce using rule 30 (values -> value .)
    COMMA           shift and go to state 121


state 63

    (24) value -> var .

    COMMA           reduce using rule 24 (value -> var .)
    PUT             reduce using rule 24 (value -> var .)
    GETS            reduce using rule 24 (value -> var .)
    LOCAL_VAR       reduce using rule 24 (value -> var .)
    INTEGER         reduce using rule 24 (value -> var .)
    FLOAT           reduce using rule 24 (value -> var .)
    STRING          reduce using rule 24 (value -> var .)
    SET             reduce using rule 24 (value -> var .)
    IF              reduce using rule 24 (value -> var .)
    WHILE           reduce using rule 24 (value -> var .)
    UNLESS          reduce using rule 24 (value -> var .)
    INSTANCE_VAR    reduce using rule 24 (value -> var .)
    CLASS_VAR       reduce using rule 24 (value -> var .)
    GLOBAL_VAR      reduce using rule 24 (value -> var .)
    CONSTANT        reduce using rule 24 (value -> var .)
    NIL             reduce using rule 24 (value -> var .)
    SYMBOL          reduce using rule 24 (value -> var .)
    LEFT_COR        reduce using rule 24 (value -> var .)
    PERCENTW        reduce using rule 24 (value -> var .)
    ARRAY           reduce using rule 24 (value -> var .)
    $end            reduce using rule 24 (value -> var .)
    END_LOWER       reduce using rule 24 (value -> var .)
    NEWLINE         reduce using rule 24 (value -> var .)
    RIGHT_COR       reduce using rule 24 (value -> var .)
    RIGHTPAR        reduce using rule 24 (value -> var .)
    RBRACE          reduce using rule 24 (value -> var .)
    SPACE           reduce using rule 24 (value -> var .)
    END             reduce using rule 24 (value -> var .)
    ELSE            reduce using rule 24 (value -> var .)


state 64

    (25) value -> STRING .

    COMMA           reduce using rule 25 (value -> STRING .)
    PUT             reduce using rule 25 (value -> STRING .)
    GETS            reduce using rule 25 (value -> STRING .)
    LOCAL_VAR       reduce using rule 25 (value -> STRING .)
    INTEGER         reduce using rule 25 (value -> STRING .)
    FLOAT           reduce using rule 25 (value -> STRING .)
    STRING          reduce using rule 25 (value -> STRING .)
    SET             reduce using rule 25 (value -> STRING .)
    IF              reduce using rule 25 (value -> STRING .)
    WHILE           reduce using rule 25 (value -> STRING .)
    UNLESS          reduce using rule 25 (value -> STRING .)
    INSTANCE_VAR    reduce using rule 25 (value -> STRING .)
    CLASS_VAR       reduce using rule 25 (value -> STRING .)
    GLOBAL_VAR      reduce using rule 25 (value -> STRING .)
    CONSTANT        reduce using rule 25 (value -> STRING .)
    NIL             reduce using rule 25 (value -> STRING .)
    SYMBOL          reduce using rule 25 (value -> STRING .)
    LEFT_COR        reduce using rule 25 (value -> STRING .)
    PERCENTW        reduce using rule 25 (value -> STRING .)
    ARRAY           reduce using rule 25 (value -> STRING .)
    $end            reduce using rule 25 (value -> STRING .)
    END_LOWER       reduce using rule 25 (value -> STRING .)
    NEWLINE         reduce using rule 25 (value -> STRING .)
    RIGHT_COR       reduce using rule 25 (value -> STRING .)
    RIGHTPAR        reduce using rule 25 (value -> STRING .)
    RBRACE          reduce using rule 25 (value -> STRING .)
    SPACE           reduce using rule 25 (value -> STRING .)
    END             reduce using rule 25 (value -> STRING .)
    ELSE            reduce using rule 25 (value -> STRING .)


state 65

    (36) num -> FLOAT .

    COMMA           reduce using rule 36 (num -> FLOAT .)
    PUT             reduce using rule 36 (num -> FLOAT .)
    GETS            reduce using rule 36 (num -> FLOAT .)
    LOCAL_VAR       reduce using rule 36 (num -> FLOAT .)
    INTEGER         reduce using rule 36 (num -> FLOAT .)
    FLOAT           reduce using rule 36 (num -> FLOAT .)
    STRING          reduce using rule 36 (num -> FLOAT .)
    SET             reduce using rule 36 (num -> FLOAT .)
    IF              reduce using rule 36 (num -> FLOAT .)
    WHILE           reduce using rule 36 (num -> FLOAT .)
    UNLESS          reduce using rule 36 (num -> FLOAT .)
    INSTANCE_VAR    reduce using rule 36 (num -> FLOAT .)
    CLASS_VAR       reduce using rule 36 (num -> FLOAT .)
    GLOBAL_VAR      reduce using rule 36 (num -> FLOAT .)
    CONSTANT        reduce using rule 36 (num -> FLOAT .)
    NIL             reduce using rule 36 (num -> FLOAT .)
    SYMBOL          reduce using rule 36 (num -> FLOAT .)
    LEFT_COR        reduce using rule 36 (num -> FLOAT .)
    PERCENTW        reduce using rule 36 (num -> FLOAT .)
    ARRAY           reduce using rule 36 (num -> FLOAT .)
    $end            reduce using rule 36 (num -> FLOAT .)
    END_LOWER       reduce using rule 36 (num -> FLOAT .)
    NEWLINE         reduce using rule 36 (num -> FLOAT .)
    RIGHT_COR       reduce using rule 36 (num -> FLOAT .)
    GREATER         reduce using rule 36 (num -> FLOAT .)
    LESS            reduce using rule 36 (num -> FLOAT .)
    GREATER_EQUAL   reduce using rule 36 (num -> FLOAT .)
    LESS_EQUAL      reduce using rule 36 (num -> FLOAT .)
    EQUAL           reduce using rule 36 (num -> FLOAT .)
    NOT_EQUAL       reduce using rule 36 (num -> FLOAT .)
    COMPARE         reduce using rule 36 (num -> FLOAT .)
    RIGHTPAR        reduce using rule 36 (num -> FLOAT .)
    PLUS            reduce using rule 36 (num -> FLOAT .)
    MINUS           reduce using rule 36 (num -> FLOAT .)
    MULTIPLY        reduce using rule 36 (num -> FLOAT .)
    DIVIDE          reduce using rule 36 (num -> FLOAT .)
    MODULO          reduce using rule 36 (num -> FLOAT .)
    EXPONENT        reduce using rule 36 (num -> FLOAT .)
    RBRACE          reduce using rule 36 (num -> FLOAT .)
    SPACE           reduce using rule 36 (num -> FLOAT .)
    END             reduce using rule 36 (num -> FLOAT .)
    ELSE            reduce using rule 36 (num -> FLOAT .)
    AND             reduce using rule 36 (num -> FLOAT .)
    OR              reduce using rule 36 (num -> FLOAT .)
    AND_RESERVED    reduce using rule 36 (num -> FLOAT .)
    OR_RESERVED     reduce using rule 36 (num -> FLOAT .)


state 66

    (37) num -> INTEGER .

    COMMA           reduce using rule 37 (num -> INTEGER .)
    PUT             reduce using rule 37 (num -> INTEGER .)
    GETS            reduce using rule 37 (num -> INTEGER .)
    LOCAL_VAR       reduce using rule 37 (num -> INTEGER .)
    INTEGER         reduce using rule 37 (num -> INTEGER .)
    FLOAT           reduce using rule 37 (num -> INTEGER .)
    STRING          reduce using rule 37 (num -> INTEGER .)
    SET             reduce using rule 37 (num -> INTEGER .)
    IF              reduce using rule 37 (num -> INTEGER .)
    WHILE           reduce using rule 37 (num -> INTEGER .)
    UNLESS          reduce using rule 37 (num -> INTEGER .)
    INSTANCE_VAR    reduce using rule 37 (num -> INTEGER .)
    CLASS_VAR       reduce using rule 37 (num -> INTEGER .)
    GLOBAL_VAR      reduce using rule 37 (num -> INTEGER .)
    CONSTANT        reduce using rule 37 (num -> INTEGER .)
    NIL             reduce using rule 37 (num -> INTEGER .)
    SYMBOL          reduce using rule 37 (num -> INTEGER .)
    LEFT_COR        reduce using rule 37 (num -> INTEGER .)
    PERCENTW        reduce using rule 37 (num -> INTEGER .)
    ARRAY           reduce using rule 37 (num -> INTEGER .)
    $end            reduce using rule 37 (num -> INTEGER .)
    END_LOWER       reduce using rule 37 (num -> INTEGER .)
    NEWLINE         reduce using rule 37 (num -> INTEGER .)
    RIGHT_COR       reduce using rule 37 (num -> INTEGER .)
    GREATER         reduce using rule 37 (num -> INTEGER .)
    LESS            reduce using rule 37 (num -> INTEGER .)
    GREATER_EQUAL   reduce using rule 37 (num -> INTEGER .)
    LESS_EQUAL      reduce using rule 37 (num -> INTEGER .)
    EQUAL           reduce using rule 37 (num -> INTEGER .)
    NOT_EQUAL       reduce using rule 37 (num -> INTEGER .)
    COMPARE         reduce using rule 37 (num -> INTEGER .)
    RIGHTPAR        reduce using rule 37 (num -> INTEGER .)
    PLUS            reduce using rule 37 (num -> INTEGER .)
    MINUS           reduce using rule 37 (num -> INTEGER .)
    MULTIPLY        reduce using rule 37 (num -> INTEGER .)
    DIVIDE          reduce using rule 37 (num -> INTEGER .)
    MODULO          reduce using rule 37 (num -> INTEGER .)
    EXPONENT        reduce using rule 37 (num -> INTEGER .)
    RBRACE          reduce using rule 37 (num -> INTEGER .)
    SPACE           reduce using rule 37 (num -> INTEGER .)
    END             reduce using rule 37 (num -> INTEGER .)
    ELSE            reduce using rule 37 (num -> INTEGER .)
    AND             reduce using rule 37 (num -> INTEGER .)
    OR              reduce using rule 37 (num -> INTEGER .)
    AND_RESERVED    reduce using rule 37 (num -> INTEGER .)
    OR_RESERVED     reduce using rule 37 (num -> INTEGER .)


state 67

    (32) var -> LOCAL_VAR .

    COMMA           reduce using rule 32 (var -> LOCAL_VAR .)
    PUT             reduce using rule 32 (var -> LOCAL_VAR .)
    GETS            reduce using rule 32 (var -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 32 (var -> LOCAL_VAR .)
    INTEGER         reduce using rule 32 (var -> LOCAL_VAR .)
    FLOAT           reduce using rule 32 (var -> LOCAL_VAR .)
    STRING          reduce using rule 32 (var -> LOCAL_VAR .)
    SET             reduce using rule 32 (var -> LOCAL_VAR .)
    IF              reduce using rule 32 (var -> LOCAL_VAR .)
    WHILE           reduce using rule 32 (var -> LOCAL_VAR .)
    UNLESS          reduce using rule 32 (var -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 32 (var -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 32 (var -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 32 (var -> LOCAL_VAR .)
    CONSTANT        reduce using rule 32 (var -> LOCAL_VAR .)
    NIL             reduce using rule 32 (var -> LOCAL_VAR .)
    SYMBOL          reduce using rule 32 (var -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 32 (var -> LOCAL_VAR .)
    PERCENTW        reduce using rule 32 (var -> LOCAL_VAR .)
    ARRAY           reduce using rule 32 (var -> LOCAL_VAR .)
    $end            reduce using rule 32 (var -> LOCAL_VAR .)
    END_LOWER       reduce using rule 32 (var -> LOCAL_VAR .)
    NEWLINE         reduce using rule 32 (var -> LOCAL_VAR .)
    RIGHT_COR       reduce using rule 32 (var -> LOCAL_VAR .)
    GREATER         reduce using rule 32 (var -> LOCAL_VAR .)
    LESS            reduce using rule 32 (var -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 32 (var -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 32 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 32 (var -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 32 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 32 (var -> LOCAL_VAR .)
    RIGHTPAR        reduce using rule 32 (var -> LOCAL_VAR .)
    RBRACE          reduce using rule 32 (var -> LOCAL_VAR .)
    SPACE           reduce using rule 32 (var -> LOCAL_VAR .)
    END             reduce using rule 32 (var -> LOCAL_VAR .)
    ELSE            reduce using rule 32 (var -> LOCAL_VAR .)
    AND             reduce using rule 32 (var -> LOCAL_VAR .)
    OR              reduce using rule 32 (var -> LOCAL_VAR .)
    AND_RESERVED    reduce using rule 32 (var -> LOCAL_VAR .)
    OR_RESERVED     reduce using rule 32 (var -> LOCAL_VAR .)


state 68

    (33) var -> INSTANCE_VAR .

    COMMA           reduce using rule 33 (var -> INSTANCE_VAR .)
    PUT             reduce using rule 33 (var -> INSTANCE_VAR .)
    GETS            reduce using rule 33 (var -> INSTANCE_VAR .)
    LOCAL_VAR       reduce using rule 33 (var -> INSTANCE_VAR .)
    INTEGER         reduce using rule 33 (var -> INSTANCE_VAR .)
    FLOAT           reduce using rule 33 (var -> INSTANCE_VAR .)
    STRING          reduce using rule 33 (var -> INSTANCE_VAR .)
    SET             reduce using rule 33 (var -> INSTANCE_VAR .)
    IF              reduce using rule 33 (var -> INSTANCE_VAR .)
    WHILE           reduce using rule 33 (var -> INSTANCE_VAR .)
    UNLESS          reduce using rule 33 (var -> INSTANCE_VAR .)
    INSTANCE_VAR    reduce using rule 33 (var -> INSTANCE_VAR .)
    CLASS_VAR       reduce using rule 33 (var -> INSTANCE_VAR .)
    GLOBAL_VAR      reduce using rule 33 (var -> INSTANCE_VAR .)
    CONSTANT        reduce using rule 33 (var -> INSTANCE_VAR .)
    NIL             reduce using rule 33 (var -> INSTANCE_VAR .)
    SYMBOL          reduce using rule 33 (var -> INSTANCE_VAR .)
    LEFT_COR        reduce using rule 33 (var -> INSTANCE_VAR .)
    PERCENTW        reduce using rule 33 (var -> INSTANCE_VAR .)
    ARRAY           reduce using rule 33 (var -> INSTANCE_VAR .)
    $end            reduce using rule 33 (var -> INSTANCE_VAR .)
    END_LOWER       reduce using rule 33 (var -> INSTANCE_VAR .)
    NEWLINE         reduce using rule 33 (var -> INSTANCE_VAR .)
    RIGHT_COR       reduce using rule 33 (var -> INSTANCE_VAR .)
    GREATER         reduce using rule 33 (var -> INSTANCE_VAR .)
    LESS            reduce using rule 33 (var -> INSTANCE_VAR .)
    GREATER_EQUAL   reduce using rule 33 (var -> INSTANCE_VAR .)
    LESS_EQUAL      reduce using rule 33 (var -> INSTANCE_VAR .)
    EQUAL           reduce using rule 33 (var -> INSTANCE_VAR .)
    NOT_EQUAL       reduce using rule 33 (var -> INSTANCE_VAR .)
    COMPARE         reduce using rule 33 (var -> INSTANCE_VAR .)
    RIGHTPAR        reduce using rule 33 (var -> INSTANCE_VAR .)
    RBRACE          reduce using rule 33 (var -> INSTANCE_VAR .)
    SPACE           reduce using rule 33 (var -> INSTANCE_VAR .)
    END             reduce using rule 33 (var -> INSTANCE_VAR .)
    ELSE            reduce using rule 33 (var -> INSTANCE_VAR .)
    AND             reduce using rule 33 (var -> INSTANCE_VAR .)
    OR              reduce using rule 33 (var -> INSTANCE_VAR .)
    AND_RESERVED    reduce using rule 33 (var -> INSTANCE_VAR .)
    OR_RESERVED     reduce using rule 33 (var -> INSTANCE_VAR .)


state 69

    (34) var -> CLASS_VAR .

    COMMA           reduce using rule 34 (var -> CLASS_VAR .)
    PUT             reduce using rule 34 (var -> CLASS_VAR .)
    GETS            reduce using rule 34 (var -> CLASS_VAR .)
    LOCAL_VAR       reduce using rule 34 (var -> CLASS_VAR .)
    INTEGER         reduce using rule 34 (var -> CLASS_VAR .)
    FLOAT           reduce using rule 34 (var -> CLASS_VAR .)
    STRING          reduce using rule 34 (var -> CLASS_VAR .)
    SET             reduce using rule 34 (var -> CLASS_VAR .)
    IF              reduce using rule 34 (var -> CLASS_VAR .)
    WHILE           reduce using rule 34 (var -> CLASS_VAR .)
    UNLESS          reduce using rule 34 (var -> CLASS_VAR .)
    INSTANCE_VAR    reduce using rule 34 (var -> CLASS_VAR .)
    CLASS_VAR       reduce using rule 34 (var -> CLASS_VAR .)
    GLOBAL_VAR      reduce using rule 34 (var -> CLASS_VAR .)
    CONSTANT        reduce using rule 34 (var -> CLASS_VAR .)
    NIL             reduce using rule 34 (var -> CLASS_VAR .)
    SYMBOL          reduce using rule 34 (var -> CLASS_VAR .)
    LEFT_COR        reduce using rule 34 (var -> CLASS_VAR .)
    PERCENTW        reduce using rule 34 (var -> CLASS_VAR .)
    ARRAY           reduce using rule 34 (var -> CLASS_VAR .)
    $end            reduce using rule 34 (var -> CLASS_VAR .)
    END_LOWER       reduce using rule 34 (var -> CLASS_VAR .)
    NEWLINE         reduce using rule 34 (var -> CLASS_VAR .)
    RIGHT_COR       reduce using rule 34 (var -> CLASS_VAR .)
    GREATER         reduce using rule 34 (var -> CLASS_VAR .)
    LESS            reduce using rule 34 (var -> CLASS_VAR .)
    GREATER_EQUAL   reduce using rule 34 (var -> CLASS_VAR .)
    LESS_EQUAL      reduce using rule 34 (var -> CLASS_VAR .)
    EQUAL           reduce using rule 34 (var -> CLASS_VAR .)
    NOT_EQUAL       reduce using rule 34 (var -> CLASS_VAR .)
    COMPARE         reduce using rule 34 (var -> CLASS_VAR .)
    RIGHTPAR        reduce using rule 34 (var -> CLASS_VAR .)
    RBRACE          reduce using rule 34 (var -> CLASS_VAR .)
    SPACE           reduce using rule 34 (var -> CLASS_VAR .)
    END             reduce using rule 34 (var -> CLASS_VAR .)
    ELSE            reduce using rule 34 (var -> CLASS_VAR .)
    AND             reduce using rule 34 (var -> CLASS_VAR .)
    OR              reduce using rule 34 (var -> CLASS_VAR .)
    AND_RESERVED    reduce using rule 34 (var -> CLASS_VAR .)
    OR_RESERVED     reduce using rule 34 (var -> CLASS_VAR .)


state 70

    (35) var -> GLOBAL_VAR .

    COMMA           reduce using rule 35 (var -> GLOBAL_VAR .)
    PUT             reduce using rule 35 (var -> GLOBAL_VAR .)
    GETS            reduce using rule 35 (var -> GLOBAL_VAR .)
    LOCAL_VAR       reduce using rule 35 (var -> GLOBAL_VAR .)
    INTEGER         reduce using rule 35 (var -> GLOBAL_VAR .)
    FLOAT           reduce using rule 35 (var -> GLOBAL_VAR .)
    STRING          reduce using rule 35 (var -> GLOBAL_VAR .)
    SET             reduce using rule 35 (var -> GLOBAL_VAR .)
    IF              reduce using rule 35 (var -> GLOBAL_VAR .)
    WHILE           reduce using rule 35 (var -> GLOBAL_VAR .)
    UNLESS          reduce using rule 35 (var -> GLOBAL_VAR .)
    INSTANCE_VAR    reduce using rule 35 (var -> GLOBAL_VAR .)
    CLASS_VAR       reduce using rule 35 (var -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 35 (var -> GLOBAL_VAR .)
    CONSTANT        reduce using rule 35 (var -> GLOBAL_VAR .)
    NIL             reduce using rule 35 (var -> GLOBAL_VAR .)
    SYMBOL          reduce using rule 35 (var -> GLOBAL_VAR .)
    LEFT_COR        reduce using rule 35 (var -> GLOBAL_VAR .)
    PERCENTW        reduce using rule 35 (var -> GLOBAL_VAR .)
    ARRAY           reduce using rule 35 (var -> GLOBAL_VAR .)
    $end            reduce using rule 35 (var -> GLOBAL_VAR .)
    END_LOWER       reduce using rule 35 (var -> GLOBAL_VAR .)
    NEWLINE         reduce using rule 35 (var -> GLOBAL_VAR .)
    RIGHT_COR       reduce using rule 35 (var -> GLOBAL_VAR .)
    GREATER         reduce using rule 35 (var -> GLOBAL_VAR .)
    LESS            reduce using rule 35 (var -> GLOBAL_VAR .)
    GREATER_EQUAL   reduce using rule 35 (var -> GLOBAL_VAR .)
    LESS_EQUAL      reduce using rule 35 (var -> GLOBAL_VAR .)
    EQUAL           reduce using rule 35 (var -> GLOBAL_VAR .)
    NOT_EQUAL       reduce using rule 35 (var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 35 (var -> GLOBAL_VAR .)
    RIGHTPAR        reduce using rule 35 (var -> GLOBAL_VAR .)
    RBRACE          reduce using rule 35 (var -> GLOBAL_VAR .)
    SPACE           reduce using rule 35 (var -> GLOBAL_VAR .)
    END             reduce using rule 35 (var -> GLOBAL_VAR .)
    ELSE            reduce using rule 35 (var -> GLOBAL_VAR .)
    AND             reduce using rule 35 (var -> GLOBAL_VAR .)
    OR              reduce using rule 35 (var -> GLOBAL_VAR .)
    AND_RESERVED    reduce using rule 35 (var -> GLOBAL_VAR .)
    OR_RESERVED     reduce using rule 35 (var -> GLOBAL_VAR .)


state 71

    (38) gets -> GETS DOT . CHOMP DOT TO_F
    (39) gets -> GETS DOT . CHOMP DOT TO_I
    (40) gets -> GETS DOT . CHOMP

    CHOMP           shift and go to state 122


state 72

    (131) set_operations -> set_operations set_binary_operators . set_expression
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR

    SET             shift and go to state 43

    set_expression                 shift and go to state 123

state 73

    (133) set_binary_operators -> PLUS .

    SET             reduce using rule 133 (set_binary_operators -> PLUS .)


state 74

    (134) set_binary_operators -> MINUS .

    SET             reduce using rule 134 (set_binary_operators -> MINUS .)


state 75

    (135) set_binary_operators -> AMPERSAND .

    SET             reduce using rule 135 (set_binary_operators -> AMPERSAND .)


state 76

    (136) set_binary_operators -> PIPE .

    SET             reduce using rule 136 (set_binary_operators -> PIPE .)


state 77

    (137) set_binary_operators -> CARET .

    SET             reduce using rule 137 (set_binary_operators -> CARET .)


state 78

    (94) method_call -> LOCAL_VAR LEFTPAR . values RIGHTPAR
    (95) method_call -> LOCAL_VAR LEFTPAR . RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 125
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 124
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 79

    (159) proc_call -> LOCAL_VAR DOT . CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> LOCAL_VAR DOT . LEFTPAR values RIGHTPAR
    (162) proc_call -> LOCAL_VAR DOT . CALL LEFTPAR RIGHTPAR
    (163) proc_call -> LOCAL_VAR DOT . LEFTPAR RIGHTPAR
    (76) to_string -> LOCAL_VAR DOT . TO_S

    CALL            shift and go to state 126
    LEFTPAR         shift and go to state 127
    TO_S            shift and go to state 128


state 80

    (161) proc_call -> LOCAL_VAR LEFT_COR . values RIGHT_COR
    (164) proc_call -> LOCAL_VAR LEFT_COR . RIGHT_COR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 130
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 129
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 81

    (120) declaraciones -> LOCAL_VAR ASSIGN . arithmetic_production
    (82) hash_var -> LOCAL_VAR ASSIGN . LBRACE hash_values RBRACE
    (83) hash_var -> LOCAL_VAR ASSIGN . LBRACE RBRACE
    (88) variable_declaration -> LOCAL_VAR ASSIGN . value
    (89) store_conditional_result -> LOCAL_VAR ASSIGN . condiciones
    (132) declare_data_structures -> LOCAL_VAR ASSIGN . set_expression
    (46) var_arreglo -> LOCAL_VAR ASSIGN . array
    (81) declaracion_concatenar_string -> LOCAL_VAR ASSIGN . concatenar_string
    (158) proc_assignment -> LOCAL_VAR ASSIGN . proc_expression
    (140) arithmetic_production -> . num
    (141) arithmetic_production -> . LOCAL_VAR
    (142) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (143) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (77) concatenar_string -> . STRING PLUS STRING
    (78) concatenar_string -> . STRING PLUS LOCAL_VAR
    (79) concatenar_string -> . LOCAL_VAR PLUS STRING
    (80) concatenar_string -> . LOCAL_VAR PLUS LOCAL_VAR
    (157) proc_expression -> . PROC DOT NEW block_expression
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    LBRACE          shift and go to state 133
    LOCAL_VAR       shift and go to state 131
    STRING          shift and go to state 142
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    SET             shift and go to state 43
    PROC            shift and go to state 143
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    arithmetic_production          shift and go to state 132
    value                          shift and go to state 134
    condiciones                    shift and go to state 135
    set_expression                 shift and go to state 136
    array                          shift and go to state 137
    concatenar_string              shift and go to state 138
    proc_expression                shift and go to state 139
    num                            shift and go to state 140
    var                            shift and go to state 141
    condicion                      shift and go to state 91
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41

state 82

    (47) array_explicito -> LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 144


state 83

    (48) array_explicito -> LEFT_COR RIGHT_COR .

    PUT             reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    SET             reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    IF              reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    $end            reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    NEWLINE         reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)
    RIGHTPAR        reduce using rule 48 (array_explicito -> LEFT_COR RIGHT_COR .)


state 84

    (55) acceder_arreglo -> var_arreglo LEFT_COR . INTEGER RIGHT_COR

    INTEGER         shift and go to state 145


state 85

    (126) comparador -> value EQUAL . value
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 146
    num                            shift and go to state 51
    var                            shift and go to state 63

state 86

    (127) comparador -> value COMPARE . value
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 147
    num                            shift and go to state 51
    var                            shift and go to state 63

state 87

    (87) hash_operations -> hash_access ASSIGN . value
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 148
    num                            shift and go to state 51
    var                            shift and go to state 63

state 88

    (128) set_expression -> SET DOT . NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR

    NEW             shift and go to state 149


state 89

    (129) set_expression -> SET LEFT_COR . values RIGHT_COR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 150
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 90

    (56) ifStatement -> IF condiciones . NEWLINE codigo END_LOWER
    (57) ifStatement -> IF condiciones . NEWLINE codigo NEWLINE else_statement END_LOWER
    (59) condiciones -> condiciones . conectores condiciones
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL

    NEWLINE         shift and go to state 151
    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157

    conectores                     shift and go to state 152

state 91

    (58) condiciones -> condicion .

    NEWLINE         reduce using rule 58 (condiciones -> condicion .)
    AND             reduce using rule 58 (condiciones -> condicion .)
    OR              reduce using rule 58 (condiciones -> condicion .)
    AND_RESERVED    reduce using rule 58 (condiciones -> condicion .)
    OR_RESERVED     reduce using rule 58 (condiciones -> condicion .)
    EQUAL           reduce using rule 58 (condiciones -> condicion .)
    PUT             reduce using rule 58 (condiciones -> condicion .)
    GETS            reduce using rule 58 (condiciones -> condicion .)
    LOCAL_VAR       reduce using rule 58 (condiciones -> condicion .)
    INTEGER         reduce using rule 58 (condiciones -> condicion .)
    FLOAT           reduce using rule 58 (condiciones -> condicion .)
    STRING          reduce using rule 58 (condiciones -> condicion .)
    SET             reduce using rule 58 (condiciones -> condicion .)
    IF              reduce using rule 58 (condiciones -> condicion .)
    WHILE           reduce using rule 58 (condiciones -> condicion .)
    UNLESS          reduce using rule 58 (condiciones -> condicion .)
    INSTANCE_VAR    reduce using rule 58 (condiciones -> condicion .)
    CLASS_VAR       reduce using rule 58 (condiciones -> condicion .)
    GLOBAL_VAR      reduce using rule 58 (condiciones -> condicion .)
    CONSTANT        reduce using rule 58 (condiciones -> condicion .)
    NIL             reduce using rule 58 (condiciones -> condicion .)
    SYMBOL          reduce using rule 58 (condiciones -> condicion .)
    LEFT_COR        reduce using rule 58 (condiciones -> condicion .)
    PERCENTW        reduce using rule 58 (condiciones -> condicion .)
    ARRAY           reduce using rule 58 (condiciones -> condicion .)
    $end            reduce using rule 58 (condiciones -> condicion .)
    END_LOWER       reduce using rule 58 (condiciones -> condicion .)
    RBRACE          reduce using rule 58 (condiciones -> condicion .)
    END             reduce using rule 58 (condiciones -> condicion .)
    ELSE            reduce using rule 58 (condiciones -> condicion .)


state 92

    (65) condicion -> num . operComp num
    (67) condicion -> num . operComp var
    (68) operComp -> . GREATER
    (69) operComp -> . LESS
    (70) operComp -> . GREATER_EQUAL
    (71) operComp -> . LESS_EQUAL
    (72) operComp -> . EQUAL
    (73) operComp -> . NOT_EQUAL
    (74) operComp -> . COMPARE

    GREATER         shift and go to state 159
    LESS            shift and go to state 160
    GREATER_EQUAL   shift and go to state 161
    LESS_EQUAL      shift and go to state 162
    EQUAL           shift and go to state 163
    NOT_EQUAL       shift and go to state 164
    COMPARE         shift and go to state 165

    operComp                       shift and go to state 158

state 93

    (66) condicion -> var . operComp num
    (68) operComp -> . GREATER
    (69) operComp -> . LESS
    (70) operComp -> . GREATER_EQUAL
    (71) operComp -> . LESS_EQUAL
    (72) operComp -> . EQUAL
    (73) operComp -> . NOT_EQUAL
    (74) operComp -> . COMPARE

    GREATER         shift and go to state 159
    LESS            shift and go to state 160
    GREATER_EQUAL   shift and go to state 161
    LESS_EQUAL      shift and go to state 162
    EQUAL           shift and go to state 163
    NOT_EQUAL       shift and go to state 164
    COMPARE         shift and go to state 165

    operComp                       shift and go to state 166

state 94

    (92) while_statement -> WHILE condiciones . codigo END_LOWER
    (59) condiciones -> condiciones . conectores condiciones
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157
    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    codigo                         shift and go to state 167
    conectores                     shift and go to state 152
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 95

    (138) unless_expression -> UNLESS boolean_expression . THEN expresion END
    (139) unless_expression -> UNLESS boolean_expression . THEN expresion ELSE expresion END

    THEN            shift and go to state 168


state 96

    (97) boolean_expression -> expression . GREATER expression
    (98) boolean_expression -> expression . LESS expression
    (99) boolean_expression -> expression . GREATER_EQUAL expression
    (100) boolean_expression -> expression . LESS_EQUAL expression
    (101) boolean_expression -> expression . EQUAL expression
    (102) boolean_expression -> expression . NOT_EQUAL expression

    GREATER         shift and go to state 169
    LESS            shift and go to state 170
    GREATER_EQUAL   shift and go to state 171
    LESS_EQUAL      shift and go to state 172
    EQUAL           shift and go to state 173
    NOT_EQUAL       shift and go to state 174


state 97

    (103) boolean_expression -> boolean_value .

    THEN            reduce using rule 103 (boolean_expression -> boolean_value .)


state 98

    (106) expression -> INTEGER .

    GREATER         reduce using rule 106 (expression -> INTEGER .)
    LESS            reduce using rule 106 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 106 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 106 (expression -> INTEGER .)
    EQUAL           reduce using rule 106 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 106 (expression -> INTEGER .)
    THEN            reduce using rule 106 (expression -> INTEGER .)


state 99

    (107) expression -> FLOAT .

    GREATER         reduce using rule 107 (expression -> FLOAT .)
    LESS            reduce using rule 107 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 107 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 107 (expression -> FLOAT .)
    EQUAL           reduce using rule 107 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 107 (expression -> FLOAT .)
    THEN            reduce using rule 107 (expression -> FLOAT .)


state 100

    (109) expression -> STRING .

    GREATER         reduce using rule 109 (expression -> STRING .)
    LESS            reduce using rule 109 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 109 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 109 (expression -> STRING .)
    EQUAL           reduce using rule 109 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 109 (expression -> STRING .)
    THEN            reduce using rule 109 (expression -> STRING .)


state 101

    (104) boolean_value -> TRUE .

    THEN            reduce using rule 104 (boolean_value -> TRUE .)


state 102

    (105) boolean_value -> FALSE .

    THEN            reduce using rule 105 (boolean_value -> FALSE .)


state 103

    (110) variable -> LOCAL_VAR .

    GREATER         reduce using rule 110 (variable -> LOCAL_VAR .)
    LESS            reduce using rule 110 (variable -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 110 (variable -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 110 (variable -> LOCAL_VAR .)
    EQUAL           reduce using rule 110 (variable -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 110 (variable -> LOCAL_VAR .)
    THEN            reduce using rule 110 (variable -> LOCAL_VAR .)


state 104

    (111) variable -> INSTANCE_VAR .

    GREATER         reduce using rule 111 (variable -> INSTANCE_VAR .)
    LESS            reduce using rule 111 (variable -> INSTANCE_VAR .)
    GREATER_EQUAL   reduce using rule 111 (variable -> INSTANCE_VAR .)
    LESS_EQUAL      reduce using rule 111 (variable -> INSTANCE_VAR .)
    EQUAL           reduce using rule 111 (variable -> INSTANCE_VAR .)
    NOT_EQUAL       reduce using rule 111 (variable -> INSTANCE_VAR .)
    THEN            reduce using rule 111 (variable -> INSTANCE_VAR .)


state 105

    (112) variable -> CLASS_VAR .

    GREATER         reduce using rule 112 (variable -> CLASS_VAR .)
    LESS            reduce using rule 112 (variable -> CLASS_VAR .)
    GREATER_EQUAL   reduce using rule 112 (variable -> CLASS_VAR .)
    LESS_EQUAL      reduce using rule 112 (variable -> CLASS_VAR .)
    EQUAL           reduce using rule 112 (variable -> CLASS_VAR .)
    NOT_EQUAL       reduce using rule 112 (variable -> CLASS_VAR .)
    THEN            reduce using rule 112 (variable -> CLASS_VAR .)


state 106

    (113) variable -> GLOBAL_VAR .

    GREATER         reduce using rule 113 (variable -> GLOBAL_VAR .)
    LESS            reduce using rule 113 (variable -> GLOBAL_VAR .)
    GREATER_EQUAL   reduce using rule 113 (variable -> GLOBAL_VAR .)
    LESS_EQUAL      reduce using rule 113 (variable -> GLOBAL_VAR .)
    EQUAL           reduce using rule 113 (variable -> GLOBAL_VAR .)
    NOT_EQUAL       reduce using rule 113 (variable -> GLOBAL_VAR .)
    THEN            reduce using rule 113 (variable -> GLOBAL_VAR .)


state 107

    (86) hash_access -> var LBRACE . value RBRACE
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    var                            shift and go to state 63
    value                          shift and go to state 175
    num                            shift and go to state 51

state 108

    (49) array_implicito -> PERCENTW LEFT_COR . values_space RIGHT_COR
    (50) array_implicito -> PERCENTW LEFT_COR . RIGHT_COR
    (28) values_space -> . value SPACE values_space
    (29) values_space -> . value
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHT_COR       shift and go to state 177
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values_space                   shift and go to state 176
    value                          shift and go to state 178
    num                            shift and go to state 51
    var                            shift and go to state 63

state 109

    (51) array_creation -> ARRAY LEFTPAR . array_explicito RIGHTPAR
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR

    LEFT_COR        shift and go to state 26

    array_explicito                shift and go to state 179

state 110

    (52) newArray -> ARRAY DOT . NEW
    (53) newArray -> ARRAY DOT . NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> ARRAY DOT . NEW LEFTPAR INTEGER COMMA values RIGHTPAR

    NEW             shift and go to state 180


state 111

    (150) block_expression -> LBRACE expresion . RBRACE

    RBRACE          shift and go to state 181


state 112

    (153) block_expression -> LBRACE PIPE . LOCAL_VAR PIPE expresion RBRACE

    LOCAL_VAR       shift and go to state 182


state 113

    (123) expresion -> puts .

    RBRACE          reduce using rule 123 (expresion -> puts .)
    END             reduce using rule 123 (expresion -> puts .)
    END_LOWER       reduce using rule 123 (expresion -> puts .)
    ELSE            reduce using rule 123 (expresion -> puts .)


state 114

    (124) expresion -> gets .

    RBRACE          reduce using rule 124 (expresion -> gets .)
    END             reduce using rule 124 (expresion -> gets .)
    END_LOWER       reduce using rule 124 (expresion -> gets .)
    ELSE            reduce using rule 124 (expresion -> gets .)


state 115

    (125) expresion -> print_statement .

    RBRACE          reduce using rule 125 (expresion -> print_statement .)
    END             reduce using rule 125 (expresion -> print_statement .)
    END_LOWER       reduce using rule 125 (expresion -> print_statement .)
    ELSE            reduce using rule 125 (expresion -> print_statement .)


state 116

    (165) expresion -> condition_with_connectors .

    RBRACE          reduce using rule 165 (expresion -> condition_with_connectors .)
    END             reduce using rule 165 (expresion -> condition_with_connectors .)
    END_LOWER       reduce using rule 165 (expresion -> condition_with_connectors .)
    ELSE            reduce using rule 165 (expresion -> condition_with_connectors .)


state 117

    (41) puts -> PUT . values
    (96) print_statement -> PUT . LEFTPAR values RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    LEFTPAR         shift and go to state 183
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 61
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 118

    (93) condition_with_connectors -> condiciones . conectores condiciones
    (59) condiciones -> condiciones . conectores condiciones
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL

    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157

    conectores                     shift and go to state 184

state 119

    (151) block_expression -> DO expresion . END
    (152) block_expression -> DO expresion . END_LOWER

    END             shift and go to state 185
    END_LOWER       shift and go to state 186


state 120

    (154) block_expression -> DO PIPE . LOCAL_VAR PIPE expresion END
    (155) block_expression -> DO PIPE . LOCAL_VAR PIPE expresion END_LOWER

    LOCAL_VAR       shift and go to state 187


state 121

    (31) values -> value COMMA . values
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 62
    values                         shift and go to state 188
    num                            shift and go to state 51
    var                            shift and go to state 63

state 122

    (38) gets -> GETS DOT CHOMP . DOT TO_F
    (39) gets -> GETS DOT CHOMP . DOT TO_I
    (40) gets -> GETS DOT CHOMP .

    DOT             shift and go to state 189
    PUT             reduce using rule 40 (gets -> GETS DOT CHOMP .)
    GETS            reduce using rule 40 (gets -> GETS DOT CHOMP .)
    LOCAL_VAR       reduce using rule 40 (gets -> GETS DOT CHOMP .)
    INTEGER         reduce using rule 40 (gets -> GETS DOT CHOMP .)
    FLOAT           reduce using rule 40 (gets -> GETS DOT CHOMP .)
    STRING          reduce using rule 40 (gets -> GETS DOT CHOMP .)
    SET             reduce using rule 40 (gets -> GETS DOT CHOMP .)
    IF              reduce using rule 40 (gets -> GETS DOT CHOMP .)
    WHILE           reduce using rule 40 (gets -> GETS DOT CHOMP .)
    UNLESS          reduce using rule 40 (gets -> GETS DOT CHOMP .)
    INSTANCE_VAR    reduce using rule 40 (gets -> GETS DOT CHOMP .)
    CLASS_VAR       reduce using rule 40 (gets -> GETS DOT CHOMP .)
    GLOBAL_VAR      reduce using rule 40 (gets -> GETS DOT CHOMP .)
    CONSTANT        reduce using rule 40 (gets -> GETS DOT CHOMP .)
    NIL             reduce using rule 40 (gets -> GETS DOT CHOMP .)
    SYMBOL          reduce using rule 40 (gets -> GETS DOT CHOMP .)
    LEFT_COR        reduce using rule 40 (gets -> GETS DOT CHOMP .)
    PERCENTW        reduce using rule 40 (gets -> GETS DOT CHOMP .)
    ARRAY           reduce using rule 40 (gets -> GETS DOT CHOMP .)
    $end            reduce using rule 40 (gets -> GETS DOT CHOMP .)
    RBRACE          reduce using rule 40 (gets -> GETS DOT CHOMP .)
    END             reduce using rule 40 (gets -> GETS DOT CHOMP .)
    END_LOWER       reduce using rule 40 (gets -> GETS DOT CHOMP .)
    NEWLINE         reduce using rule 40 (gets -> GETS DOT CHOMP .)
    ELSE            reduce using rule 40 (gets -> GETS DOT CHOMP .)


state 123

    (131) set_operations -> set_operations set_binary_operators set_expression .

    PLUS            reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    MINUS           reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    AMPERSAND       reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    PIPE            reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    CARET           reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    PUT             reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    GETS            reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    LOCAL_VAR       reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    INTEGER         reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    FLOAT           reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    STRING          reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    SET             reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    IF              reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    WHILE           reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    UNLESS          reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    INSTANCE_VAR    reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    CLASS_VAR       reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    GLOBAL_VAR      reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    CONSTANT        reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    NIL             reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    SYMBOL          reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    LEFT_COR        reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    PERCENTW        reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    ARRAY           reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    $end            reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    END_LOWER       reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)
    NEWLINE         reduce using rule 131 (set_operations -> set_operations set_binary_operators set_expression .)


state 124

    (94) method_call -> LOCAL_VAR LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 190


state 125

    (95) method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .

    LBRACE          reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    DO              reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    PUT             reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    SET             reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    IF              reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    $end            reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)
    NEWLINE         reduce using rule 95 (method_call -> LOCAL_VAR LEFTPAR RIGHTPAR .)


state 126

    (159) proc_call -> LOCAL_VAR DOT CALL . LEFTPAR values RIGHTPAR
    (162) proc_call -> LOCAL_VAR DOT CALL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 127

    (160) proc_call -> LOCAL_VAR DOT LEFTPAR . values RIGHTPAR
    (163) proc_call -> LOCAL_VAR DOT LEFTPAR . RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 193
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 192
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 128

    (76) to_string -> LOCAL_VAR DOT TO_S .

    PUT             reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    GETS            reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    LOCAL_VAR       reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    INTEGER         reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    FLOAT           reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    STRING          reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    SET             reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    IF              reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    WHILE           reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    UNLESS          reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    INSTANCE_VAR    reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    CLASS_VAR       reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    GLOBAL_VAR      reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    CONSTANT        reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    NIL             reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    SYMBOL          reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    LEFT_COR        reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    PERCENTW        reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    ARRAY           reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    $end            reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    END_LOWER       reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)
    NEWLINE         reduce using rule 76 (to_string -> LOCAL_VAR DOT TO_S .)


state 129

    (161) proc_call -> LOCAL_VAR LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 194


state 130

    (164) proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .

    PUT             reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    SET             reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    IF              reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    $end            reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)
    NEWLINE         reduce using rule 164 (proc_call -> LOCAL_VAR LEFT_COR RIGHT_COR .)


state 131

    (141) arithmetic_production -> LOCAL_VAR .
    (143) arithmetic_production -> LOCAL_VAR . arithmetic_operators arithmetic_production
    (79) concatenar_string -> LOCAL_VAR . PLUS STRING
    (80) concatenar_string -> LOCAL_VAR . PLUS LOCAL_VAR
    (32) var -> LOCAL_VAR .
    (144) arithmetic_operators -> . PLUS
    (145) arithmetic_operators -> . MINUS
    (146) arithmetic_operators -> . MULTIPLY
    (147) arithmetic_operators -> . DIVIDE
    (148) arithmetic_operators -> . MODULO
    (149) arithmetic_operators -> . EXPONENT

  ! reduce/reduce conflict for PUT resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for GETS resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for SET resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for IF resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for NIL resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for ARRAY resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for $end resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 32 (var -> LOCAL_VAR .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 32 (var -> LOCAL_VAR .)
    PLUS            shift and go to state 196
    GREATER         reduce using rule 32 (var -> LOCAL_VAR .)
    LESS            reduce using rule 32 (var -> LOCAL_VAR .)
    GREATER_EQUAL   reduce using rule 32 (var -> LOCAL_VAR .)
    LESS_EQUAL      reduce using rule 32 (var -> LOCAL_VAR .)
    EQUAL           reduce using rule 32 (var -> LOCAL_VAR .)
    NOT_EQUAL       reduce using rule 32 (var -> LOCAL_VAR .)
    COMPARE         reduce using rule 32 (var -> LOCAL_VAR .)
    PUT             reduce using rule 32 (var -> LOCAL_VAR .)
    GETS            reduce using rule 32 (var -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 32 (var -> LOCAL_VAR .)
    INTEGER         reduce using rule 32 (var -> LOCAL_VAR .)
    FLOAT           reduce using rule 32 (var -> LOCAL_VAR .)
    STRING          reduce using rule 32 (var -> LOCAL_VAR .)
    SET             reduce using rule 32 (var -> LOCAL_VAR .)
    IF              reduce using rule 32 (var -> LOCAL_VAR .)
    WHILE           reduce using rule 32 (var -> LOCAL_VAR .)
    UNLESS          reduce using rule 32 (var -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 32 (var -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 32 (var -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 32 (var -> LOCAL_VAR .)
    CONSTANT        reduce using rule 32 (var -> LOCAL_VAR .)
    NIL             reduce using rule 32 (var -> LOCAL_VAR .)
    SYMBOL          reduce using rule 32 (var -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 32 (var -> LOCAL_VAR .)
    PERCENTW        reduce using rule 32 (var -> LOCAL_VAR .)
    ARRAY           reduce using rule 32 (var -> LOCAL_VAR .)
    $end            reduce using rule 32 (var -> LOCAL_VAR .)
    END_LOWER       reduce using rule 32 (var -> LOCAL_VAR .)
    NEWLINE         reduce using rule 32 (var -> LOCAL_VAR .)
    MINUS           shift and go to state 197
    MULTIPLY        shift and go to state 198
    DIVIDE          shift and go to state 199
    MODULO          shift and go to state 200
    EXPONENT        shift and go to state 201

  ! PUT             [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! GETS            [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! LOCAL_VAR       [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! INTEGER         [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! FLOAT           [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! STRING          [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! SET             [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! IF              [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! WHILE           [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! UNLESS          [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! INSTANCE_VAR    [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! CLASS_VAR       [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! GLOBAL_VAR      [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! CONSTANT        [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! NIL             [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! SYMBOL          [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! LEFT_COR        [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! PERCENTW        [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! ARRAY           [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! $end            [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! END_LOWER       [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]
  ! NEWLINE         [ reduce using rule 141 (arithmetic_production -> LOCAL_VAR .) ]

    arithmetic_operators           shift and go to state 195

state 132

    (120) declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .

    PUT             reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    GETS            reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    LOCAL_VAR       reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    INTEGER         reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    FLOAT           reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    STRING          reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    SET             reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    IF              reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    WHILE           reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    UNLESS          reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    INSTANCE_VAR    reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    CLASS_VAR       reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    GLOBAL_VAR      reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    CONSTANT        reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    NIL             reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    SYMBOL          reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    LEFT_COR        reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    PERCENTW        reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    ARRAY           reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    $end            reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    END_LOWER       reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)
    NEWLINE         reduce using rule 120 (declaraciones -> LOCAL_VAR ASSIGN arithmetic_production .)


state 133

    (82) hash_var -> LOCAL_VAR ASSIGN LBRACE . hash_values RBRACE
    (83) hash_var -> LOCAL_VAR ASSIGN LBRACE . RBRACE
    (84) hash_values -> . STRING HASH_ROCKET value
    (85) hash_values -> . STRING HASH_ROCKET value COMMA hash_values

    RBRACE          shift and go to state 203
    STRING          shift and go to state 204

    hash_values                    shift and go to state 202

state 134

    (88) variable_declaration -> LOCAL_VAR ASSIGN value .

    PUT             reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    GETS            reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    LOCAL_VAR       reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    INTEGER         reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    FLOAT           reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    STRING          reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    SET             reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    IF              reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    WHILE           reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    UNLESS          reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    INSTANCE_VAR    reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    CLASS_VAR       reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    GLOBAL_VAR      reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    CONSTANT        reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    NIL             reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    SYMBOL          reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    LEFT_COR        reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    PERCENTW        reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    ARRAY           reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    $end            reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    END_LOWER       reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)
    NEWLINE         reduce using rule 88 (variable_declaration -> LOCAL_VAR ASSIGN value .)


state 135

    (89) store_conditional_result -> LOCAL_VAR ASSIGN condiciones .
    (59) condiciones -> condiciones . conectores condiciones
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL

    PUT             reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    GETS            reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    LOCAL_VAR       reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    INTEGER         reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    FLOAT           reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    STRING          reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    SET             reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    IF              reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    WHILE           reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    UNLESS          reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    INSTANCE_VAR    reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    CLASS_VAR       reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    GLOBAL_VAR      reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    CONSTANT        reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    NIL             reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    SYMBOL          reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    LEFT_COR        reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    PERCENTW        reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    ARRAY           reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    $end            reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    END_LOWER       reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    NEWLINE         reduce using rule 89 (store_conditional_result -> LOCAL_VAR ASSIGN condiciones .)
    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157

    conectores                     shift and go to state 152

state 136

    (132) declare_data_structures -> LOCAL_VAR ASSIGN set_expression .

    PUT             reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    GETS            reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    LOCAL_VAR       reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    INTEGER         reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    FLOAT           reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    STRING          reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    SET             reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    IF              reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    WHILE           reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    UNLESS          reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    INSTANCE_VAR    reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    CLASS_VAR       reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    GLOBAL_VAR      reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    CONSTANT        reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    NIL             reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    SYMBOL          reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    LEFT_COR        reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    PERCENTW        reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    ARRAY           reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    $end            reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    END_LOWER       reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)
    NEWLINE         reduce using rule 132 (declare_data_structures -> LOCAL_VAR ASSIGN set_expression .)


state 137

    (46) var_arreglo -> LOCAL_VAR ASSIGN array .

    LEFT_COR        reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    PUT             reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    GETS            reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    LOCAL_VAR       reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    INTEGER         reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    FLOAT           reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    STRING          reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    SET             reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    IF              reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    WHILE           reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    UNLESS          reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    INSTANCE_VAR    reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    CLASS_VAR       reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    GLOBAL_VAR      reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    CONSTANT        reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    NIL             reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    SYMBOL          reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    PERCENTW        reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    ARRAY           reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    $end            reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    END_LOWER       reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)
    NEWLINE         reduce using rule 46 (var_arreglo -> LOCAL_VAR ASSIGN array .)


state 138

    (81) declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .

    PUT             reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    GETS            reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    LOCAL_VAR       reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    INTEGER         reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    FLOAT           reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    STRING          reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    SET             reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    IF              reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    WHILE           reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    UNLESS          reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    INSTANCE_VAR    reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    CLASS_VAR       reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    GLOBAL_VAR      reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    CONSTANT        reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    NIL             reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    SYMBOL          reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    LEFT_COR        reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    PERCENTW        reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    ARRAY           reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    $end            reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    END_LOWER       reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)
    NEWLINE         reduce using rule 81 (declaracion_concatenar_string -> LOCAL_VAR ASSIGN concatenar_string .)


state 139

    (158) proc_assignment -> LOCAL_VAR ASSIGN proc_expression .

    PUT             reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    GETS            reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    LOCAL_VAR       reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    INTEGER         reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    FLOAT           reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    STRING          reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    SET             reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    IF              reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    WHILE           reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    UNLESS          reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    INSTANCE_VAR    reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    CLASS_VAR       reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    GLOBAL_VAR      reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    CONSTANT        reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    NIL             reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    SYMBOL          reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    LEFT_COR        reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    PERCENTW        reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    ARRAY           reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    $end            reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    END_LOWER       reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)
    NEWLINE         reduce using rule 158 (proc_assignment -> LOCAL_VAR ASSIGN proc_expression .)


state 140

    (140) arithmetic_production -> num .
    (142) arithmetic_production -> num . arithmetic_operators arithmetic_production
    (23) value -> num .
    (65) condicion -> num . operComp num
    (67) condicion -> num . operComp var
    (144) arithmetic_operators -> . PLUS
    (145) arithmetic_operators -> . MINUS
    (146) arithmetic_operators -> . MULTIPLY
    (147) arithmetic_operators -> . DIVIDE
    (148) arithmetic_operators -> . MODULO
    (149) arithmetic_operators -> . EXPONENT
    (68) operComp -> . GREATER
    (69) operComp -> . LESS
    (70) operComp -> . GREATER_EQUAL
    (71) operComp -> . LESS_EQUAL
    (72) operComp -> . EQUAL
    (73) operComp -> . NOT_EQUAL
    (74) operComp -> . COMPARE

  ! reduce/reduce conflict for PUT resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for GETS resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for LOCAL_VAR resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for INTEGER resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for STRING resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for SET resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for IF resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for UNLESS resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for INSTANCE_VAR resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for CLASS_VAR resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for NIL resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for LEFT_COR resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for PERCENTW resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for ARRAY resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for $end resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for END_LOWER resolved using rule 23 (value -> num .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 23 (value -> num .)
    PUT             reduce using rule 23 (value -> num .)
    GETS            reduce using rule 23 (value -> num .)
    LOCAL_VAR       reduce using rule 23 (value -> num .)
    INTEGER         reduce using rule 23 (value -> num .)
    FLOAT           reduce using rule 23 (value -> num .)
    STRING          reduce using rule 23 (value -> num .)
    SET             reduce using rule 23 (value -> num .)
    IF              reduce using rule 23 (value -> num .)
    WHILE           reduce using rule 23 (value -> num .)
    UNLESS          reduce using rule 23 (value -> num .)
    INSTANCE_VAR    reduce using rule 23 (value -> num .)
    CLASS_VAR       reduce using rule 23 (value -> num .)
    GLOBAL_VAR      reduce using rule 23 (value -> num .)
    CONSTANT        reduce using rule 23 (value -> num .)
    NIL             reduce using rule 23 (value -> num .)
    SYMBOL          reduce using rule 23 (value -> num .)
    LEFT_COR        reduce using rule 23 (value -> num .)
    PERCENTW        reduce using rule 23 (value -> num .)
    ARRAY           reduce using rule 23 (value -> num .)
    $end            reduce using rule 23 (value -> num .)
    END_LOWER       reduce using rule 23 (value -> num .)
    NEWLINE         reduce using rule 23 (value -> num .)
    PLUS            shift and go to state 206
    MINUS           shift and go to state 197
    MULTIPLY        shift and go to state 198
    DIVIDE          shift and go to state 199
    MODULO          shift and go to state 200
    EXPONENT        shift and go to state 201
    GREATER         shift and go to state 159
    LESS            shift and go to state 160
    GREATER_EQUAL   shift and go to state 161
    LESS_EQUAL      shift and go to state 162
    EQUAL           shift and go to state 163
    NOT_EQUAL       shift and go to state 164
    COMPARE         shift and go to state 165

  ! PUT             [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! GETS            [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! LOCAL_VAR       [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! INTEGER         [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! FLOAT           [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! STRING          [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! SET             [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! IF              [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! WHILE           [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! UNLESS          [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! INSTANCE_VAR    [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! CLASS_VAR       [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! GLOBAL_VAR      [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! CONSTANT        [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! NIL             [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! SYMBOL          [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! LEFT_COR        [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! PERCENTW        [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! ARRAY           [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! $end            [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! END_LOWER       [ reduce using rule 140 (arithmetic_production -> num .) ]
  ! NEWLINE         [ reduce using rule 140 (arithmetic_production -> num .) ]

    arithmetic_operators           shift and go to state 205
    operComp                       shift and go to state 158

state 141

    (24) value -> var .
    (66) condicion -> var . operComp num
    (68) operComp -> . GREATER
    (69) operComp -> . LESS
    (70) operComp -> . GREATER_EQUAL
    (71) operComp -> . LESS_EQUAL
    (72) operComp -> . EQUAL
    (73) operComp -> . NOT_EQUAL
    (74) operComp -> . COMPARE

    PUT             reduce using rule 24 (value -> var .)
    GETS            reduce using rule 24 (value -> var .)
    LOCAL_VAR       reduce using rule 24 (value -> var .)
    INTEGER         reduce using rule 24 (value -> var .)
    FLOAT           reduce using rule 24 (value -> var .)
    STRING          reduce using rule 24 (value -> var .)
    SET             reduce using rule 24 (value -> var .)
    IF              reduce using rule 24 (value -> var .)
    WHILE           reduce using rule 24 (value -> var .)
    UNLESS          reduce using rule 24 (value -> var .)
    INSTANCE_VAR    reduce using rule 24 (value -> var .)
    CLASS_VAR       reduce using rule 24 (value -> var .)
    GLOBAL_VAR      reduce using rule 24 (value -> var .)
    CONSTANT        reduce using rule 24 (value -> var .)
    NIL             reduce using rule 24 (value -> var .)
    SYMBOL          reduce using rule 24 (value -> var .)
    LEFT_COR        reduce using rule 24 (value -> var .)
    PERCENTW        reduce using rule 24 (value -> var .)
    ARRAY           reduce using rule 24 (value -> var .)
    $end            reduce using rule 24 (value -> var .)
    END_LOWER       reduce using rule 24 (value -> var .)
    NEWLINE         reduce using rule 24 (value -> var .)
    GREATER         shift and go to state 159
    LESS            shift and go to state 160
    GREATER_EQUAL   shift and go to state 161
    LESS_EQUAL      shift and go to state 162
    EQUAL           shift and go to state 163
    NOT_EQUAL       shift and go to state 164
    COMPARE         shift and go to state 165

    operComp                       shift and go to state 166

state 142

    (25) value -> STRING .
    (77) concatenar_string -> STRING . PLUS STRING
    (78) concatenar_string -> STRING . PLUS LOCAL_VAR

    PUT             reduce using rule 25 (value -> STRING .)
    GETS            reduce using rule 25 (value -> STRING .)
    LOCAL_VAR       reduce using rule 25 (value -> STRING .)
    INTEGER         reduce using rule 25 (value -> STRING .)
    FLOAT           reduce using rule 25 (value -> STRING .)
    STRING          reduce using rule 25 (value -> STRING .)
    SET             reduce using rule 25 (value -> STRING .)
    IF              reduce using rule 25 (value -> STRING .)
    WHILE           reduce using rule 25 (value -> STRING .)
    UNLESS          reduce using rule 25 (value -> STRING .)
    INSTANCE_VAR    reduce using rule 25 (value -> STRING .)
    CLASS_VAR       reduce using rule 25 (value -> STRING .)
    GLOBAL_VAR      reduce using rule 25 (value -> STRING .)
    CONSTANT        reduce using rule 25 (value -> STRING .)
    NIL             reduce using rule 25 (value -> STRING .)
    SYMBOL          reduce using rule 25 (value -> STRING .)
    LEFT_COR        reduce using rule 25 (value -> STRING .)
    PERCENTW        reduce using rule 25 (value -> STRING .)
    ARRAY           reduce using rule 25 (value -> STRING .)
    $end            reduce using rule 25 (value -> STRING .)
    END_LOWER       reduce using rule 25 (value -> STRING .)
    NEWLINE         reduce using rule 25 (value -> STRING .)
    PLUS            shift and go to state 207


state 143

    (157) proc_expression -> PROC . DOT NEW block_expression

    DOT             shift and go to state 208


state 144

    (47) array_explicito -> LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    NEWLINE         reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)
    RIGHTPAR        reduce using rule 47 (array_explicito -> LEFT_COR values RIGHT_COR .)


state 145

    (55) acceder_arreglo -> var_arreglo LEFT_COR INTEGER . RIGHT_COR

    RIGHT_COR       shift and go to state 209


state 146

    (126) comparador -> value EQUAL value .

    PUT             reduce using rule 126 (comparador -> value EQUAL value .)
    GETS            reduce using rule 126 (comparador -> value EQUAL value .)
    LOCAL_VAR       reduce using rule 126 (comparador -> value EQUAL value .)
    INTEGER         reduce using rule 126 (comparador -> value EQUAL value .)
    FLOAT           reduce using rule 126 (comparador -> value EQUAL value .)
    STRING          reduce using rule 126 (comparador -> value EQUAL value .)
    SET             reduce using rule 126 (comparador -> value EQUAL value .)
    IF              reduce using rule 126 (comparador -> value EQUAL value .)
    WHILE           reduce using rule 126 (comparador -> value EQUAL value .)
    UNLESS          reduce using rule 126 (comparador -> value EQUAL value .)
    INSTANCE_VAR    reduce using rule 126 (comparador -> value EQUAL value .)
    CLASS_VAR       reduce using rule 126 (comparador -> value EQUAL value .)
    GLOBAL_VAR      reduce using rule 126 (comparador -> value EQUAL value .)
    CONSTANT        reduce using rule 126 (comparador -> value EQUAL value .)
    NIL             reduce using rule 126 (comparador -> value EQUAL value .)
    SYMBOL          reduce using rule 126 (comparador -> value EQUAL value .)
    LEFT_COR        reduce using rule 126 (comparador -> value EQUAL value .)
    PERCENTW        reduce using rule 126 (comparador -> value EQUAL value .)
    ARRAY           reduce using rule 126 (comparador -> value EQUAL value .)
    $end            reduce using rule 126 (comparador -> value EQUAL value .)
    END_LOWER       reduce using rule 126 (comparador -> value EQUAL value .)
    NEWLINE         reduce using rule 126 (comparador -> value EQUAL value .)


state 147

    (127) comparador -> value COMPARE value .

    PUT             reduce using rule 127 (comparador -> value COMPARE value .)
    GETS            reduce using rule 127 (comparador -> value COMPARE value .)
    LOCAL_VAR       reduce using rule 127 (comparador -> value COMPARE value .)
    INTEGER         reduce using rule 127 (comparador -> value COMPARE value .)
    FLOAT           reduce using rule 127 (comparador -> value COMPARE value .)
    STRING          reduce using rule 127 (comparador -> value COMPARE value .)
    SET             reduce using rule 127 (comparador -> value COMPARE value .)
    IF              reduce using rule 127 (comparador -> value COMPARE value .)
    WHILE           reduce using rule 127 (comparador -> value COMPARE value .)
    UNLESS          reduce using rule 127 (comparador -> value COMPARE value .)
    INSTANCE_VAR    reduce using rule 127 (comparador -> value COMPARE value .)
    CLASS_VAR       reduce using rule 127 (comparador -> value COMPARE value .)
    GLOBAL_VAR      reduce using rule 127 (comparador -> value COMPARE value .)
    CONSTANT        reduce using rule 127 (comparador -> value COMPARE value .)
    NIL             reduce using rule 127 (comparador -> value COMPARE value .)
    SYMBOL          reduce using rule 127 (comparador -> value COMPARE value .)
    LEFT_COR        reduce using rule 127 (comparador -> value COMPARE value .)
    PERCENTW        reduce using rule 127 (comparador -> value COMPARE value .)
    ARRAY           reduce using rule 127 (comparador -> value COMPARE value .)
    $end            reduce using rule 127 (comparador -> value COMPARE value .)
    END_LOWER       reduce using rule 127 (comparador -> value COMPARE value .)
    NEWLINE         reduce using rule 127 (comparador -> value COMPARE value .)


state 148

    (87) hash_operations -> hash_access ASSIGN value .

    PUT             reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    GETS            reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    LOCAL_VAR       reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    INTEGER         reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    FLOAT           reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    STRING          reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    SET             reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    IF              reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    WHILE           reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    UNLESS          reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    INSTANCE_VAR    reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    CLASS_VAR       reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    GLOBAL_VAR      reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    CONSTANT        reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    NIL             reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    SYMBOL          reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    LEFT_COR        reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    PERCENTW        reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    ARRAY           reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    $end            reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    END_LOWER       reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)
    NEWLINE         reduce using rule 87 (hash_operations -> hash_access ASSIGN value .)


state 149

    (128) set_expression -> SET DOT NEW . LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR

    LEFTPAR         shift and go to state 210


state 150

    (129) set_expression -> SET LEFT_COR values . RIGHT_COR

    RIGHT_COR       shift and go to state 211


state 151

    (56) ifStatement -> IF condiciones NEWLINE . codigo END_LOWER
    (57) ifStatement -> IF condiciones NEWLINE . codigo NEWLINE else_statement END_LOWER
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    codigo                         shift and go to state 212
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 152

    (59) condiciones -> condiciones conectores . condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    condiciones                    shift and go to state 213
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 153

    (60) conectores -> AND .

    FLOAT           reduce using rule 60 (conectores -> AND .)
    INTEGER         reduce using rule 60 (conectores -> AND .)
    LOCAL_VAR       reduce using rule 60 (conectores -> AND .)
    INSTANCE_VAR    reduce using rule 60 (conectores -> AND .)
    CLASS_VAR       reduce using rule 60 (conectores -> AND .)
    GLOBAL_VAR      reduce using rule 60 (conectores -> AND .)


state 154

    (61) conectores -> OR .

    FLOAT           reduce using rule 61 (conectores -> OR .)
    INTEGER         reduce using rule 61 (conectores -> OR .)
    LOCAL_VAR       reduce using rule 61 (conectores -> OR .)
    INSTANCE_VAR    reduce using rule 61 (conectores -> OR .)
    CLASS_VAR       reduce using rule 61 (conectores -> OR .)
    GLOBAL_VAR      reduce using rule 61 (conectores -> OR .)


state 155

    (62) conectores -> AND_RESERVED .

    FLOAT           reduce using rule 62 (conectores -> AND_RESERVED .)
    INTEGER         reduce using rule 62 (conectores -> AND_RESERVED .)
    LOCAL_VAR       reduce using rule 62 (conectores -> AND_RESERVED .)
    INSTANCE_VAR    reduce using rule 62 (conectores -> AND_RESERVED .)
    CLASS_VAR       reduce using rule 62 (conectores -> AND_RESERVED .)
    GLOBAL_VAR      reduce using rule 62 (conectores -> AND_RESERVED .)


state 156

    (63) conectores -> OR_RESERVED .

    FLOAT           reduce using rule 63 (conectores -> OR_RESERVED .)
    INTEGER         reduce using rule 63 (conectores -> OR_RESERVED .)
    LOCAL_VAR       reduce using rule 63 (conectores -> OR_RESERVED .)
    INSTANCE_VAR    reduce using rule 63 (conectores -> OR_RESERVED .)
    CLASS_VAR       reduce using rule 63 (conectores -> OR_RESERVED .)
    GLOBAL_VAR      reduce using rule 63 (conectores -> OR_RESERVED .)


state 157

    (64) conectores -> EQUAL .

    FLOAT           reduce using rule 64 (conectores -> EQUAL .)
    INTEGER         reduce using rule 64 (conectores -> EQUAL .)
    LOCAL_VAR       reduce using rule 64 (conectores -> EQUAL .)
    INSTANCE_VAR    reduce using rule 64 (conectores -> EQUAL .)
    CLASS_VAR       reduce using rule 64 (conectores -> EQUAL .)
    GLOBAL_VAR      reduce using rule 64 (conectores -> EQUAL .)


state 158

    (65) condicion -> num operComp . num
    (67) condicion -> num operComp . var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    num                            shift and go to state 214
    var                            shift and go to state 215

state 159

    (68) operComp -> GREATER .

    FLOAT           reduce using rule 68 (operComp -> GREATER .)
    INTEGER         reduce using rule 68 (operComp -> GREATER .)
    LOCAL_VAR       reduce using rule 68 (operComp -> GREATER .)
    INSTANCE_VAR    reduce using rule 68 (operComp -> GREATER .)
    CLASS_VAR       reduce using rule 68 (operComp -> GREATER .)
    GLOBAL_VAR      reduce using rule 68 (operComp -> GREATER .)


state 160

    (69) operComp -> LESS .

    FLOAT           reduce using rule 69 (operComp -> LESS .)
    INTEGER         reduce using rule 69 (operComp -> LESS .)
    LOCAL_VAR       reduce using rule 69 (operComp -> LESS .)
    INSTANCE_VAR    reduce using rule 69 (operComp -> LESS .)
    CLASS_VAR       reduce using rule 69 (operComp -> LESS .)
    GLOBAL_VAR      reduce using rule 69 (operComp -> LESS .)


state 161

    (70) operComp -> GREATER_EQUAL .

    FLOAT           reduce using rule 70 (operComp -> GREATER_EQUAL .)
    INTEGER         reduce using rule 70 (operComp -> GREATER_EQUAL .)
    LOCAL_VAR       reduce using rule 70 (operComp -> GREATER_EQUAL .)
    INSTANCE_VAR    reduce using rule 70 (operComp -> GREATER_EQUAL .)
    CLASS_VAR       reduce using rule 70 (operComp -> GREATER_EQUAL .)
    GLOBAL_VAR      reduce using rule 70 (operComp -> GREATER_EQUAL .)


state 162

    (71) operComp -> LESS_EQUAL .

    FLOAT           reduce using rule 71 (operComp -> LESS_EQUAL .)
    INTEGER         reduce using rule 71 (operComp -> LESS_EQUAL .)
    LOCAL_VAR       reduce using rule 71 (operComp -> LESS_EQUAL .)
    INSTANCE_VAR    reduce using rule 71 (operComp -> LESS_EQUAL .)
    CLASS_VAR       reduce using rule 71 (operComp -> LESS_EQUAL .)
    GLOBAL_VAR      reduce using rule 71 (operComp -> LESS_EQUAL .)


state 163

    (72) operComp -> EQUAL .

    FLOAT           reduce using rule 72 (operComp -> EQUAL .)
    INTEGER         reduce using rule 72 (operComp -> EQUAL .)
    LOCAL_VAR       reduce using rule 72 (operComp -> EQUAL .)
    INSTANCE_VAR    reduce using rule 72 (operComp -> EQUAL .)
    CLASS_VAR       reduce using rule 72 (operComp -> EQUAL .)
    GLOBAL_VAR      reduce using rule 72 (operComp -> EQUAL .)


state 164

    (73) operComp -> NOT_EQUAL .

    FLOAT           reduce using rule 73 (operComp -> NOT_EQUAL .)
    INTEGER         reduce using rule 73 (operComp -> NOT_EQUAL .)
    LOCAL_VAR       reduce using rule 73 (operComp -> NOT_EQUAL .)
    INSTANCE_VAR    reduce using rule 73 (operComp -> NOT_EQUAL .)
    CLASS_VAR       reduce using rule 73 (operComp -> NOT_EQUAL .)
    GLOBAL_VAR      reduce using rule 73 (operComp -> NOT_EQUAL .)


state 165

    (74) operComp -> COMPARE .

    FLOAT           reduce using rule 74 (operComp -> COMPARE .)
    INTEGER         reduce using rule 74 (operComp -> COMPARE .)
    LOCAL_VAR       reduce using rule 74 (operComp -> COMPARE .)
    INSTANCE_VAR    reduce using rule 74 (operComp -> COMPARE .)
    CLASS_VAR       reduce using rule 74 (operComp -> COMPARE .)
    GLOBAL_VAR      reduce using rule 74 (operComp -> COMPARE .)


state 166

    (66) condicion -> var operComp . num
    (36) num -> . FLOAT
    (37) num -> . INTEGER

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66

    num                            shift and go to state 216

state 167

    (92) while_statement -> WHILE condiciones codigo . END_LOWER
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    END_LOWER       shift and go to state 217
    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    sentencia                      shift and go to state 57
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 168

    (138) unless_expression -> UNLESS boolean_expression THEN . expresion END
    (139) unless_expression -> UNLESS boolean_expression THEN . expresion ELSE expresion END
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 218
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 169

    (97) boolean_expression -> expression GREATER . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 219
    variable                       shift and go to state 35

state 170

    (98) boolean_expression -> expression LESS . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 220
    variable                       shift and go to state 35

state 171

    (99) boolean_expression -> expression GREATER_EQUAL . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 221
    variable                       shift and go to state 35

state 172

    (100) boolean_expression -> expression LESS_EQUAL . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 222
    variable                       shift and go to state 35

state 173

    (101) boolean_expression -> expression EQUAL . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 223
    variable                       shift and go to state 35

state 174

    (102) boolean_expression -> expression NOT_EQUAL . expression
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 99
    STRING          shift and go to state 100
    LOCAL_VAR       shift and go to state 103
    INSTANCE_VAR    shift and go to state 104
    CLASS_VAR       shift and go to state 105
    GLOBAL_VAR      shift and go to state 106
    CONSTANT        shift and go to state 50

    expression                     shift and go to state 224
    variable                       shift and go to state 35

state 175

    (86) hash_access -> var LBRACE value . RBRACE

    RBRACE          shift and go to state 225


state 176

    (49) array_implicito -> PERCENTW LEFT_COR values_space . RIGHT_COR

    RIGHT_COR       shift and go to state 226


state 177

    (50) array_implicito -> PERCENTW LEFT_COR RIGHT_COR .

    PUT             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    GETS            reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    LOCAL_VAR       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    INTEGER         reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    FLOAT           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    STRING          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    SET             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    IF              reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    WHILE           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    UNLESS          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    CLASS_VAR       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    CONSTANT        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    NIL             reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    SYMBOL          reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    LEFT_COR        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    PERCENTW        reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    ARRAY           reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    $end            reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    END_LOWER       reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)
    NEWLINE         reduce using rule 50 (array_implicito -> PERCENTW LEFT_COR RIGHT_COR .)


state 178

    (28) values_space -> value . SPACE values_space
    (29) values_space -> value .

    SPACE           shift and go to state 227
    RIGHT_COR       reduce using rule 29 (values_space -> value .)


state 179

    (51) array_creation -> ARRAY LEFTPAR array_explicito . RIGHTPAR

    RIGHTPAR        shift and go to state 228


state 180

    (52) newArray -> ARRAY DOT NEW .
    (53) newArray -> ARRAY DOT NEW . LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> ARRAY DOT NEW . LEFTPAR INTEGER COMMA values RIGHTPAR

    PUT             reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    GETS            reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    LOCAL_VAR       reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    INTEGER         reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    FLOAT           reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    STRING          reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    SET             reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    IF              reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    WHILE           reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    UNLESS          reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    INSTANCE_VAR    reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    CLASS_VAR       reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    GLOBAL_VAR      reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    CONSTANT        reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    NIL             reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    SYMBOL          reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    LEFT_COR        reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    PERCENTW        reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    ARRAY           reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    $end            reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    END_LOWER       reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    NEWLINE         reduce using rule 52 (newArray -> ARRAY DOT NEW .)
    LEFTPAR         shift and go to state 229


state 181

    (150) block_expression -> LBRACE expresion RBRACE .

    PUT             reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    GETS            reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    LOCAL_VAR       reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    INTEGER         reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    FLOAT           reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    STRING          reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    SET             reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    IF              reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    WHILE           reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    UNLESS          reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    INSTANCE_VAR    reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    CLASS_VAR       reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    GLOBAL_VAR      reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    CONSTANT        reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    NIL             reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    SYMBOL          reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    LEFT_COR        reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    PERCENTW        reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    ARRAY           reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    $end            reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    END_LOWER       reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)
    NEWLINE         reduce using rule 150 (block_expression -> LBRACE expresion RBRACE .)


state 182

    (153) block_expression -> LBRACE PIPE LOCAL_VAR . PIPE expresion RBRACE

    PIPE            shift and go to state 230


state 183

    (96) print_statement -> PUT LEFTPAR . values RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 231
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 184

    (93) condition_with_connectors -> condiciones conectores . condiciones
    (59) condiciones -> condiciones conectores . condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    condiciones                    shift and go to state 232
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 185

    (151) block_expression -> DO expresion END .

    PUT             reduce using rule 151 (block_expression -> DO expresion END .)
    GETS            reduce using rule 151 (block_expression -> DO expresion END .)
    LOCAL_VAR       reduce using rule 151 (block_expression -> DO expresion END .)
    INTEGER         reduce using rule 151 (block_expression -> DO expresion END .)
    FLOAT           reduce using rule 151 (block_expression -> DO expresion END .)
    STRING          reduce using rule 151 (block_expression -> DO expresion END .)
    SET             reduce using rule 151 (block_expression -> DO expresion END .)
    IF              reduce using rule 151 (block_expression -> DO expresion END .)
    WHILE           reduce using rule 151 (block_expression -> DO expresion END .)
    UNLESS          reduce using rule 151 (block_expression -> DO expresion END .)
    INSTANCE_VAR    reduce using rule 151 (block_expression -> DO expresion END .)
    CLASS_VAR       reduce using rule 151 (block_expression -> DO expresion END .)
    GLOBAL_VAR      reduce using rule 151 (block_expression -> DO expresion END .)
    CONSTANT        reduce using rule 151 (block_expression -> DO expresion END .)
    NIL             reduce using rule 151 (block_expression -> DO expresion END .)
    SYMBOL          reduce using rule 151 (block_expression -> DO expresion END .)
    LEFT_COR        reduce using rule 151 (block_expression -> DO expresion END .)
    PERCENTW        reduce using rule 151 (block_expression -> DO expresion END .)
    ARRAY           reduce using rule 151 (block_expression -> DO expresion END .)
    $end            reduce using rule 151 (block_expression -> DO expresion END .)
    END_LOWER       reduce using rule 151 (block_expression -> DO expresion END .)
    NEWLINE         reduce using rule 151 (block_expression -> DO expresion END .)


state 186

    (152) block_expression -> DO expresion END_LOWER .

    PUT             reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    GETS            reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    LOCAL_VAR       reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    INTEGER         reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    FLOAT           reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    STRING          reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    SET             reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    IF              reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    WHILE           reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    UNLESS          reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    INSTANCE_VAR    reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    CLASS_VAR       reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    GLOBAL_VAR      reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    CONSTANT        reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    NIL             reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    SYMBOL          reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    LEFT_COR        reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    PERCENTW        reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    ARRAY           reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    $end            reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    END_LOWER       reduce using rule 152 (block_expression -> DO expresion END_LOWER .)
    NEWLINE         reduce using rule 152 (block_expression -> DO expresion END_LOWER .)


state 187

    (154) block_expression -> DO PIPE LOCAL_VAR . PIPE expresion END
    (155) block_expression -> DO PIPE LOCAL_VAR . PIPE expresion END_LOWER

    PIPE            shift and go to state 233


state 188

    (31) values -> value COMMA values .

    PUT             reduce using rule 31 (values -> value COMMA values .)
    GETS            reduce using rule 31 (values -> value COMMA values .)
    LOCAL_VAR       reduce using rule 31 (values -> value COMMA values .)
    INTEGER         reduce using rule 31 (values -> value COMMA values .)
    FLOAT           reduce using rule 31 (values -> value COMMA values .)
    STRING          reduce using rule 31 (values -> value COMMA values .)
    SET             reduce using rule 31 (values -> value COMMA values .)
    IF              reduce using rule 31 (values -> value COMMA values .)
    WHILE           reduce using rule 31 (values -> value COMMA values .)
    UNLESS          reduce using rule 31 (values -> value COMMA values .)
    INSTANCE_VAR    reduce using rule 31 (values -> value COMMA values .)
    CLASS_VAR       reduce using rule 31 (values -> value COMMA values .)
    GLOBAL_VAR      reduce using rule 31 (values -> value COMMA values .)
    CONSTANT        reduce using rule 31 (values -> value COMMA values .)
    NIL             reduce using rule 31 (values -> value COMMA values .)
    SYMBOL          reduce using rule 31 (values -> value COMMA values .)
    LEFT_COR        reduce using rule 31 (values -> value COMMA values .)
    PERCENTW        reduce using rule 31 (values -> value COMMA values .)
    ARRAY           reduce using rule 31 (values -> value COMMA values .)
    $end            reduce using rule 31 (values -> value COMMA values .)
    END_LOWER       reduce using rule 31 (values -> value COMMA values .)
    NEWLINE         reduce using rule 31 (values -> value COMMA values .)
    RIGHT_COR       reduce using rule 31 (values -> value COMMA values .)
    RIGHTPAR        reduce using rule 31 (values -> value COMMA values .)
    RBRACE          reduce using rule 31 (values -> value COMMA values .)
    END             reduce using rule 31 (values -> value COMMA values .)
    ELSE            reduce using rule 31 (values -> value COMMA values .)


state 189

    (38) gets -> GETS DOT CHOMP DOT . TO_F
    (39) gets -> GETS DOT CHOMP DOT . TO_I

    TO_F            shift and go to state 234
    TO_I            shift and go to state 235


state 190

    (94) method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .

    LBRACE          reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    DO              reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    PUT             reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)
    NEWLINE         reduce using rule 94 (method_call -> LOCAL_VAR LEFTPAR values RIGHTPAR .)


state 191

    (159) proc_call -> LOCAL_VAR DOT CALL LEFTPAR . values RIGHTPAR
    (162) proc_call -> LOCAL_VAR DOT CALL LEFTPAR . RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    RIGHTPAR        shift and go to state 237
    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 236
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 192

    (160) proc_call -> LOCAL_VAR DOT LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 238


state 193

    (163) proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .

    PUT             reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    SET             reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    IF              reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    $end            reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)
    NEWLINE         reduce using rule 163 (proc_call -> LOCAL_VAR DOT LEFTPAR RIGHTPAR .)


state 194

    (161) proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)
    NEWLINE         reduce using rule 161 (proc_call -> LOCAL_VAR LEFT_COR values RIGHT_COR .)


state 195

    (143) arithmetic_production -> LOCAL_VAR arithmetic_operators . arithmetic_production
    (140) arithmetic_production -> . num
    (141) arithmetic_production -> . LOCAL_VAR
    (142) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (143) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (36) num -> . FLOAT
    (37) num -> . INTEGER

    LOCAL_VAR       shift and go to state 239
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66

    arithmetic_production          shift and go to state 240
    num                            shift and go to state 241

state 196

    (79) concatenar_string -> LOCAL_VAR PLUS . STRING
    (80) concatenar_string -> LOCAL_VAR PLUS . LOCAL_VAR
    (144) arithmetic_operators -> PLUS .

  ! shift/reduce conflict for LOCAL_VAR resolved as shift
    STRING          shift and go to state 243
    LOCAL_VAR       shift and go to state 242
    FLOAT           reduce using rule 144 (arithmetic_operators -> PLUS .)
    INTEGER         reduce using rule 144 (arithmetic_operators -> PLUS .)

  ! LOCAL_VAR       [ reduce using rule 144 (arithmetic_operators -> PLUS .) ]


state 197

    (145) arithmetic_operators -> MINUS .

    LOCAL_VAR       reduce using rule 145 (arithmetic_operators -> MINUS .)
    FLOAT           reduce using rule 145 (arithmetic_operators -> MINUS .)
    INTEGER         reduce using rule 145 (arithmetic_operators -> MINUS .)


state 198

    (146) arithmetic_operators -> MULTIPLY .

    LOCAL_VAR       reduce using rule 146 (arithmetic_operators -> MULTIPLY .)
    FLOAT           reduce using rule 146 (arithmetic_operators -> MULTIPLY .)
    INTEGER         reduce using rule 146 (arithmetic_operators -> MULTIPLY .)


state 199

    (147) arithmetic_operators -> DIVIDE .

    LOCAL_VAR       reduce using rule 147 (arithmetic_operators -> DIVIDE .)
    FLOAT           reduce using rule 147 (arithmetic_operators -> DIVIDE .)
    INTEGER         reduce using rule 147 (arithmetic_operators -> DIVIDE .)


state 200

    (148) arithmetic_operators -> MODULO .

    LOCAL_VAR       reduce using rule 148 (arithmetic_operators -> MODULO .)
    FLOAT           reduce using rule 148 (arithmetic_operators -> MODULO .)
    INTEGER         reduce using rule 148 (arithmetic_operators -> MODULO .)


state 201

    (149) arithmetic_operators -> EXPONENT .

    LOCAL_VAR       reduce using rule 149 (arithmetic_operators -> EXPONENT .)
    FLOAT           reduce using rule 149 (arithmetic_operators -> EXPONENT .)
    INTEGER         reduce using rule 149 (arithmetic_operators -> EXPONENT .)


state 202

    (82) hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values . RBRACE

    RBRACE          shift and go to state 244


state 203

    (83) hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .

    PUT             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    GETS            reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    LOCAL_VAR       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    INTEGER         reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    FLOAT           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    STRING          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    SET             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    IF              reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    WHILE           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    UNLESS          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    INSTANCE_VAR    reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    CLASS_VAR       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    GLOBAL_VAR      reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    CONSTANT        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    NIL             reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    SYMBOL          reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    LEFT_COR        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    PERCENTW        reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    ARRAY           reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    $end            reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    END_LOWER       reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)
    NEWLINE         reduce using rule 83 (hash_var -> LOCAL_VAR ASSIGN LBRACE RBRACE .)


state 204

    (84) hash_values -> STRING . HASH_ROCKET value
    (85) hash_values -> STRING . HASH_ROCKET value COMMA hash_values

    HASH_ROCKET     shift and go to state 245


state 205

    (142) arithmetic_production -> num arithmetic_operators . arithmetic_production
    (140) arithmetic_production -> . num
    (141) arithmetic_production -> . LOCAL_VAR
    (142) arithmetic_production -> . num arithmetic_operators arithmetic_production
    (143) arithmetic_production -> . LOCAL_VAR arithmetic_operators arithmetic_production
    (36) num -> . FLOAT
    (37) num -> . INTEGER

    LOCAL_VAR       shift and go to state 239
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66

    num                            shift and go to state 241
    arithmetic_production          shift and go to state 246

state 206

    (144) arithmetic_operators -> PLUS .

    LOCAL_VAR       reduce using rule 144 (arithmetic_operators -> PLUS .)
    FLOAT           reduce using rule 144 (arithmetic_operators -> PLUS .)
    INTEGER         reduce using rule 144 (arithmetic_operators -> PLUS .)


state 207

    (77) concatenar_string -> STRING PLUS . STRING
    (78) concatenar_string -> STRING PLUS . LOCAL_VAR

    STRING          shift and go to state 247
    LOCAL_VAR       shift and go to state 248


state 208

    (157) proc_expression -> PROC DOT . NEW block_expression

    NEW             shift and go to state 249


state 209

    (55) acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .

    PUT             reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    GETS            reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    LOCAL_VAR       reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    INTEGER         reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    FLOAT           reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    STRING          reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    SET             reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    IF              reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    WHILE           reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    UNLESS          reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    CLASS_VAR       reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    CONSTANT        reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    NIL             reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    SYMBOL          reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    LEFT_COR        reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    PERCENTW        reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    ARRAY           reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    $end            reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    END_LOWER       reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)
    NEWLINE         reduce using rule 55 (acceder_arreglo -> var_arreglo LEFT_COR INTEGER RIGHT_COR .)


state 210

    (128) set_expression -> SET DOT NEW LEFTPAR . LEFT_COR values RIGHT_COR RIGHTPAR

    LEFT_COR        shift and go to state 250


state 211

    (129) set_expression -> SET LEFT_COR values RIGHT_COR .

    PUT             reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    GETS            reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    LOCAL_VAR       reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    INTEGER         reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    FLOAT           reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    STRING          reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    SET             reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    IF              reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    WHILE           reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    UNLESS          reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CLASS_VAR       reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CONSTANT        reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    NIL             reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    SYMBOL          reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    LEFT_COR        reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PERCENTW        reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    ARRAY           reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    $end            reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PLUS            reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    MINUS           reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    AMPERSAND       reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    PIPE            reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    CARET           reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    END_LOWER       reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)
    NEWLINE         reduce using rule 129 (set_expression -> SET LEFT_COR values RIGHT_COR .)


state 212

    (56) ifStatement -> IF condiciones NEWLINE codigo . END_LOWER
    (57) ifStatement -> IF condiciones NEWLINE codigo . NEWLINE else_statement END_LOWER
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    END_LOWER       shift and go to state 252
    NEWLINE         shift and go to state 251
    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    sentencia                      shift and go to state 57
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 213

    (59) condiciones -> condiciones conectores condiciones .
    (59) condiciones -> condiciones . conectores condiciones
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND_RESERVED resolved as shift
  ! shift/reduce conflict for OR_RESERVED resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    NEWLINE         reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    PUT             reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    GETS            reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    LOCAL_VAR       reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    INTEGER         reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    FLOAT           reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    STRING          reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    SET             reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    IF              reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    WHILE           reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    UNLESS          reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    INSTANCE_VAR    reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    CLASS_VAR       reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    GLOBAL_VAR      reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    CONSTANT        reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    NIL             reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    SYMBOL          reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    LEFT_COR        reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    PERCENTW        reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    ARRAY           reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    $end            reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    END_LOWER       reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    RBRACE          reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    END             reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    ELSE            reduce using rule 59 (condiciones -> condiciones conectores condiciones .)
    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157

  ! AND             [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! OR              [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! AND_RESERVED    [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! OR_RESERVED     [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! EQUAL           [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]

    conectores                     shift and go to state 152

state 214

    (65) condicion -> num operComp num .

    NEWLINE         reduce using rule 65 (condicion -> num operComp num .)
    AND             reduce using rule 65 (condicion -> num operComp num .)
    OR              reduce using rule 65 (condicion -> num operComp num .)
    AND_RESERVED    reduce using rule 65 (condicion -> num operComp num .)
    OR_RESERVED     reduce using rule 65 (condicion -> num operComp num .)
    EQUAL           reduce using rule 65 (condicion -> num operComp num .)
    PUT             reduce using rule 65 (condicion -> num operComp num .)
    GETS            reduce using rule 65 (condicion -> num operComp num .)
    LOCAL_VAR       reduce using rule 65 (condicion -> num operComp num .)
    INTEGER         reduce using rule 65 (condicion -> num operComp num .)
    FLOAT           reduce using rule 65 (condicion -> num operComp num .)
    STRING          reduce using rule 65 (condicion -> num operComp num .)
    SET             reduce using rule 65 (condicion -> num operComp num .)
    IF              reduce using rule 65 (condicion -> num operComp num .)
    WHILE           reduce using rule 65 (condicion -> num operComp num .)
    UNLESS          reduce using rule 65 (condicion -> num operComp num .)
    INSTANCE_VAR    reduce using rule 65 (condicion -> num operComp num .)
    CLASS_VAR       reduce using rule 65 (condicion -> num operComp num .)
    GLOBAL_VAR      reduce using rule 65 (condicion -> num operComp num .)
    CONSTANT        reduce using rule 65 (condicion -> num operComp num .)
    NIL             reduce using rule 65 (condicion -> num operComp num .)
    SYMBOL          reduce using rule 65 (condicion -> num operComp num .)
    LEFT_COR        reduce using rule 65 (condicion -> num operComp num .)
    PERCENTW        reduce using rule 65 (condicion -> num operComp num .)
    ARRAY           reduce using rule 65 (condicion -> num operComp num .)
    $end            reduce using rule 65 (condicion -> num operComp num .)
    END_LOWER       reduce using rule 65 (condicion -> num operComp num .)
    RBRACE          reduce using rule 65 (condicion -> num operComp num .)
    END             reduce using rule 65 (condicion -> num operComp num .)
    ELSE            reduce using rule 65 (condicion -> num operComp num .)


state 215

    (67) condicion -> num operComp var .

    NEWLINE         reduce using rule 67 (condicion -> num operComp var .)
    AND             reduce using rule 67 (condicion -> num operComp var .)
    OR              reduce using rule 67 (condicion -> num operComp var .)
    AND_RESERVED    reduce using rule 67 (condicion -> num operComp var .)
    OR_RESERVED     reduce using rule 67 (condicion -> num operComp var .)
    EQUAL           reduce using rule 67 (condicion -> num operComp var .)
    PUT             reduce using rule 67 (condicion -> num operComp var .)
    GETS            reduce using rule 67 (condicion -> num operComp var .)
    LOCAL_VAR       reduce using rule 67 (condicion -> num operComp var .)
    INTEGER         reduce using rule 67 (condicion -> num operComp var .)
    FLOAT           reduce using rule 67 (condicion -> num operComp var .)
    STRING          reduce using rule 67 (condicion -> num operComp var .)
    SET             reduce using rule 67 (condicion -> num operComp var .)
    IF              reduce using rule 67 (condicion -> num operComp var .)
    WHILE           reduce using rule 67 (condicion -> num operComp var .)
    UNLESS          reduce using rule 67 (condicion -> num operComp var .)
    INSTANCE_VAR    reduce using rule 67 (condicion -> num operComp var .)
    CLASS_VAR       reduce using rule 67 (condicion -> num operComp var .)
    GLOBAL_VAR      reduce using rule 67 (condicion -> num operComp var .)
    CONSTANT        reduce using rule 67 (condicion -> num operComp var .)
    NIL             reduce using rule 67 (condicion -> num operComp var .)
    SYMBOL          reduce using rule 67 (condicion -> num operComp var .)
    LEFT_COR        reduce using rule 67 (condicion -> num operComp var .)
    PERCENTW        reduce using rule 67 (condicion -> num operComp var .)
    ARRAY           reduce using rule 67 (condicion -> num operComp var .)
    $end            reduce using rule 67 (condicion -> num operComp var .)
    END_LOWER       reduce using rule 67 (condicion -> num operComp var .)
    RBRACE          reduce using rule 67 (condicion -> num operComp var .)
    END             reduce using rule 67 (condicion -> num operComp var .)
    ELSE            reduce using rule 67 (condicion -> num operComp var .)


state 216

    (66) condicion -> var operComp num .

    NEWLINE         reduce using rule 66 (condicion -> var operComp num .)
    AND             reduce using rule 66 (condicion -> var operComp num .)
    OR              reduce using rule 66 (condicion -> var operComp num .)
    AND_RESERVED    reduce using rule 66 (condicion -> var operComp num .)
    OR_RESERVED     reduce using rule 66 (condicion -> var operComp num .)
    EQUAL           reduce using rule 66 (condicion -> var operComp num .)
    PUT             reduce using rule 66 (condicion -> var operComp num .)
    GETS            reduce using rule 66 (condicion -> var operComp num .)
    LOCAL_VAR       reduce using rule 66 (condicion -> var operComp num .)
    INTEGER         reduce using rule 66 (condicion -> var operComp num .)
    FLOAT           reduce using rule 66 (condicion -> var operComp num .)
    STRING          reduce using rule 66 (condicion -> var operComp num .)
    SET             reduce using rule 66 (condicion -> var operComp num .)
    IF              reduce using rule 66 (condicion -> var operComp num .)
    WHILE           reduce using rule 66 (condicion -> var operComp num .)
    UNLESS          reduce using rule 66 (condicion -> var operComp num .)
    INSTANCE_VAR    reduce using rule 66 (condicion -> var operComp num .)
    CLASS_VAR       reduce using rule 66 (condicion -> var operComp num .)
    GLOBAL_VAR      reduce using rule 66 (condicion -> var operComp num .)
    CONSTANT        reduce using rule 66 (condicion -> var operComp num .)
    NIL             reduce using rule 66 (condicion -> var operComp num .)
    SYMBOL          reduce using rule 66 (condicion -> var operComp num .)
    LEFT_COR        reduce using rule 66 (condicion -> var operComp num .)
    PERCENTW        reduce using rule 66 (condicion -> var operComp num .)
    ARRAY           reduce using rule 66 (condicion -> var operComp num .)
    $end            reduce using rule 66 (condicion -> var operComp num .)
    END_LOWER       reduce using rule 66 (condicion -> var operComp num .)
    RBRACE          reduce using rule 66 (condicion -> var operComp num .)
    END             reduce using rule 66 (condicion -> var operComp num .)
    ELSE            reduce using rule 66 (condicion -> var operComp num .)


state 217

    (92) while_statement -> WHILE condiciones codigo END_LOWER .

    PUT             reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    GETS            reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    LOCAL_VAR       reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    INTEGER         reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    FLOAT           reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    STRING          reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    SET             reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    IF              reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    WHILE           reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    UNLESS          reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    INSTANCE_VAR    reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    CLASS_VAR       reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    GLOBAL_VAR      reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    CONSTANT        reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    NIL             reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    SYMBOL          reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    LEFT_COR        reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    PERCENTW        reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    ARRAY           reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    $end            reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    END_LOWER       reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)
    NEWLINE         reduce using rule 92 (while_statement -> WHILE condiciones codigo END_LOWER .)


state 218

    (138) unless_expression -> UNLESS boolean_expression THEN expresion . END
    (139) unless_expression -> UNLESS boolean_expression THEN expresion . ELSE expresion END

    END             shift and go to state 253
    ELSE            shift and go to state 254


state 219

    (97) boolean_expression -> expression GREATER expression .

    THEN            reduce using rule 97 (boolean_expression -> expression GREATER expression .)


state 220

    (98) boolean_expression -> expression LESS expression .

    THEN            reduce using rule 98 (boolean_expression -> expression LESS expression .)


state 221

    (99) boolean_expression -> expression GREATER_EQUAL expression .

    THEN            reduce using rule 99 (boolean_expression -> expression GREATER_EQUAL expression .)


state 222

    (100) boolean_expression -> expression LESS_EQUAL expression .

    THEN            reduce using rule 100 (boolean_expression -> expression LESS_EQUAL expression .)


state 223

    (101) boolean_expression -> expression EQUAL expression .

    THEN            reduce using rule 101 (boolean_expression -> expression EQUAL expression .)


state 224

    (102) boolean_expression -> expression NOT_EQUAL expression .

    THEN            reduce using rule 102 (boolean_expression -> expression NOT_EQUAL expression .)


state 225

    (86) hash_access -> var LBRACE value RBRACE .

    ASSIGN          reduce using rule 86 (hash_access -> var LBRACE value RBRACE .)


state 226

    (49) array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .

    PUT             reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    GETS            reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    LOCAL_VAR       reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    INTEGER         reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    FLOAT           reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    STRING          reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    SET             reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    IF              reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    WHILE           reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    UNLESS          reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    INSTANCE_VAR    reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    CLASS_VAR       reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    GLOBAL_VAR      reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    CONSTANT        reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    NIL             reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    SYMBOL          reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    LEFT_COR        reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    PERCENTW        reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    ARRAY           reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    $end            reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    END_LOWER       reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)
    NEWLINE         reduce using rule 49 (array_implicito -> PERCENTW LEFT_COR values_space RIGHT_COR .)


state 227

    (28) values_space -> value SPACE . values_space
    (28) values_space -> . value SPACE values_space
    (29) values_space -> . value
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 178
    values_space                   shift and go to state 255
    num                            shift and go to state 51
    var                            shift and go to state 63

state 228

    (51) array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .

    PUT             reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    GETS            reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    LOCAL_VAR       reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    INTEGER         reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    FLOAT           reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    STRING          reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    SET             reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    IF              reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    WHILE           reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    UNLESS          reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    CLASS_VAR       reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    CONSTANT        reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    NIL             reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    SYMBOL          reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    LEFT_COR        reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    PERCENTW        reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    ARRAY           reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    $end            reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    END_LOWER       reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)
    NEWLINE         reduce using rule 51 (array_creation -> ARRAY LEFTPAR array_explicito RIGHTPAR .)


state 229

    (53) newArray -> ARRAY DOT NEW LEFTPAR . INTEGER RIGHTPAR
    (54) newArray -> ARRAY DOT NEW LEFTPAR . INTEGER COMMA values RIGHTPAR

    INTEGER         shift and go to state 256


state 230

    (153) block_expression -> LBRACE PIPE LOCAL_VAR PIPE . expresion RBRACE
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 257
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 231

    (96) print_statement -> PUT LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 258


state 232

    (93) condition_with_connectors -> condiciones conectores condiciones .
    (59) condiciones -> condiciones conectores condiciones .
    (59) condiciones -> condiciones . conectores condiciones
    (60) conectores -> . AND
    (61) conectores -> . OR
    (62) conectores -> . AND_RESERVED
    (63) conectores -> . OR_RESERVED
    (64) conectores -> . EQUAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND_RESERVED resolved as shift
  ! shift/reduce conflict for OR_RESERVED resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    RBRACE          reduce using rule 93 (condition_with_connectors -> condiciones conectores condiciones .)
    END             reduce using rule 93 (condition_with_connectors -> condiciones conectores condiciones .)
    END_LOWER       reduce using rule 93 (condition_with_connectors -> condiciones conectores condiciones .)
    ELSE            reduce using rule 93 (condition_with_connectors -> condiciones conectores condiciones .)
    AND             shift and go to state 153
    OR              shift and go to state 154
    AND_RESERVED    shift and go to state 155
    OR_RESERVED     shift and go to state 156
    EQUAL           shift and go to state 157

  ! AND             [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! OR              [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! AND_RESERVED    [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! OR_RESERVED     [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]
  ! EQUAL           [ reduce using rule 59 (condiciones -> condiciones conectores condiciones .) ]

    conectores                     shift and go to state 152

state 233

    (154) block_expression -> DO PIPE LOCAL_VAR PIPE . expresion END
    (155) block_expression -> DO PIPE LOCAL_VAR PIPE . expresion END_LOWER
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 259
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 234

    (38) gets -> GETS DOT CHOMP DOT TO_F .

    PUT             reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    GETS            reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    LOCAL_VAR       reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    INTEGER         reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    FLOAT           reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    STRING          reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    SET             reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    IF              reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    WHILE           reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    UNLESS          reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    INSTANCE_VAR    reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    CLASS_VAR       reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    GLOBAL_VAR      reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    CONSTANT        reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    NIL             reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    SYMBOL          reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    LEFT_COR        reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    PERCENTW        reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    ARRAY           reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    $end            reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    RBRACE          reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    END             reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    END_LOWER       reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    NEWLINE         reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)
    ELSE            reduce using rule 38 (gets -> GETS DOT CHOMP DOT TO_F .)


state 235

    (39) gets -> GETS DOT CHOMP DOT TO_I .

    PUT             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    GETS            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    LOCAL_VAR       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    INTEGER         reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    FLOAT           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    STRING          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    SET             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    IF              reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    WHILE           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    UNLESS          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    INSTANCE_VAR    reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    CLASS_VAR       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    GLOBAL_VAR      reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    CONSTANT        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    NIL             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    SYMBOL          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    LEFT_COR        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    PERCENTW        reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    ARRAY           reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    $end            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    RBRACE          reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    END             reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    END_LOWER       reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    NEWLINE         reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)
    ELSE            reduce using rule 39 (gets -> GETS DOT CHOMP DOT TO_I .)


state 236

    (159) proc_call -> LOCAL_VAR DOT CALL LEFTPAR values . RIGHTPAR

    RIGHTPAR        shift and go to state 260


state 237

    (162) proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .

    PUT             reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    GETS            reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    INTEGER         reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    FLOAT           reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    STRING          reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    SET             reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    IF              reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    WHILE           reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    UNLESS          reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    CLASS_VAR       reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    CONSTANT        reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    NIL             reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    SYMBOL          reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    LEFT_COR        reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    PERCENTW        reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    ARRAY           reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    $end            reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    END_LOWER       reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)
    NEWLINE         reduce using rule 162 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR .)


state 238

    (160) proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .

    PUT             reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)
    NEWLINE         reduce using rule 160 (proc_call -> LOCAL_VAR DOT LEFTPAR values RIGHTPAR .)


state 239

    (141) arithmetic_production -> LOCAL_VAR .
    (143) arithmetic_production -> LOCAL_VAR . arithmetic_operators arithmetic_production
    (144) arithmetic_operators -> . PLUS
    (145) arithmetic_operators -> . MINUS
    (146) arithmetic_operators -> . MULTIPLY
    (147) arithmetic_operators -> . DIVIDE
    (148) arithmetic_operators -> . MODULO
    (149) arithmetic_operators -> . EXPONENT

    PUT             reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    GETS            reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    INTEGER         reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    FLOAT           reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    STRING          reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    SET             reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    IF              reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    WHILE           reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    UNLESS          reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    CLASS_VAR       reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    CONSTANT        reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    NIL             reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    SYMBOL          reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    LEFT_COR        reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    PERCENTW        reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    ARRAY           reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    $end            reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    END_LOWER       reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    NEWLINE         reduce using rule 141 (arithmetic_production -> LOCAL_VAR .)
    PLUS            shift and go to state 206
    MINUS           shift and go to state 197
    MULTIPLY        shift and go to state 198
    DIVIDE          shift and go to state 199
    MODULO          shift and go to state 200
    EXPONENT        shift and go to state 201

    arithmetic_operators           shift and go to state 195

state 240

    (143) arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .

    PUT             reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    GETS            reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    LOCAL_VAR       reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    INTEGER         reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    FLOAT           reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    STRING          reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    SET             reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    IF              reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    WHILE           reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    UNLESS          reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    INSTANCE_VAR    reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    CLASS_VAR       reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    GLOBAL_VAR      reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    CONSTANT        reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    NIL             reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    SYMBOL          reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    LEFT_COR        reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    PERCENTW        reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    ARRAY           reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    $end            reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    END_LOWER       reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)
    NEWLINE         reduce using rule 143 (arithmetic_production -> LOCAL_VAR arithmetic_operators arithmetic_production .)


state 241

    (140) arithmetic_production -> num .
    (142) arithmetic_production -> num . arithmetic_operators arithmetic_production
    (144) arithmetic_operators -> . PLUS
    (145) arithmetic_operators -> . MINUS
    (146) arithmetic_operators -> . MULTIPLY
    (147) arithmetic_operators -> . DIVIDE
    (148) arithmetic_operators -> . MODULO
    (149) arithmetic_operators -> . EXPONENT

    PUT             reduce using rule 140 (arithmetic_production -> num .)
    GETS            reduce using rule 140 (arithmetic_production -> num .)
    LOCAL_VAR       reduce using rule 140 (arithmetic_production -> num .)
    INTEGER         reduce using rule 140 (arithmetic_production -> num .)
    FLOAT           reduce using rule 140 (arithmetic_production -> num .)
    STRING          reduce using rule 140 (arithmetic_production -> num .)
    SET             reduce using rule 140 (arithmetic_production -> num .)
    IF              reduce using rule 140 (arithmetic_production -> num .)
    WHILE           reduce using rule 140 (arithmetic_production -> num .)
    UNLESS          reduce using rule 140 (arithmetic_production -> num .)
    INSTANCE_VAR    reduce using rule 140 (arithmetic_production -> num .)
    CLASS_VAR       reduce using rule 140 (arithmetic_production -> num .)
    GLOBAL_VAR      reduce using rule 140 (arithmetic_production -> num .)
    CONSTANT        reduce using rule 140 (arithmetic_production -> num .)
    NIL             reduce using rule 140 (arithmetic_production -> num .)
    SYMBOL          reduce using rule 140 (arithmetic_production -> num .)
    LEFT_COR        reduce using rule 140 (arithmetic_production -> num .)
    PERCENTW        reduce using rule 140 (arithmetic_production -> num .)
    ARRAY           reduce using rule 140 (arithmetic_production -> num .)
    $end            reduce using rule 140 (arithmetic_production -> num .)
    END_LOWER       reduce using rule 140 (arithmetic_production -> num .)
    NEWLINE         reduce using rule 140 (arithmetic_production -> num .)
    PLUS            shift and go to state 206
    MINUS           shift and go to state 197
    MULTIPLY        shift and go to state 198
    DIVIDE          shift and go to state 199
    MODULO          shift and go to state 200
    EXPONENT        shift and go to state 201

    arithmetic_operators           shift and go to state 205

state 242

    (80) concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .

    PUT             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    GETS            reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    INTEGER         reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    FLOAT           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    STRING          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    SET             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    IF              reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    WHILE           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    UNLESS          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    CLASS_VAR       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    CONSTANT        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    NIL             reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    SYMBOL          reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    LEFT_COR        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    PERCENTW        reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    ARRAY           reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    $end            reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    END_LOWER       reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)
    NEWLINE         reduce using rule 80 (concatenar_string -> LOCAL_VAR PLUS LOCAL_VAR .)


state 243

    (79) concatenar_string -> LOCAL_VAR PLUS STRING .

    PUT             reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    GETS            reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    LOCAL_VAR       reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    INTEGER         reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    FLOAT           reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    STRING          reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    SET             reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    IF              reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    WHILE           reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    UNLESS          reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    INSTANCE_VAR    reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    CLASS_VAR       reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    GLOBAL_VAR      reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    CONSTANT        reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    NIL             reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    SYMBOL          reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    LEFT_COR        reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    PERCENTW        reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    ARRAY           reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    $end            reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    END_LOWER       reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)
    NEWLINE         reduce using rule 79 (concatenar_string -> LOCAL_VAR PLUS STRING .)


state 244

    (82) hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .

    PUT             reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    GETS            reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    LOCAL_VAR       reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    INTEGER         reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    FLOAT           reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    STRING          reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    SET             reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    IF              reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    WHILE           reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    UNLESS          reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    INSTANCE_VAR    reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    CLASS_VAR       reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    GLOBAL_VAR      reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    CONSTANT        reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    NIL             reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    SYMBOL          reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    LEFT_COR        reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    PERCENTW        reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    ARRAY           reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    $end            reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    END_LOWER       reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)
    NEWLINE         reduce using rule 82 (hash_var -> LOCAL_VAR ASSIGN LBRACE hash_values RBRACE .)


state 245

    (84) hash_values -> STRING HASH_ROCKET . value
    (85) hash_values -> STRING HASH_ROCKET . value COMMA hash_values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    value                          shift and go to state 261
    num                            shift and go to state 51
    var                            shift and go to state 63

state 246

    (142) arithmetic_production -> num arithmetic_operators arithmetic_production .

    PUT             reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    GETS            reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    LOCAL_VAR       reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    INTEGER         reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    FLOAT           reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    STRING          reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    SET             reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    IF              reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    WHILE           reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    UNLESS          reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    INSTANCE_VAR    reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    CLASS_VAR       reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    GLOBAL_VAR      reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    CONSTANT        reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    NIL             reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    SYMBOL          reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    LEFT_COR        reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    PERCENTW        reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    ARRAY           reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    $end            reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    END_LOWER       reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)
    NEWLINE         reduce using rule 142 (arithmetic_production -> num arithmetic_operators arithmetic_production .)


state 247

    (77) concatenar_string -> STRING PLUS STRING .

    PUT             reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    GETS            reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    LOCAL_VAR       reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    INTEGER         reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    FLOAT           reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    STRING          reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    SET             reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    IF              reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    WHILE           reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    UNLESS          reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    INSTANCE_VAR    reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    CLASS_VAR       reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    GLOBAL_VAR      reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    CONSTANT        reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    NIL             reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    SYMBOL          reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    LEFT_COR        reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    PERCENTW        reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    ARRAY           reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    $end            reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    END_LOWER       reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)
    NEWLINE         reduce using rule 77 (concatenar_string -> STRING PLUS STRING .)


state 248

    (78) concatenar_string -> STRING PLUS LOCAL_VAR .

    PUT             reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    GETS            reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    LOCAL_VAR       reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    INTEGER         reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    FLOAT           reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    STRING          reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    SET             reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    IF              reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    WHILE           reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    UNLESS          reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    INSTANCE_VAR    reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    CLASS_VAR       reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    GLOBAL_VAR      reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    CONSTANT        reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    NIL             reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    SYMBOL          reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    LEFT_COR        reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    PERCENTW        reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    ARRAY           reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    $end            reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    END_LOWER       reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)
    NEWLINE         reduce using rule 78 (concatenar_string -> STRING PLUS LOCAL_VAR .)


state 249

    (157) proc_expression -> PROC DOT NEW . block_expression
    (150) block_expression -> . LBRACE expresion RBRACE
    (151) block_expression -> . DO expresion END
    (152) block_expression -> . DO expresion END_LOWER
    (153) block_expression -> . LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE
    (154) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END
    (155) block_expression -> . DO PIPE LOCAL_VAR PIPE expresion END_LOWER

    LBRACE          shift and go to state 59
    DO              shift and go to state 60

    block_expression               shift and go to state 262

state 250

    (128) set_expression -> SET DOT NEW LEFTPAR LEFT_COR . values RIGHT_COR RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 263
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 251

    (57) ifStatement -> IF condiciones NEWLINE codigo NEWLINE . else_statement END_LOWER
    (75) else_statement -> . ELSE NEWLINE codigo

    ELSE            shift and go to state 265

    else_statement                 shift and go to state 264

state 252

    (56) ifStatement -> IF condiciones NEWLINE codigo END_LOWER .

    PUT             reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    GETS            reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    LOCAL_VAR       reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    INTEGER         reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    FLOAT           reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    STRING          reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    SET             reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    IF              reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    WHILE           reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    UNLESS          reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    INSTANCE_VAR    reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    CLASS_VAR       reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    GLOBAL_VAR      reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    CONSTANT        reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    NIL             reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    SYMBOL          reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    LEFT_COR        reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    PERCENTW        reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    ARRAY           reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    $end            reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    END_LOWER       reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)
    NEWLINE         reduce using rule 56 (ifStatement -> IF condiciones NEWLINE codigo END_LOWER .)


state 253

    (138) unless_expression -> UNLESS boolean_expression THEN expresion END .

    PUT             reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    GETS            reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    LOCAL_VAR       reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    INTEGER         reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    FLOAT           reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    STRING          reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    SET             reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    IF              reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    WHILE           reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    UNLESS          reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    INSTANCE_VAR    reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    CLASS_VAR       reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    GLOBAL_VAR      reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    CONSTANT        reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    NIL             reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    SYMBOL          reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    LEFT_COR        reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    PERCENTW        reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    ARRAY           reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    $end            reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    END_LOWER       reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)
    NEWLINE         reduce using rule 138 (unless_expression -> UNLESS boolean_expression THEN expresion END .)


state 254

    (139) unless_expression -> UNLESS boolean_expression THEN expresion ELSE . expresion END
    (123) expresion -> . puts
    (124) expresion -> . gets
    (125) expresion -> . print_statement
    (165) expresion -> . condition_with_connectors
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (96) print_statement -> . PUT LEFTPAR values RIGHTPAR
    (93) condition_with_connectors -> . condiciones conectores condiciones
    (58) condiciones -> . condicion
    (59) condiciones -> . condiciones conectores condiciones
    (65) condicion -> . num operComp num
    (66) condicion -> . var operComp num
    (67) condicion -> . num operComp var
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 117
    GETS            shift and go to state 15
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    expresion                      shift and go to state 266
    puts                           shift and go to state 113
    gets                           shift and go to state 114
    print_statement                shift and go to state 115
    condition_with_connectors      shift and go to state 116
    condiciones                    shift and go to state 118
    condicion                      shift and go to state 91
    num                            shift and go to state 92
    var                            shift and go to state 93

state 255

    (28) values_space -> value SPACE values_space .

    RIGHT_COR       reduce using rule 28 (values_space -> value SPACE values_space .)


state 256

    (53) newArray -> ARRAY DOT NEW LEFTPAR INTEGER . RIGHTPAR
    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER . COMMA values RIGHTPAR

    RIGHTPAR        shift and go to state 267
    COMMA           shift and go to state 268


state 257

    (153) block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion . RBRACE

    RBRACE          shift and go to state 269


state 258

    (96) print_statement -> PUT LEFTPAR values RIGHTPAR .

    RBRACE          reduce using rule 96 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    END             reduce using rule 96 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 96 (print_statement -> PUT LEFTPAR values RIGHTPAR .)
    ELSE            reduce using rule 96 (print_statement -> PUT LEFTPAR values RIGHTPAR .)


state 259

    (154) block_expression -> DO PIPE LOCAL_VAR PIPE expresion . END
    (155) block_expression -> DO PIPE LOCAL_VAR PIPE expresion . END_LOWER

    END             shift and go to state 270
    END_LOWER       shift and go to state 271


state 260

    (159) proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .

    PUT             reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    GETS            reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    INTEGER         reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    FLOAT           reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    STRING          reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    SET             reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    IF              reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    WHILE           reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    UNLESS          reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    CLASS_VAR       reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    CONSTANT        reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    NIL             reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    SYMBOL          reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    LEFT_COR        reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    PERCENTW        reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    ARRAY           reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    $end            reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    END_LOWER       reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)
    NEWLINE         reduce using rule 159 (proc_call -> LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR .)


state 261

    (84) hash_values -> STRING HASH_ROCKET value .
    (85) hash_values -> STRING HASH_ROCKET value . COMMA hash_values

    RBRACE          reduce using rule 84 (hash_values -> STRING HASH_ROCKET value .)
    COMMA           shift and go to state 272


state 262

    (157) proc_expression -> PROC DOT NEW block_expression .

    PUT             reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    GETS            reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    LOCAL_VAR       reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    INTEGER         reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    FLOAT           reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    STRING          reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    SET             reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    IF              reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    WHILE           reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    UNLESS          reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    INSTANCE_VAR    reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    CLASS_VAR       reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    GLOBAL_VAR      reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    CONSTANT        reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    NIL             reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    SYMBOL          reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    LEFT_COR        reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    PERCENTW        reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    ARRAY           reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    $end            reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    END_LOWER       reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)
    NEWLINE         reduce using rule 157 (proc_expression -> PROC DOT NEW block_expression .)


state 263

    (128) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values . RIGHT_COR RIGHTPAR

    RIGHT_COR       shift and go to state 273


state 264

    (57) ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement . END_LOWER

    END_LOWER       shift and go to state 274


state 265

    (75) else_statement -> ELSE . NEWLINE codigo

    NEWLINE         shift and go to state 275


state 266

    (139) unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion . END

    END             shift and go to state 276


state 267

    (53) newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .

    PUT             reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    GETS            reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    LOCAL_VAR       reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    INTEGER         reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    FLOAT           reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    STRING          reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    SET             reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    IF              reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    WHILE           reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    UNLESS          reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    CLASS_VAR       reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    CONSTANT        reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    NIL             reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    SYMBOL          reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    LEFT_COR        reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    PERCENTW        reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    ARRAY           reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    $end            reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    END_LOWER       reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)
    NEWLINE         reduce using rule 53 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR .)


state 268

    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA . values RIGHTPAR
    (30) values -> . value
    (31) values -> . value COMMA values
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    STRING          shift and go to state 64
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    FLOAT           shift and go to state 65
    INTEGER         shift and go to state 66
    LOCAL_VAR       shift and go to state 67
    INSTANCE_VAR    shift and go to state 68
    CLASS_VAR       shift and go to state 69
    GLOBAL_VAR      shift and go to state 70

    values                         shift and go to state 277
    value                          shift and go to state 62
    num                            shift and go to state 51
    var                            shift and go to state 63

state 269

    (153) block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .

    PUT             reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    GETS            reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    LOCAL_VAR       reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    INTEGER         reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    FLOAT           reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    STRING          reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    SET             reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    IF              reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    WHILE           reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    UNLESS          reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    INSTANCE_VAR    reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    CLASS_VAR       reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    GLOBAL_VAR      reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    CONSTANT        reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    NIL             reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    SYMBOL          reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    LEFT_COR        reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    PERCENTW        reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    ARRAY           reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    $end            reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    END_LOWER       reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)
    NEWLINE         reduce using rule 153 (block_expression -> LBRACE PIPE LOCAL_VAR PIPE expresion RBRACE .)


state 270

    (154) block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .

    PUT             reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    GETS            reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    LOCAL_VAR       reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    INTEGER         reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    FLOAT           reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    STRING          reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    SET             reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    IF              reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    WHILE           reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    UNLESS          reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    INSTANCE_VAR    reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    CLASS_VAR       reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    GLOBAL_VAR      reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    CONSTANT        reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    NIL             reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    SYMBOL          reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    LEFT_COR        reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    PERCENTW        reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    ARRAY           reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    $end            reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    END_LOWER       reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)
    NEWLINE         reduce using rule 154 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END .)


state 271

    (155) block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .

    PUT             reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    GETS            reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    LOCAL_VAR       reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    INTEGER         reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    FLOAT           reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    STRING          reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    SET             reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    IF              reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    WHILE           reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    UNLESS          reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    INSTANCE_VAR    reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    CLASS_VAR       reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    GLOBAL_VAR      reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    CONSTANT        reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    NIL             reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    SYMBOL          reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    LEFT_COR        reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    PERCENTW        reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    ARRAY           reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    $end            reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    END_LOWER       reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)
    NEWLINE         reduce using rule 155 (block_expression -> DO PIPE LOCAL_VAR PIPE expresion END_LOWER .)


state 272

    (85) hash_values -> STRING HASH_ROCKET value COMMA . hash_values
    (84) hash_values -> . STRING HASH_ROCKET value
    (85) hash_values -> . STRING HASH_ROCKET value COMMA hash_values

    STRING          shift and go to state 204

    hash_values                    shift and go to state 278

state 273

    (128) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR . RIGHTPAR

    RIGHTPAR        shift and go to state 279


state 274

    (57) ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .

    PUT             reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    GETS            reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    LOCAL_VAR       reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    INTEGER         reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    FLOAT           reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    STRING          reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    SET             reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    IF              reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    WHILE           reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    UNLESS          reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    INSTANCE_VAR    reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    CLASS_VAR       reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    GLOBAL_VAR      reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    CONSTANT        reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    NIL             reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    SYMBOL          reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    LEFT_COR        reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    PERCENTW        reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    ARRAY           reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    $end            reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    END_LOWER       reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)
    NEWLINE         reduce using rule 57 (ifStatement -> IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER .)


state 275

    (75) else_statement -> ELSE NEWLINE . codigo
    (1) codigo -> . sentencia
    (2) codigo -> . codigo sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    codigo                         shift and go to state 280
    sentencia                      shift and go to state 2
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 276

    (139) unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .

    PUT             reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    GETS            reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    LOCAL_VAR       reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    INTEGER         reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    FLOAT           reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    STRING          reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    SET             reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    IF              reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    WHILE           reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    UNLESS          reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    INSTANCE_VAR    reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    CLASS_VAR       reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    GLOBAL_VAR      reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    CONSTANT        reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    NIL             reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    SYMBOL          reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    LEFT_COR        reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    PERCENTW        reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    ARRAY           reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    $end            reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    END_LOWER       reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)
    NEWLINE         reduce using rule 139 (unless_expression -> UNLESS boolean_expression THEN expresion ELSE expresion END .)


state 277

    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values . RIGHTPAR

    RIGHTPAR        shift and go to state 281


state 278

    (85) hash_values -> STRING HASH_ROCKET value COMMA hash_values .

    RBRACE          reduce using rule 85 (hash_values -> STRING HASH_ROCKET value COMMA hash_values .)


state 279

    (128) set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .

    PUT             reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    GETS            reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    LOCAL_VAR       reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    INTEGER         reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    FLOAT           reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    STRING          reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    SET             reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    IF              reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    WHILE           reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    UNLESS          reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CLASS_VAR       reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CONSTANT        reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    NIL             reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    SYMBOL          reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    LEFT_COR        reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PERCENTW        reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    ARRAY           reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    $end            reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PLUS            reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    MINUS           reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    AMPERSAND       reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    PIPE            reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    CARET           reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    END_LOWER       reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)
    NEWLINE         reduce using rule 128 (set_expression -> SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR .)


state 280

    (75) else_statement -> ELSE NEWLINE codigo .
    (2) codigo -> codigo . sentencia
    (3) sentencia -> . puts
    (4) sentencia -> . gets
    (5) sentencia -> . estructurasDatos
    (6) sentencia -> . estructurasControl
    (7) sentencia -> . method_call
    (8) sentencia -> . block_assignment
    (9) sentencia -> . proc_call
    (10) sentencia -> . declaraciones
    (11) sentencia -> . expression
    (12) sentencia -> . to_string
    (13) sentencia -> . comparador
    (41) puts -> . PUT values
    (38) gets -> . GETS DOT CHOMP DOT TO_F
    (39) gets -> . GETS DOT CHOMP DOT TO_I
    (40) gets -> . GETS DOT CHOMP
    (14) estructurasDatos -> . array
    (15) estructurasDatos -> . acceder_arreglo
    (16) estructurasDatos -> . hash_operations
    (17) estructurasDatos -> . hash_var
    (18) estructurasDatos -> . set_expression
    (19) estructurasDatos -> . set_operations
    (20) estructurasControl -> . ifStatement
    (21) estructurasControl -> . while_statement
    (22) estructurasControl -> . unless_expression
    (94) method_call -> . LOCAL_VAR LEFTPAR values RIGHTPAR
    (95) method_call -> . LOCAL_VAR LEFTPAR RIGHTPAR
    (156) block_assignment -> . method_call block_expression
    (159) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR values RIGHTPAR
    (160) proc_call -> . LOCAL_VAR DOT LEFTPAR values RIGHTPAR
    (161) proc_call -> . LOCAL_VAR LEFT_COR values RIGHT_COR
    (162) proc_call -> . LOCAL_VAR DOT CALL LEFTPAR RIGHTPAR
    (163) proc_call -> . LOCAL_VAR DOT LEFTPAR RIGHTPAR
    (164) proc_call -> . LOCAL_VAR LEFT_COR RIGHT_COR
    (115) declaraciones -> . variable_declaration
    (116) declaraciones -> . store_conditional_result
    (117) declaraciones -> . declare_data_structures
    (118) declaraciones -> . var_arreglo
    (119) declaraciones -> . hash_var
    (120) declaraciones -> . LOCAL_VAR ASSIGN arithmetic_production
    (121) declaraciones -> . declaracion_concatenar_string
    (122) declaraciones -> . proc_assignment
    (106) expression -> . INTEGER
    (107) expression -> . FLOAT
    (108) expression -> . variable
    (109) expression -> . STRING
    (76) to_string -> . LOCAL_VAR DOT TO_S
    (126) comparador -> . value EQUAL value
    (127) comparador -> . value COMPARE value
    (42) array -> . array_explicito
    (43) array -> . array_implicito
    (44) array -> . array_creation
    (45) array -> . newArray
    (55) acceder_arreglo -> . var_arreglo LEFT_COR INTEGER RIGHT_COR
    (87) hash_operations -> . hash_access ASSIGN value
    (82) hash_var -> . LOCAL_VAR ASSIGN LBRACE hash_values RBRACE
    (83) hash_var -> . LOCAL_VAR ASSIGN LBRACE RBRACE
    (128) set_expression -> . SET DOT NEW LEFTPAR LEFT_COR values RIGHT_COR RIGHTPAR
    (129) set_expression -> . SET LEFT_COR values RIGHT_COR
    (130) set_operations -> . set_expression
    (131) set_operations -> . set_operations set_binary_operators set_expression
    (56) ifStatement -> . IF condiciones NEWLINE codigo END_LOWER
    (57) ifStatement -> . IF condiciones NEWLINE codigo NEWLINE else_statement END_LOWER
    (92) while_statement -> . WHILE condiciones codigo END_LOWER
    (138) unless_expression -> . UNLESS boolean_expression THEN expresion END
    (139) unless_expression -> . UNLESS boolean_expression THEN expresion ELSE expresion END
    (88) variable_declaration -> . LOCAL_VAR ASSIGN value
    (89) store_conditional_result -> . LOCAL_VAR ASSIGN condiciones
    (90) declare_data_structures -> . var_arreglo
    (91) declare_data_structures -> . hash_var
    (132) declare_data_structures -> . LOCAL_VAR ASSIGN set_expression
    (46) var_arreglo -> . LOCAL_VAR ASSIGN array
    (81) declaracion_concatenar_string -> . LOCAL_VAR ASSIGN concatenar_string
    (158) proc_assignment -> . LOCAL_VAR ASSIGN proc_expression
    (110) variable -> . LOCAL_VAR
    (111) variable -> . INSTANCE_VAR
    (112) variable -> . CLASS_VAR
    (113) variable -> . GLOBAL_VAR
    (114) variable -> . CONSTANT
    (23) value -> . num
    (24) value -> . var
    (25) value -> . STRING
    (26) value -> . NIL
    (27) value -> . SYMBOL
    (47) array_explicito -> . LEFT_COR values RIGHT_COR
    (48) array_explicito -> . LEFT_COR RIGHT_COR
    (49) array_implicito -> . PERCENTW LEFT_COR values_space RIGHT_COR
    (50) array_implicito -> . PERCENTW LEFT_COR RIGHT_COR
    (51) array_creation -> . ARRAY LEFTPAR array_explicito RIGHTPAR
    (52) newArray -> . ARRAY DOT NEW
    (53) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER RIGHTPAR
    (54) newArray -> . ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR
    (86) hash_access -> . var LBRACE value RBRACE
    (36) num -> . FLOAT
    (37) num -> . INTEGER
    (32) var -> . LOCAL_VAR
    (33) var -> . INSTANCE_VAR
    (34) var -> . CLASS_VAR
    (35) var -> . GLOBAL_VAR

    END_LOWER       reduce using rule 75 (else_statement -> ELSE NEWLINE codigo .)
    PUT             shift and go to state 14
    GETS            shift and go to state 15
    LOCAL_VAR       shift and go to state 25
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 36
    SET             shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    UNLESS          shift and go to state 46
    INSTANCE_VAR    shift and go to state 47
    CLASS_VAR       shift and go to state 48
    GLOBAL_VAR      shift and go to state 49
    CONSTANT        shift and go to state 50
    NIL             shift and go to state 53
    SYMBOL          shift and go to state 54
    LEFT_COR        shift and go to state 26
    PERCENTW        shift and go to state 55
    ARRAY           shift and go to state 56

    sentencia                      shift and go to state 57
    puts                           shift and go to state 3
    gets                           shift and go to state 4
    estructurasDatos               shift and go to state 5
    estructurasControl             shift and go to state 6
    method_call                    shift and go to state 7
    block_assignment               shift and go to state 8
    proc_call                      shift and go to state 9
    declaraciones                  shift and go to state 10
    expression                     shift and go to state 11
    to_string                      shift and go to state 12
    comparador                     shift and go to state 13
    array                          shift and go to state 16
    acceder_arreglo                shift and go to state 17
    hash_operations                shift and go to state 18
    hash_var                       shift and go to state 19
    set_expression                 shift and go to state 20
    set_operations                 shift and go to state 21
    ifStatement                    shift and go to state 22
    while_statement                shift and go to state 23
    unless_expression              shift and go to state 24
    variable_declaration           shift and go to state 27
    store_conditional_result       shift and go to state 28
    declare_data_structures        shift and go to state 29
    var_arreglo                    shift and go to state 30
    declaracion_concatenar_string  shift and go to state 31
    proc_assignment                shift and go to state 32
    variable                       shift and go to state 35
    value                          shift and go to state 37
    array_explicito                shift and go to state 38
    array_implicito                shift and go to state 39
    array_creation                 shift and go to state 40
    newArray                       shift and go to state 41
    hash_access                    shift and go to state 42
    num                            shift and go to state 51
    var                            shift and go to state 52

state 281

    (54) newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .

    PUT             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    GETS            reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    LOCAL_VAR       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    INTEGER         reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    FLOAT           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    STRING          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    SET             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    IF              reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    WHILE           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    UNLESS          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    INSTANCE_VAR    reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    CLASS_VAR       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    GLOBAL_VAR      reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    CONSTANT        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    NIL             reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    SYMBOL          reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    LEFT_COR        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    PERCENTW        reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    ARRAY           reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    $end            reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    END_LOWER       reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)
    NEWLINE         reduce using rule 54 (newArray -> ARRAY DOT NEW LEFTPAR INTEGER COMMA values RIGHTPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_COR in state 25 resolved as shift
WARNING: shift/reduce conflict for LEFT_COR in state 30 resolved as shift
WARNING: shift/reduce conflict for LEFT_COR in state 30 resolved as shift
WARNING: shift/reduce conflict for LOCAL_VAR in state 196 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for AND_RESERVED in state 213 resolved as shift
WARNING: shift/reduce conflict for OR_RESERVED in state 213 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 232 resolved as shift
WARNING: shift/reduce conflict for OR in state 232 resolved as shift
WARNING: shift/reduce conflict for AND_RESERVED in state 232 resolved as shift
WARNING: shift/reduce conflict for OR_RESERVED in state 232 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 232 resolved as shift
WARNING: reduce/reduce conflict in state 19 resolved using rule (estructurasDatos -> hash_var)
WARNING: rejected rule (declaraciones -> hash_var) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (estructurasDatos -> hash_var)
WARNING: rejected rule (declare_data_structures -> hash_var) in state 19
WARNING: reduce/reduce conflict in state 20 resolved using rule (estructurasDatos -> set_expression)
WARNING: rejected rule (set_operations -> set_expression) in state 20
WARNING: reduce/reduce conflict in state 30 resolved using rule (declare_data_structures -> var_arreglo)
WARNING: rejected rule (declaraciones -> var_arreglo) in state 30
WARNING: reduce/reduce conflict in state 131 resolved using rule (var -> LOCAL_VAR)
WARNING: rejected rule (arithmetic_production -> LOCAL_VAR) in state 131
WARNING: reduce/reduce conflict in state 140 resolved using rule (value -> num)
WARNING: rejected rule (arithmetic_production -> num) in state 140
WARNING: Rule (declaraciones -> hash_var) is never reduced
WARNING: Rule (declare_data_structures -> hash_var) is never reduced
WARNING: Rule (declaraciones -> var_arreglo) is never reduced
